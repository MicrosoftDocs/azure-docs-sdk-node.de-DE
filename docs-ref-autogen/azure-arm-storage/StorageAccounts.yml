### YamlMime:UniversalReference
items:
  - uid: azure-arm-storage.StorageAccounts
    name: StorageAccounts
    fullName: StorageAccounts
    children:
      - azure-arm-storage.StorageAccounts.beginCreate
      - azure-arm-storage.StorageAccounts.beginCreate_2
      - azure-arm-storage.StorageAccounts.beginCreate_1
      - azure-arm-storage.StorageAccounts.beginCreateWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.beginFailover
      - azure-arm-storage.StorageAccounts.beginFailover_2
      - azure-arm-storage.StorageAccounts.beginFailover_1
      - azure-arm-storage.StorageAccounts.beginFailoverWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.checkNameAvailability
      - azure-arm-storage.StorageAccounts.checkNameAvailability_2
      - azure-arm-storage.StorageAccounts.checkNameAvailability_1
      - azure-arm-storage.StorageAccounts.checkNameAvailabilityWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.create
      - azure-arm-storage.StorageAccounts.create_2
      - azure-arm-storage.StorageAccounts.create_1
      - azure-arm-storage.StorageAccounts.createWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.deleteMethod
      - azure-arm-storage.StorageAccounts.deleteMethod_2
      - azure-arm-storage.StorageAccounts.deleteMethod_1
      - azure-arm-storage.StorageAccounts.deleteMethodWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.failover
      - azure-arm-storage.StorageAccounts.failover_2
      - azure-arm-storage.StorageAccounts.failover_1
      - azure-arm-storage.StorageAccounts.failoverWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.getProperties
      - azure-arm-storage.StorageAccounts.getProperties_2
      - azure-arm-storage.StorageAccounts.getProperties_1
      - azure-arm-storage.StorageAccounts.getPropertiesWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.list
      - azure-arm-storage.StorageAccounts.list_2
      - azure-arm-storage.StorageAccounts.list_1
      - azure-arm-storage.StorageAccounts.listAccountSAS
      - azure-arm-storage.StorageAccounts.listAccountSAS_2
      - azure-arm-storage.StorageAccounts.listAccountSAS_1
      - azure-arm-storage.StorageAccounts.listAccountSASWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.listByResourceGroup
      - azure-arm-storage.StorageAccounts.listByResourceGroup_2
      - azure-arm-storage.StorageAccounts.listByResourceGroup_1
      - azure-arm-storage.StorageAccounts.listByResourceGroupWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.listKeys
      - azure-arm-storage.StorageAccounts.listKeys_2
      - azure-arm-storage.StorageAccounts.listKeys_1
      - azure-arm-storage.StorageAccounts.listKeysWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.listServiceSAS
      - azure-arm-storage.StorageAccounts.listServiceSAS_2
      - azure-arm-storage.StorageAccounts.listServiceSAS_1
      - azure-arm-storage.StorageAccounts.listServiceSASWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.listWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.regenerateKey
      - azure-arm-storage.StorageAccounts.regenerateKey_2
      - azure-arm-storage.StorageAccounts.regenerateKey_1
      - azure-arm-storage.StorageAccounts.regenerateKeyWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.revokeUserDelegationKeys
      - azure-arm-storage.StorageAccounts.revokeUserDelegationKeys_2
      - azure-arm-storage.StorageAccounts.revokeUserDelegationKeys_1
      - azure-arm-storage.StorageAccounts.revokeUserDelegationKeysWithHttpOperationResponse
      - azure-arm-storage.StorageAccounts.update
      - azure-arm-storage.StorageAccounts.update_2
      - azure-arm-storage.StorageAccounts.update_1
      - azure-arm-storage.StorageAccounts.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginCreate
    name: 'beginCreate(string, string, StorageAccountCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellt asynchron ein neues Speicherkonto mit den angegebenen Parametern ein.
      Wenn bereits ein Konto erstellt wird, und eine nachfolgende erstellungsanforderung mit verschiedenen Eigenschaften ausgegeben wird, werden die Kontoeigenschaften aktualisiert. Wenn bereits ein Konto erstellt wird, und eine nachfolgende Anforderung von erstellungs- oder Aktualisierungsvorgang mit dem genau gleichen Satz von Eigenschaften ausgegeben wird, wird die Anforderung erfolgreich ausgeführt.
    syntax:
      content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: |
            Die Parameter für das erstellte Konto bereitstellen.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginCreate_2
    name: 'beginCreate(string, string, StorageAccountCreateParameters, Object, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellt asynchron ein neues Speicherkonto mit den angegebenen Parametern ein.
      Wenn bereits ein Konto erstellt wird, und eine nachfolgende erstellungsanforderung mit verschiedenen Eigenschaften ausgegeben wird, werden die Kontoeigenschaften aktualisiert. Wenn bereits ein Konto erstellt wird, und eine nachfolgende Anforderung von erstellungs- oder Aktualisierungsvorgang mit dem genau gleichen Satz von Eigenschaften ausgegeben wird, wird die Anforderung erfolgreich ausgeführt.
    syntax:
      content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginCreate_1
    name: 'beginCreate(string, string, StorageAccountCreateParameters, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellt asynchron ein neues Speicherkonto mit den angegebenen Parametern ein.
      Wenn bereits ein Konto erstellt wird, und eine nachfolgende erstellungsanforderung mit verschiedenen Eigenschaften ausgegeben wird, werden die Kontoeigenschaften aktualisiert. Wenn bereits ein Konto erstellt wird, und eine nachfolgende Anforderung von erstellungs- oder Aktualisierungsvorgang mit dem genau gleichen Satz von Eigenschaften ausgegeben wird, wird die Anforderung erfolgreich ausgeführt.
    syntax:
      content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginCreateWithHttpOperationResponse
    name: 'beginCreateWithHttpOperationResponse(string, string, StorageAccountCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellt asynchron ein neues Speicherkonto mit den angegebenen Parametern ein.
      Wenn bereits ein Konto erstellt wird, und eine nachfolgende erstellungsanforderung mit verschiedenen Eigenschaften ausgegeben wird, werden die Kontoeigenschaften aktualisiert. Wenn bereits ein Konto erstellt wird, und eine nachfolgende Anforderung von erstellungs- oder Aktualisierungsvorgang mit dem genau gleichen Satz von Eigenschaften ausgegeben wird, wird die Anforderung erfolgreich ausgeführt.
    syntax:
      content: 'function beginCreateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: |
            Die Parameter für das erstellte Konto bereitstellen.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginFailover
    name: 'beginFailover(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Failover-Anforderung kann für ein Speicherkonto im Fall von Verfügbarkeitsproblemen ausgelöst werden. Das Failover tritt auf, das Speicherkonto des primären Clusters in sekundären Cluster für RA-GRS-Konten aus. Der sekundäre Cluster wird nach einem Failover zur primären Datenbank.'
    syntax:
      content: 'function beginFailover(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginFailover_2
    name: 'beginFailover(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Failover-Anforderung kann für ein Speicherkonto im Fall von Verfügbarkeitsproblemen ausgelöst werden. Das Failover tritt auf, das Speicherkonto des primären Clusters in sekundären Cluster für RA-GRS-Konten aus. Der sekundäre Cluster wird nach einem Failover zur primären Datenbank.'
    syntax:
      content: 'function beginFailover(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginFailover_1
    name: 'beginFailover(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Failover-Anforderung kann für ein Speicherkonto im Fall von Verfügbarkeitsproblemen ausgelöst werden. Das Failover tritt auf, das Speicherkonto des primären Clusters in sekundären Cluster für RA-GRS-Konten aus. Der sekundäre Cluster wird nach einem Failover zur primären Datenbank.'
    syntax:
      content: 'function beginFailover(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.beginFailoverWithHttpOperationResponse
    name: 'beginFailoverWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Failover-Anforderung kann für ein Speicherkonto im Fall von Verfügbarkeitsproblemen ausgelöst werden. Das Failover tritt auf, das Speicherkonto des primären Clusters in sekundären Cluster für RA-GRS-Konten aus. Der sekundäre Cluster wird nach einem Failover zur primären Datenbank.'
    syntax:
      content: 'function beginFailoverWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.checkNameAvailability
    name: 'checkNameAvailability(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Überprüft, ob der Name des Speicherkontos ist gültig und nicht bereits verwendet.'
    syntax:
      content: 'function checkNameAvailability(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            Der Name des Speicherkontos.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.CheckNameAvailabilityResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.checkNameAvailability_2
    name: 'checkNameAvailability(string, Object, ServiceCallback<CheckNameAvailabilityResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Überprüft, ob der Name des Speicherkontos ist gültig und nicht bereits verwendet.'
    syntax:
      content: 'function checkNameAvailability(name: string, options: Object, callback: ServiceCallback<CheckNameAvailabilityResult>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.CheckNameAvailabilityResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.checkNameAvailability_1
    name: 'checkNameAvailability(string, ServiceCallback<CheckNameAvailabilityResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Überprüft, ob der Name des Speicherkontos ist gültig und nicht bereits verwendet.'
    syntax:
      content: 'function checkNameAvailability(name: string, callback: ServiceCallback<CheckNameAvailabilityResult>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.CheckNameAvailabilityResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.checkNameAvailabilityWithHttpOperationResponse
    name: 'checkNameAvailabilityWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Überprüft, ob der Name des Speicherkontos ist gültig und nicht bereits verwendet.'
    syntax:
      content: 'function checkNameAvailabilityWithHttpOperationResponse(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            Der Name des Speicherkontos.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.CheckNameAvailabilityResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.create
    name: 'create(string, string, StorageAccountCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellt asynchron ein neues Speicherkonto mit den angegebenen Parametern ein.
      Wenn bereits ein Konto erstellt wird, und eine nachfolgende erstellungsanforderung mit verschiedenen Eigenschaften ausgegeben wird, werden die Kontoeigenschaften aktualisiert. Wenn bereits ein Konto erstellt wird, und eine nachfolgende Anforderung von erstellungs- oder Aktualisierungsvorgang mit dem genau gleichen Satz von Eigenschaften ausgegeben wird, wird die Anforderung erfolgreich ausgeführt.
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: |
            Die Parameter für das erstellte Konto bereitstellen.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.create_2
    name: 'create(string, string, StorageAccountCreateParameters, Object, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellt asynchron ein neues Speicherkonto mit den angegebenen Parametern ein.
      Wenn bereits ein Konto erstellt wird, und eine nachfolgende erstellungsanforderung mit verschiedenen Eigenschaften ausgegeben wird, werden die Kontoeigenschaften aktualisiert. Wenn bereits ein Konto erstellt wird, und eine nachfolgende Anforderung von erstellungs- oder Aktualisierungsvorgang mit dem genau gleichen Satz von Eigenschaften ausgegeben wird, wird die Anforderung erfolgreich ausgeführt.
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.create_1
    name: 'create(string, string, StorageAccountCreateParameters, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellt asynchron ein neues Speicherkonto mit den angegebenen Parametern ein.
      Wenn bereits ein Konto erstellt wird, und eine nachfolgende erstellungsanforderung mit verschiedenen Eigenschaften ausgegeben wird, werden die Kontoeigenschaften aktualisiert. Wenn bereits ein Konto erstellt wird, und eine nachfolgende Anforderung von erstellungs- oder Aktualisierungsvorgang mit dem genau gleichen Satz von Eigenschaften ausgegeben wird, wird die Anforderung erfolgreich ausgeführt.
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.createWithHttpOperationResponse
    name: 'createWithHttpOperationResponse(string, string, StorageAccountCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellt asynchron ein neues Speicherkonto mit den angegebenen Parametern ein.
      Wenn bereits ein Konto erstellt wird, und eine nachfolgende erstellungsanforderung mit verschiedenen Eigenschaften ausgegeben wird, werden die Kontoeigenschaften aktualisiert. Wenn bereits ein Konto erstellt wird, und eine nachfolgende Anforderung von erstellungs- oder Aktualisierungsvorgang mit dem genau gleichen Satz von Eigenschaften ausgegeben wird, wird die Anforderung erfolgreich ausgeführt.
    syntax:
      content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountCreateParameters
          description: |
            Die Parameter für das erstellte Konto bereitstellen.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht ein Speicherkonto in Microsoft Azure.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht ein Speicherkonto in Microsoft Azure.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht ein Speicherkonto in Microsoft Azure.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht ein Speicherkonto in Microsoft Azure.
    syntax:
      content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.failover
    name: 'failover(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Failover-Anforderung kann für ein Speicherkonto im Fall von Verfügbarkeitsproblemen ausgelöst werden. Das Failover tritt auf, das Speicherkonto des primären Clusters in sekundären Cluster für RA-GRS-Konten aus. Der sekundäre Cluster wird nach einem Failover zur primären Datenbank.'
    syntax:
      content: 'function failover(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.failover_2
    name: 'failover(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Failover-Anforderung kann für ein Speicherkonto im Fall von Verfügbarkeitsproblemen ausgelöst werden. Das Failover tritt auf, das Speicherkonto des primären Clusters in sekundären Cluster für RA-GRS-Konten aus. Der sekundäre Cluster wird nach einem Failover zur primären Datenbank.'
    syntax:
      content: 'function failover(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.failover_1
    name: 'failover(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Failover-Anforderung kann für ein Speicherkonto im Fall von Verfügbarkeitsproblemen ausgelöst werden. Das Failover tritt auf, das Speicherkonto des primären Clusters in sekundären Cluster für RA-GRS-Konten aus. Der sekundäre Cluster wird nach einem Failover zur primären Datenbank.'
    syntax:
      content: 'function failover(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.failoverWithHttpOperationResponse
    name: 'failoverWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Failover-Anforderung kann für ein Speicherkonto im Fall von Verfügbarkeitsproblemen ausgelöst werden. Das Failover tritt auf, das Speicherkonto des primären Clusters in sekundären Cluster für RA-GRS-Konten aus. Der sekundäre Cluster wird nach einem Failover zur primären Datenbank.'
    syntax:
      content: 'function failoverWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.getProperties
    name: 'getProperties(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gibt die Eigenschaften für das angegebene Speicherkonto an, einschließlich, aber nicht beschränkt auf Name, SKU-Namen, Speicherort und Kontostatus zurück. Die ListKeys-Vorgang sollte verwendet werden, um die Speicherkonto-Zugriffsschlüssel.'
    syntax:
      content: 'function getProperties(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.getProperties_2
    name: 'getProperties(string, string, Object, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gibt die Eigenschaften für das angegebene Speicherkonto an, einschließlich, aber nicht beschränkt auf Name, SKU-Namen, Speicherort und Kontostatus zurück. Die ListKeys-Vorgang sollte verwendet werden, um die Speicherkonto-Zugriffsschlüssel.'
    syntax:
      content: 'function getProperties(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.getProperties_1
    name: 'getProperties(string, string, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gibt die Eigenschaften für das angegebene Speicherkonto an, einschließlich, aber nicht beschränkt auf Name, SKU-Namen, Speicherort und Kontostatus zurück. Die ListKeys-Vorgang sollte verwendet werden, um die Speicherkonto-Zugriffsschlüssel.'
    syntax:
      content: 'function getProperties(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.getPropertiesWithHttpOperationResponse
    name: 'getPropertiesWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gibt die Eigenschaften für das angegebene Speicherkonto an, einschließlich, aber nicht beschränkt auf Name, SKU-Namen, Speicherort und Kontostatus zurück. Die ListKeys-Vorgang sollte verwendet werden, um die Speicherkonto-Zugriffsschlüssel.'
    syntax:
      content: 'function getPropertiesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Listet alle Speicherkonten im Abonnement verfügbar sind. Beachten Sie, dass die speicherkontoschlüssel nicht zurückgegeben werden. Verwenden Sie die ListKeys-Vorgang für diesen ein.'
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.list_2
    name: 'list(Object, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Listet alle Speicherkonten im Abonnement verfügbar sind. Beachten Sie, dass die speicherkontoschlüssel nicht zurückgegeben werden. Verwenden Sie die ListKeys-Vorgang für diesen ein.'
    syntax:
      content: 'function list(options: Object, callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.list_1
    name: list(ServiceCallback<StorageAccountListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Listet alle Speicherkonten im Abonnement verfügbar sind. Beachten Sie, dass die speicherkontoschlüssel nicht zurückgegeben werden. Verwenden Sie die ListKeys-Vorgang für diesen ein.'
    syntax:
      content: 'function list(callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listAccountSAS
    name: 'listAccountSAS(string, string, AccountSasParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Auflisten von SAS-Anmeldeinformationen eines Speicherkontos.
    syntax:
      content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.AccountSasParameters
          description: |
            Die Parameter zum Auflisten von SAS-Anmeldeinformationen für das Speicherkonto angeben.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ListAccountSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listAccountSAS_2
    name: 'listAccountSAS(string, string, AccountSasParameters, Object, ServiceCallback<ListAccountSasResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Auflisten von SAS-Anmeldeinformationen eines Speicherkontos.
    syntax:
      content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options: Object, callback: ServiceCallback<ListAccountSasResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.AccountSasParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListAccountSasResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListAccountSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listAccountSAS_1
    name: 'listAccountSAS(string, string, AccountSasParameters, ServiceCallback<ListAccountSasResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Auflisten von SAS-Anmeldeinformationen eines Speicherkontos.
    syntax:
      content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, callback: ServiceCallback<ListAccountSasResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.AccountSasParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListAccountSasResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListAccountSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listAccountSASWithHttpOperationResponse
    name: 'listAccountSASWithHttpOperationResponse(string, string, AccountSasParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Auflisten von SAS-Anmeldeinformationen eines Speicherkontos.
    syntax:
      content: 'function listAccountSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.AccountSasParameters
          description: |
            Die Parameter zum Auflisten von SAS-Anmeldeinformationen für das Speicherkonto angeben.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ListAccountSasResponse>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listByResourceGroup
    name: 'listByResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Listet alle Speicherkonten zur Verfügung, unter der angegebenen Ressourcengruppe.
      Beachten Sie, dass die speicherkontoschlüssel nicht zurückgegeben werden. Verwenden Sie die ListKeys-Vorgang für diesen ein.
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listByResourceGroup_2
    name: 'listByResourceGroup(string, Object, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Listet alle Speicherkonten zur Verfügung, unter der angegebenen Ressourcengruppe.
      Beachten Sie, dass die speicherkontoschlüssel nicht zurückgegeben werden. Verwenden Sie die ListKeys-Vorgang für diesen ein.
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: Object, callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listByResourceGroup_1
    name: 'listByResourceGroup(string, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Listet alle Speicherkonten zur Verfügung, unter der angegebenen Ressourcengruppe.
      Beachten Sie, dass die speicherkontoschlüssel nicht zurückgegeben werden. Verwenden Sie die ListKeys-Vorgang für diesen ein.
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listByResourceGroupWithHttpOperationResponse
    name: 'listByResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Listet alle Speicherkonten zur Verfügung, unter der angegebenen Ressourcengruppe.
      Beachten Sie, dass die speicherkontoschlüssel nicht zurückgegeben werden. Verwenden Sie die ListKeys-Vorgang für diesen ein.
    syntax:
      content: 'function listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listKeys
    name: 'listKeys(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet die Zugriffsschlüssel für das angegebene Speicherkonto an.
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listKeys_2
    name: 'listKeys(string, string, Object, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet die Zugriffsschlüssel für das angegebene Speicherkonto an.
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<StorageAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listKeys_1
    name: 'listKeys(string, string, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet die Zugriffsschlüssel für das angegebene Speicherkonto an.
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listKeysWithHttpOperationResponse
    name: 'listKeysWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet die Zugriffsschlüssel für das angegebene Speicherkonto an.
    syntax:
      content: 'function listKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listServiceSAS
    name: 'listServiceSAS(string, string, ServiceSasParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listen Sie die Dienst-SAS-Anmeldeinformationen einer bestimmten Ressource.
    syntax:
      content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.ServiceSasParameters
          description: |
            Die Parameter zum Auflisten von Dienst-SAS-Anmeldeinformationen angeben.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ListServiceSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listServiceSAS_2
    name: 'listServiceSAS(string, string, ServiceSasParameters, Object, ServiceCallback<ListServiceSasResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listen Sie die Dienst-SAS-Anmeldeinformationen einer bestimmten Ressource.
    syntax:
      content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options: Object, callback: ServiceCallback<ListServiceSasResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.ServiceSasParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListServiceSasResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListServiceSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listServiceSAS_1
    name: 'listServiceSAS(string, string, ServiceSasParameters, ServiceCallback<ListServiceSasResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listen Sie die Dienst-SAS-Anmeldeinformationen einer bestimmten Ressource.
    syntax:
      content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, callback: ServiceCallback<ListServiceSasResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.ServiceSasParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListServiceSasResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListServiceSasResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listServiceSASWithHttpOperationResponse
    name: 'listServiceSASWithHttpOperationResponse(string, string, ServiceSasParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listen Sie die Dienst-SAS-Anmeldeinformationen einer bestimmten Ressource.
    syntax:
      content: 'function listServiceSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.ServiceSasParameters
          description: |
            Die Parameter zum Auflisten von Dienst-SAS-Anmeldeinformationen angeben.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ListServiceSasResponse>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Listet alle Speicherkonten im Abonnement verfügbar sind. Beachten Sie, dass die speicherkontoschlüssel nicht zurückgegeben werden. Verwenden Sie die ListKeys-Vorgang für diesen ein.'
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.regenerateKey
    name: 'regenerateKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Generiert erneut einen der Zugriffsschlüssel für das angegebene Speicherkonto an.
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: keyName
          type:
            - string
          description: |
            Der Name der Speicherschlüssel, die möchten, werden erneut generiert, mögliche Werte sind key1, key2.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.regenerateKey_2
    name: 'regenerateKey(string, string, string, Object, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Generiert erneut einen der Zugriffsschlüssel für das angegebene Speicherkonto an.
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options: Object, callback: ServiceCallback<StorageAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.regenerateKey_1
    name: 'regenerateKey(string, string, string, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Generiert erneut einen der Zugriffsschlüssel für das angegebene Speicherkonto an.
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, callback: ServiceCallback<StorageAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccountListKeysResult>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.regenerateKeyWithHttpOperationResponse
    name: 'regenerateKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Generiert erneut einen der Zugriffsschlüssel für das angegebene Speicherkonto an.
    syntax:
      content: 'function regenerateKeyWithHttpOperationResponse(resourceGroupName: string, accountName: string, keyName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: keyName
          type:
            - string
          description: |
            Der Name der Speicherschlüssel, die möchten, werden erneut generiert, mögliche Werte sind key1, key2.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.revokeUserDelegationKeys
    name: 'revokeUserDelegationKeys(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Widerrufen Sie die Delegierung Benutzerschlüssel.
    syntax:
      content: 'function revokeUserDelegationKeys(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.revokeUserDelegationKeys_2
    name: 'revokeUserDelegationKeys(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Widerrufen Sie die Delegierung Benutzerschlüssel.
    syntax:
      content: 'function revokeUserDelegationKeys(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.revokeUserDelegationKeys_1
    name: 'revokeUserDelegationKeys(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Widerrufen Sie die Delegierung Benutzerschlüssel.
    syntax:
      content: 'function revokeUserDelegationKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.revokeUserDelegationKeysWithHttpOperationResponse
    name: 'revokeUserDelegationKeysWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Widerrufen Sie die Delegierung Benutzerschlüssel.
    syntax:
      content: 'function revokeUserDelegationKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.update
    name: 'update(string, string, StorageAccountUpdateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Der Update-Vorgang kann zum Aktualisieren der SKU, Verschlüsselung, Zugriffsebene oder Tags für ein Speicherkonto verwendet werden. Sie können auch verwendet werden, um das Konto zu einer benutzerdefinierten Domäne zuordnen. Nur eine benutzerdefinierte Domäne wird pro Speicherkonto; unterstützt. die Ersetzung/Änderung der benutzerdefinierten Domäne wird nicht unterstützt. Um einer alten benutzerdefinierten Domäne zu ersetzen, muss der alte Wert gelöscht/aufgehoben sein, bevor ein neuer Wert festgelegt werden kann. Das Update aus mehreren Eigenschaften wird unterstützt. Dieser Aufruf ändert sich nicht auf die Speicherschlüssel für das Konto aus. Wenn Sie den Schlüssel des Speicherkontos ändern möchten, verwenden Sie den Schlüssel erneut generieren-Vorgang. Der Speicherort und den Namen des Speicherkontos können nicht nach der Erstellung nicht geändert werden.'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountUpdateParameters
          description: |
            Die Parameter für die aktualisierte Konto angeben.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.update_2
    name: 'update(string, string, StorageAccountUpdateParameters, Object, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Der Update-Vorgang kann zum Aktualisieren der SKU, Verschlüsselung, Zugriffsebene oder Tags für ein Speicherkonto verwendet werden. Sie können auch verwendet werden, um das Konto zu einer benutzerdefinierten Domäne zuordnen. Nur eine benutzerdefinierte Domäne wird pro Speicherkonto; unterstützt. die Ersetzung/Änderung der benutzerdefinierten Domäne wird nicht unterstützt. Um einer alten benutzerdefinierten Domäne zu ersetzen, muss der alte Wert gelöscht/aufgehoben sein, bevor ein neuer Wert festgelegt werden kann. Das Update aus mehreren Eigenschaften wird unterstützt. Dieser Aufruf ändert sich nicht auf die Speicherschlüssel für das Konto aus. Wenn Sie den Schlüssel des Speicherkontos ändern möchten, verwenden Sie den Schlüssel erneut generieren-Vorgang. Der Speicherort und den Namen des Speicherkontos können nicht nach der Erstellung nicht geändert werden.'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountUpdateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.update_1
    name: 'update(string, string, StorageAccountUpdateParameters, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Der Update-Vorgang kann zum Aktualisieren der SKU, Verschlüsselung, Zugriffsebene oder Tags für ein Speicherkonto verwendet werden. Sie können auch verwendet werden, um das Konto zu einer benutzerdefinierten Domäne zuordnen. Nur eine benutzerdefinierte Domäne wird pro Speicherkonto; unterstützt. die Ersetzung/Änderung der benutzerdefinierten Domäne wird nicht unterstützt. Um einer alten benutzerdefinierten Domäne zu ersetzen, muss der alte Wert gelöscht/aufgehoben sein, bevor ein neuer Wert festgelegt werden kann. Das Update aus mehreren Eigenschaften wird unterstützt. Dieser Aufruf ändert sich nicht auf die Speicherschlüssel für das Konto aus. Wenn Sie den Schlüssel des Speicherkontos ändern möchten, verwenden Sie den Schlüssel erneut generieren-Vorgang. Der Speicherort und den Namen des Speicherkontos können nicht nach der Erstellung nicht geändert werden.'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, callback: ServiceCallback<StorageAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.StorageAccount>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.StorageAccount>
    package: azure-arm-storage
  - uid: azure-arm-storage.StorageAccounts.updateWithHttpOperationResponse
    name: 'updateWithHttpOperationResponse(string, string, StorageAccountUpdateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Der Update-Vorgang kann zum Aktualisieren der SKU, Verschlüsselung, Zugriffsebene oder Tags für ein Speicherkonto verwendet werden. Sie können auch verwendet werden, um das Konto zu einer benutzerdefinierten Domäne zuordnen. Nur eine benutzerdefinierte Domäne wird pro Speicherkonto; unterstützt. die Ersetzung/Änderung der benutzerdefinierten Domäne wird nicht unterstützt. Um einer alten benutzerdefinierten Domäne zu ersetzen, muss der alte Wert gelöscht/aufgehoben sein, bevor ein neuer Wert festgelegt werden kann. Das Update aus mehreren Eigenschaften wird unterstützt. Dieser Aufruf ändert sich nicht auf die Speicherschlüssel für das Konto aus. Wenn Sie den Schlüssel des Speicherkontos ändern möchten, verwenden Sie den Schlüssel erneut generieren-Vorgang. Der Speicherort und den Namen des Speicherkontos können nicht nach der Erstellung nicht geändert werden.'
    syntax:
      content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Der Name der Ressourcengruppe im Abonnement des Benutzers. Der Name ist Groß-/Kleinschreibung.
        - id: accountName
          type:
            - string
          description: |
            Der Name des Speicherkontos, das in der angegebenen Ressourcengruppe aus. Speicherkontonamen müssen zwischen 3 und 24 Zeichen lang sein und dürfen nur Zahlen und Kleinbuchstaben enthalten.
        - id: parameters
          type:
            - azure-arm-storage.StorageAccountUpdateParameters
          description: |
            Die Parameter für die aktualisierte Konto angeben.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    package: azure-arm-storage
references:
  - uid: azure-arm-storage.StorageAccountCreateParameters
    name: StorageAccountCreateParameters
    spec.typeScript:
      - name: StorageAccountCreateParameters
        fullName: StorageAccountCreateParameters
        uid: azure-arm-storage.StorageAccountCreateParameters
  - uid: Promise<azure-arm-storage.StorageAccount>
    name: StorageAccount>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageAccount
        fullName: StorageAccount
        uid: azure-arm-storage.StorageAccount
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.StorageAccount>
    name: StorageAccount>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccount
        fullName: StorageAccount
        uid: azure-arm-storage.StorageAccount
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
    name: StorageAccount>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageAccount
        fullName: StorageAccount
        uid: azure-arm-storage.StorageAccount
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-storage.CheckNameAvailabilityResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-storage.CheckNameAvailabilityResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.CheckNameAvailabilityResult>>
    name: CheckNameAvailabilityResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: azure-arm-storage.CheckNameAvailabilityResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.StorageAccountListResult>
    name: StorageAccountListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageAccountListResult
        fullName: StorageAccountListResult
        uid: azure-arm-storage.StorageAccountListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.StorageAccountListResult>
    name: StorageAccountListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccountListResult
        fullName: StorageAccountListResult
        uid: azure-arm-storage.StorageAccountListResult
      - name: '>'
        fullName: '>'
  - uid: azure-arm-storage.AccountSasParameters
    name: AccountSasParameters
    spec.typeScript:
      - name: AccountSasParameters
        fullName: AccountSasParameters
        uid: azure-arm-storage.AccountSasParameters
  - uid: Promise<azure-arm-storage.ListAccountSasResponse>
    name: ListAccountSasResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListAccountSasResponse
        fullName: ListAccountSasResponse
        uid: azure-arm-storage.ListAccountSasResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.ListAccountSasResponse>
    name: ListAccountSasResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListAccountSasResponse
        fullName: ListAccountSasResponse
        uid: azure-arm-storage.ListAccountSasResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.ListAccountSasResponse>>
    name: ListAccountSasResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListAccountSasResponse
        fullName: ListAccountSasResponse
        uid: azure-arm-storage.ListAccountSasResponse
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
    name: StorageAccountListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageAccountListResult
        fullName: StorageAccountListResult
        uid: azure-arm-storage.StorageAccountListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.StorageAccountListKeysResult>
    name: StorageAccountListKeysResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageAccountListKeysResult
        fullName: StorageAccountListKeysResult
        uid: azure-arm-storage.StorageAccountListKeysResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
    name: StorageAccountListKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccountListKeysResult
        fullName: StorageAccountListKeysResult
        uid: azure-arm-storage.StorageAccountListKeysResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
    name: StorageAccountListKeysResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageAccountListKeysResult
        fullName: StorageAccountListKeysResult
        uid: azure-arm-storage.StorageAccountListKeysResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-storage.ServiceSasParameters
    name: ServiceSasParameters
    spec.typeScript:
      - name: ServiceSasParameters
        fullName: ServiceSasParameters
        uid: azure-arm-storage.ServiceSasParameters
  - uid: Promise<azure-arm-storage.ListServiceSasResponse>
    name: ListServiceSasResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListServiceSasResponse
        fullName: ListServiceSasResponse
        uid: azure-arm-storage.ListServiceSasResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.ListServiceSasResponse>
    name: ListServiceSasResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListServiceSasResponse
        fullName: ListServiceSasResponse
        uid: azure-arm-storage.ListServiceSasResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.ListServiceSasResponse>>
    name: ListServiceSasResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListServiceSasResponse
        fullName: ListServiceSasResponse
        uid: azure-arm-storage.ListServiceSasResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-storage.StorageAccountUpdateParameters
    name: StorageAccountUpdateParameters
    spec.typeScript:
      - name: StorageAccountUpdateParameters
        fullName: StorageAccountUpdateParameters
        uid: azure-arm-storage.StorageAccountUpdateParameters