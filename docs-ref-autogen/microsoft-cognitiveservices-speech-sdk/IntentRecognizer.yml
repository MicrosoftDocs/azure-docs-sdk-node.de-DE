### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer
    name: IntentRecognizer
    fullName: IntentRecognizer
    children:
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addAllIntents
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addIntent
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addIntentWithLanguageModel
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.canceled
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.close
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.enableTelemetry
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.constructor
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.properties
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognized
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognizeOnceAsync
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognizing
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.sessionStarted
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.sessionStopped
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.speechEndDetected
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.speechRecognitionLanguage
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.speechStartDetected
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.startContinuousRecognitionAsync
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.startKeywordRecognitionAsync
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.stopContinuousRecognitionAsync
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.stopKeywordRecognitionAsync
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.telemetryEnabled
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="0869f-101">Intent-Erkennung.</span><span class="sxs-lookup"><span data-stu-id="0869f-101">Intent recognizer.</span></span>
    extends:
      name: microsoft-cognitiveservices-speech-sdk.Recognizer
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addAllIntents
    name: 'addAllIntents(LanguageUnderstandingModel, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addAllIntents(model: LanguageUnderstandingModel, intentId?: string)'
      parameters:
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.LanguageUnderstandingModel
          description: '<span data-ttu-id="0869f-102">Das Verständnis-Sprachmodell, mit der Intent-Elemente.</span><span class="sxs-lookup"><span data-stu-id="0869f-102">The language understanding model containing the intents.</span></span>'
        - id: intentId
          type:
            - string
          description: |
            <span data-ttu-id="0869f-103">Eine benutzerdefinierte Id-Zeichenfolge, die in der IntentRecognitionResults getIntentId()-Methode zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0869f-103">A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.</span></span>
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addIntent
    name: 'addIntent(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0869f-104">Einen Ausdruck, der erkannt werden sollen hinzugefügt als Absicht.</span><span class="sxs-lookup"><span data-stu-id="0869f-104">Adds a phrase that should be recognized as intent.</span></span>'
    syntax:
      content: 'function addIntent(simplePhrase: string, intentId?: string)'
      parameters:
        - id: simplePhrase
          type:
            - string
          description: ''
        - id: intentId
          type:
            - string
          description: '<span data-ttu-id="0869f-105">Eine Zeichenfolge, die den Bezeichner der Absicht zu erkennenden darstellt.</span><span class="sxs-lookup"><span data-stu-id="0869f-105">A String that represents the identifier of the intent to be recognized.</span></span>'
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addIntentWithLanguageModel
    name: 'addIntentWithLanguageModel(string, LanguageUnderstandingModel, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0869f-106">Fügt ein Intent-Objekt von Luis-Dienst für die Erkennung hinzu.</span><span class="sxs-lookup"><span data-stu-id="0869f-106">Adds an intent from Language Understanding service for recognition.</span></span>
    syntax:
      content: 'function addIntentWithLanguageModel(intentId: string, model: LanguageUnderstandingModel, intentName?: string)'
      parameters:
        - id: intentId
          type:
            - string
          description: '<span data-ttu-id="0869f-107">Eine Zeichenfolge, die den Bezeichner der Absicht zu erkennenden darstellt.</span><span class="sxs-lookup"><span data-stu-id="0869f-107">A String that represents the identifier of the intent to be recognized.</span></span> <span data-ttu-id="0869f-108">Ignoriert, wenn IntentName leer ist.</span><span class="sxs-lookup"><span data-stu-id="0869f-108">Ignored if intentName is empty.</span></span>'
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.LanguageUnderstandingModel
          description: <span data-ttu-id="0869f-109">Das beabsichtigte Modell vom Luis-Dienst.</span><span class="sxs-lookup"><span data-stu-id="0869f-109">The intent model from Language Understanding service.</span></span>
        - id: intentName
          type:
            - string
          description: |
            <span data-ttu-id="0869f-110">Der beabsichtigte Name, der in das beabsichtigte Modell definiert ist.</span><span class="sxs-lookup"><span data-stu-id="0869f-110">The intent name defined in the intent model.</span></span> <span data-ttu-id="0869f-111">Wenn sie leer ist, werden alle intent-Namen, die im Modell definierten hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="0869f-111">If it is empty, all intent names defined in the model will be added.</span></span>
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="0869f-112">Ruft das Autorisierungstoken verwendet, um die Kommunikation mit dem Dienst ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="0869f-112">Gets/Sets the authorization token used to communicate with the service.</span></span>
      <span data-ttu-id="0869f-113">Hinweis: Verwenden Sie ein Token, die von Ihren Abonnementschlüssel LanguageUnderstanding abgeleitet werden, für das beabsichtigte Erkennungsmodul.</span><span class="sxs-lookup"><span data-stu-id="0869f-113">Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.</span></span>
    syntax:
      content: 'public authorizationToken: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.canceled
    name: canceled
    fullName: canceled
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="0869f-114">Das Ereignis abgebrochen Signale, die bei der Erkennung ein Fehler aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="0869f-114">The event canceled signals that an error occurred during recognition.</span></span>'
    syntax:
      content: 'public canceled: (sender: IntentRecognizer, event: IntentRecognitionCanceledEventArgs) => void'
      return:
        type:
          - '(sender: IntentRecognizer, event: IntentRecognitionCanceledEventArgs) => void'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0869f-115">Schließt alle externe Ressourcen, die eine Instanz dieser Klasse frei.</span><span class="sxs-lookup"><span data-stu-id="0869f-115">closes all external resources held by an instance of this class.</span></span>'
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.enableTelemetry
    name: enableTelemetry(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0869f-116">Diese Methode wird global aktiviert oder deaktiviert die Telemetriedaten.</span><span class="sxs-lookup"><span data-stu-id="0869f-116">This method globally enables or disables telemetry.</span></span>
    syntax:
      content: 'static function enableTelemetry(enabled: boolean)'
      parameters:
        - id: enabled
          type:
            - boolean
          description: |
            <span data-ttu-id="0869f-117">Globale Einstellung für die Erfassung von Telemetriedaten.</span><span class="sxs-lookup"><span data-stu-id="0869f-117">Global setting for telemetry collection.</span></span>
            <span data-ttu-id="0869f-118">Wenn auf "true" telemetrieinformationen Mikrofon Fehler zufrieden sind, sind handschrifterkennnungsfehler gesammelt und an Microsoft gesendet.</span><span class="sxs-lookup"><span data-stu-id="0869f-118">If set to true, telemetry information like microphone errors, recognition errors are collected and sent to Microsoft.</span></span>
            <span data-ttu-id="0869f-119">Wenn Sie auf "false" festlegen, keine Telemetriedaten an Microsoft gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="0869f-119">If set to false, no telemetry is sent to Microsoft.</span></span>
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.constructor
    name: 'IntentRecognizer(SpeechConfig, AudioConfig)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="0869f-120">Initialisiert eine Instanz von der IntentRecognizer.</span><span class="sxs-lookup"><span data-stu-id="0869f-120">Initializes an instance of the IntentRecognizer.</span></span>
    syntax:
      content: 'new IntentRecognizer(speechConfig: SpeechConfig, audioConfig?: AudioConfig)'
      parameters:
        - id: speechConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeechConfig
          description: <span data-ttu-id="0869f-121">Der Satz von Konfigurationseigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0869f-121">The set of configuration properties.</span></span>
        - id: audioConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.AudioConfig
          description: |
            <span data-ttu-id="0869f-122">Eine optionale audio Eingabe Konfiguration, die dem Erkennungsmodul zugeordnet</span><span class="sxs-lookup"><span data-stu-id="0869f-122">An optional audio input config associated with the recognizer</span></span>
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="0869f-123">Die Auflistung von Eigenschaften und deren Werte für diese IntentRecognizer definiert.</span><span class="sxs-lookup"><span data-stu-id="0869f-123">The collection of properties and their values defined for this IntentRecognizer.</span></span>
    syntax:
      content: 'public properties: PropertyCollection'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognized
    name: recognized
    fullName: recognized
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="0869f-124">Das Ereignis erkannt signalisiert, dass ein Erkennungsergebnis der letzten empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="0869f-124">The event recognized signals that a final recognition result is received.</span></span>'
    syntax:
      content: 'public recognized: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void'
      return:
        type:
          - '(sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognizeOnceAsync
    name: 'recognizeOnceAsync((e: IntentRecognitionResult) => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="0869f-125">Absichtserkennung startet und beendet, nachdem der erste Äußerung erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="0869f-125">Starts intent recognition, and stops after the first utterance is recognized.</span></span>
      <span data-ttu-id="0869f-126">Der Task wird die Erkennung von Text und die Absicht als Ergebnis zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0869f-126">The task returns the recognition text and intent as result.</span></span>
      <span data-ttu-id="0869f-127">Hinweis: RecognizeOnceAsync() zurückgegeben wird, wenn der erste Äußerung erkannt wurde, daher ist es nur für die einzelnen Screenshot verwendet geeignete wie Befehl oder Abfragen.</span><span class="sxs-lookup"><span data-stu-id="0869f-127">Note: RecognizeOnceAsync() returns when the first utterance has been recognized, so it is suitable only for single shot recognition like command or query.</span></span>
      <span data-ttu-id="0869f-128">Verwenden Sie stattdessen StartContinuousRecognitionAsync(), für die lang andauernde verwendet.</span><span class="sxs-lookup"><span data-stu-id="0869f-128">For long-running recognition, use StartContinuousRecognitionAsync() instead.</span></span>
    syntax:
      content: 'function recognizeOnceAsync(cb?: (e: IntentRecognitionResult) => void, err?: (e: string) => void)'
      parameters:
        - id: cb
          type:
            - '(e: IntentRecognitionResult) => void'
          description: '<span data-ttu-id="0869f-129">Rückruf, der die Erkennung empfangen hat eine IntentRecognitionResult abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="0869f-129">Callback that received the recognition has finished with an IntentRecognitionResult.</span></span>'
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            <span data-ttu-id="0869f-130">Im Falle eines Fehlers aufgerufener Rückruf.</span><span class="sxs-lookup"><span data-stu-id="0869f-130">Callback invoked in case of an error.</span></span>
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognizing
    name: recognizing
    fullName: recognizing
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="0869f-131">Das Ereignis, das Erkennen von Signalen, dass ein intermediate Erkennungsergebnis empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="0869f-131">The event recognizing signals that an intermediate recognition result is received.</span></span>'
    syntax:
      content: 'public recognizing: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void'
      return:
        type:
          - '(sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.sessionStarted
    name: sessionStarted
    fullName: sessionStarted
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="0869f-132">Definiert die Ereignishandler für Ereignisse der Sitzung gestartet.</span><span class="sxs-lookup"><span data-stu-id="0869f-132">Defines event handler for session started events.</span></span>
    syntax:
      content: 'public sessionStarted: (sender: Recognizer, event: SessionEventArgs) => void'
      return:
        type:
          - '(sender: Recognizer, event: SessionEventArgs) => void'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.sessionStopped
    name: sessionStopped
    fullName: sessionStopped
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="0869f-133">Definiert die Ereignishandler für Ereignisse der Sitzung wurde beendet.</span><span class="sxs-lookup"><span data-stu-id="0869f-133">Defines event handler for session stopped events.</span></span>
    syntax:
      content: 'public sessionStopped: (sender: Recognizer, event: SessionEventArgs) => void'
      return:
        type:
          - '(sender: Recognizer, event: SessionEventArgs) => void'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.speechEndDetected
    name: speechEndDetected
    fullName: speechEndDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="0869f-134">Definiert die Ereignishandler für Ereignisse der Spracheingabe beendet.</span><span class="sxs-lookup"><span data-stu-id="0869f-134">Defines event handler for speech stopped events.</span></span>
    syntax:
      content: 'public speechEndDetected: (sender: Recognizer, event: RecognitionEventArgs) => void'
      return:
        type:
          - '(sender: Recognizer, event: RecognitionEventArgs) => void'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="0869f-135">Ruft ab, der Erkennung der gesprochenen Sprache.</span><span class="sxs-lookup"><span data-stu-id="0869f-135">Gets the spoken language of recognition.</span></span>'
    syntax:
      content: 'public speechRecognitionLanguage: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.speechStartDetected
    name: speechStartDetected
    fullName: speechStartDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="0869f-136">Definiert die Ereignishandler für Sprachereignisse gestartet.</span><span class="sxs-lookup"><span data-stu-id="0869f-136">Defines event handler for speech started events.</span></span>
    syntax:
      content: 'public speechStartDetected: (sender: Recognizer, event: RecognitionEventArgs) => void'
      return:
        type:
          - '(sender: Recognizer, event: RecognitionEventArgs) => void'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.startContinuousRecognitionAsync
    name: 'startContinuousRecognitionAsync(() => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="0869f-137">Startet die Spracherkennung, bis stopContinuousRecognitionAsync() aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0869f-137">Starts speech recognition, until stopContinuousRecognitionAsync() is called.</span></span>
      <span data-ttu-id="0869f-138">Benutzer muss Abonnieren von Ereignissen, um Ergebnisse zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="0869f-138">User must subscribe to events to receive recognition results.</span></span>
    syntax:
      content: 'function startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void)'
      parameters:
        - id: cb
          type:
            - () => void
          description: '<span data-ttu-id="0869f-139">Der Rückruf aufgerufen, nachdem die Erkennung gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="0869f-139">Callback invoked once the recognition has started.</span></span>'
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            <span data-ttu-id="0869f-140">Im Falle eines Fehlers aufgerufener Rückruf.</span><span class="sxs-lookup"><span data-stu-id="0869f-140">Callback invoked in case of an error.</span></span>
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.startKeywordRecognitionAsync
    name: 'startKeywordRecognitionAsync(KeywordRecognitionModel, () => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="0869f-141">Startet die Spracherkennung mit Schlüsselwort erkennen, bis stopKeywordRecognitionAsync() aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0869f-141">Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.</span></span>
      <span data-ttu-id="0869f-142">Benutzer muss Abonnieren von Ereignissen, um Ergebnisse zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="0869f-142">User must subscribe to events to receive recognition results.</span></span>
      <span data-ttu-id="0869f-143">Hinweis: Schlüsselwort, ermitteln die Funktionalität ist nur verfügbar, auf dem Speech-Geräte-SDK.</span><span class="sxs-lookup"><span data-stu-id="0869f-143">Note: Key word spotting functionality is only available on the Speech Devices SDK.</span></span>
      <span data-ttu-id="0869f-144">Diese Funktion ist derzeit nicht in das SDK selbst enthalten.</span><span class="sxs-lookup"><span data-stu-id="0869f-144">This functionality is currently not included in the SDK itself.</span></span>
    syntax:
      content: 'function startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void)'
      parameters:
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel
          description: '<span data-ttu-id="0869f-145">Das Modell der Schlüsselwort-Erkennung, das angibt, das Schlüsselwort, um erkannt zu werden.</span><span class="sxs-lookup"><span data-stu-id="0869f-145">The keyword recognition model that specifies the keyword to be recognized.</span></span>'
        - id: cb
          type:
            - () => void
          description: '<span data-ttu-id="0869f-146">Der Rückruf aufgerufen, nachdem die Erkennung gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="0869f-146">Callback invoked once the recognition has started.</span></span>'
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            <span data-ttu-id="0869f-147">Im Falle eines Fehlers aufgerufener Rückruf.</span><span class="sxs-lookup"><span data-stu-id="0869f-147">Callback invoked in case of an error.</span></span>
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.stopContinuousRecognitionAsync
    name: 'stopContinuousRecognitionAsync(() => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0869f-148">Beendet die kontinuierliche Absicht bei gesprochenen Inhalten.</span><span class="sxs-lookup"><span data-stu-id="0869f-148">Stops continuous intent recognition.</span></span>
    syntax:
      content: 'function stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void)'
      parameters:
        - id: cb
          type:
            - () => void
          description: '<span data-ttu-id="0869f-149">Der Rückruf aufgerufen wird, sobald die Erkennung beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="0869f-149">Callback invoked once the recognition has stopped.</span></span>'
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            <span data-ttu-id="0869f-150">Im Falle eines Fehlers aufgerufener Rückruf.</span><span class="sxs-lookup"><span data-stu-id="0869f-150">Callback invoked in case of an error.</span></span>
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.stopKeywordRecognitionAsync
    name: 'stopKeywordRecognitionAsync(() => void, (e: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="0869f-151">Beendet die kontinuierliche Spracherkennung verwendet.</span><span class="sxs-lookup"><span data-stu-id="0869f-151">Stops continuous speech recognition.</span></span>
      <span data-ttu-id="0869f-152">Hinweis: Schlüsselwort, ermitteln die Funktionalität ist nur verfügbar, auf dem Speech-Geräte-SDK.</span><span class="sxs-lookup"><span data-stu-id="0869f-152">Note: Key word spotting functionality is only available on the Speech Devices SDK.</span></span>
      <span data-ttu-id="0869f-153">Diese Funktion ist derzeit nicht in das SDK selbst enthalten.</span><span class="sxs-lookup"><span data-stu-id="0869f-153">This functionality is currently not included in the SDK itself.</span></span>
    syntax:
      content: 'function stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string) => void)'
      parameters:
        - id: cb
          type:
            - () => void
          description: '<span data-ttu-id="0869f-154">Der Rückruf aufgerufen wird, sobald die Erkennung beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="0869f-154">Callback invoked once the recognition has stopped.</span></span>'
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            <span data-ttu-id="0869f-155">Im Falle eines Fehlers aufgerufener Rückruf.</span><span class="sxs-lookup"><span data-stu-id="0869f-155">Callback invoked in case of an error.</span></span>
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.telemetryEnabled
    name: telemetryEnabled
    fullName: telemetryEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="0869f-156">Diese Methode gibt den aktuellen Status der Einstellung für die Telemetriedaten.</span><span class="sxs-lookup"><span data-stu-id="0869f-156">This method returns the current state of the telemetry setting.</span></span>
    syntax:
      content: 'public static telemetryEnabled: boolean'
      return:
        type:
          - boolean
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer
    name: Recognizer
    spec.typeScript:
      - name: Recognizer
        fullName: Recognizer
        uid: microsoft-cognitiveservices-speech-sdk.Recognizer
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
  - uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
    name: AudioConfig
    spec.typeScript:
      - name: AudioConfig
        fullName: AudioConfig
        uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: microsoft-cognitiveservices-speech-sdk.LanguageUnderstandingModel
    name: LanguageUnderstandingModel
    spec.typeScript:
      - name: LanguageUnderstandingModel
        fullName: LanguageUnderstandingModel
        uid: microsoft-cognitiveservices-speech-sdk.LanguageUnderstandingModel
  - uid: microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel
    name: KeywordRecognitionModel
    spec.typeScript:
      - name: KeywordRecognitionModel
        fullName: KeywordRecognitionModel
        uid: microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel