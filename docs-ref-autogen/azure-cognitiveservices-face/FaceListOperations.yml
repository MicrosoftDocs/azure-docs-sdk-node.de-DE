### YamlMime:UniversalReference
ms.openlocfilehash: e2d905a200190804df26d4317afebcd13d535944
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 12/13/2018
ms.locfileid: "52168485"
items:
- uid: azure-cognitiveservices-face.FaceListOperations
  name: FaceListOperations
  fullName: FaceListOperations
  children:
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.create
  - azure-cognitiveservices-face.FaceListOperations.create_2
  - azure-cognitiveservices-face.FaceListOperations.create_1
  - azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteFace
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.get
  - azure-cognitiveservices-face.FaceListOperations.get_2
  - azure-cognitiveservices-face.FaceListOperations.get_1
  - azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.list
  - azure-cognitiveservices-face.FaceListOperations.list_2
  - azure-cognitiveservices-face.FaceListOperations.list_1
  - azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.update
  - azure-cognitiveservices-face.FaceListOperations.update_2
  - azure-cognitiveservices-face.FaceListOperations.update_1
  - azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-101">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="63485-101">Add a face to a face list.</span></span> <span data-ttu-id="63485-102">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="63485-103">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="63485-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-104">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-104">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="63485-105">Ein Bild-Stream.</span><span class="sxs-lookup"><span data-stu-id="63485-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-106">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="63485-106">Add a face to a face list.</span></span> <span data-ttu-id="63485-107">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="63485-108">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="63485-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-109">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="63485-109">Add a face to a face list.</span></span> <span data-ttu-id="63485-110">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="63485-111">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="63485-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-112">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="63485-112">Add a face to a face list.</span></span> <span data-ttu-id="63485-113">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="63485-114">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="63485-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-115">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-115">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="63485-116">Ein Bild-Stream.</span><span class="sxs-lookup"><span data-stu-id="63485-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-117">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="63485-117">Add a face to a face list.</span></span> <span data-ttu-id="63485-118">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="63485-119">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="63485-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-120">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-120">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="63485-121">Öffentlich erreichbar URL eines Bilds</span><span class="sxs-lookup"><span data-stu-id="63485-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-122">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="63485-122">Add a face to a face list.</span></span> <span data-ttu-id="63485-123">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="63485-124">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="63485-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-125">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="63485-125">Add a face to a face list.</span></span> <span data-ttu-id="63485-126">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="63485-127">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="63485-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-128">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="63485-128">Add a face to a face list.</span></span> <span data-ttu-id="63485-129">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="63485-130">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="63485-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-131">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-131">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="63485-132">Öffentlich erreichbar URL eines Bilds</span><span class="sxs-lookup"><span data-stu-id="63485-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-133">Erstellen Sie eine leere Fläche-Liste.</span><span class="sxs-lookup"><span data-stu-id="63485-133">Create an empty face list.</span></span> <span data-ttu-id="63485-134">Listen dürfen bis zu 64 Gesicht in einem Abonnement vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="63485-134">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-135">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-135">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-136">Erstellen Sie eine leere Fläche-Liste.</span><span class="sxs-lookup"><span data-stu-id="63485-136">Create an empty face list.</span></span> <span data-ttu-id="63485-137">Listen dürfen bis zu 64 Gesicht in einem Abonnement vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="63485-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-138">Erstellen Sie eine leere Fläche-Liste.</span><span class="sxs-lookup"><span data-stu-id="63485-138">Create an empty face list.</span></span> <span data-ttu-id="63485-139">Listen dürfen bis zu 64 Gesicht in einem Abonnement vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="63485-139">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-140">Erstellen Sie eine leere Fläche-Liste.</span><span class="sxs-lookup"><span data-stu-id="63485-140">Create an empty face list.</span></span> <span data-ttu-id="63485-141">Listen dürfen bis zu 64 Gesicht in einem Abonnement vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="63485-141">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-142">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-142">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-143">Löschen einer vorhandenen Gesicht aus Gesicht (angegeben durch eine PersisitedFaceId und eine FaceListId).</span><span class="sxs-lookup"><span data-stu-id="63485-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="63485-144">Persistente Image im Zusammenhang mit der das Gesicht werden ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="63485-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-145">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-145">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="63485-146">Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.</span><span class="sxs-lookup"><span data-stu-id="63485-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-147">Löschen einer vorhandenen Gesicht aus Gesicht (angegeben durch eine PersisitedFaceId und eine FaceListId).</span><span class="sxs-lookup"><span data-stu-id="63485-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="63485-148">Persistente Image im Zusammenhang mit der das Gesicht werden ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="63485-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-149">Löschen einer vorhandenen Gesicht aus Gesicht (angegeben durch eine PersisitedFaceId und eine FaceListId).</span><span class="sxs-lookup"><span data-stu-id="63485-149">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="63485-150">Persistente Image im Zusammenhang mit der das Gesicht werden ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="63485-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-151">Löschen einer vorhandenen Gesicht aus Gesicht (angegeben durch eine PersisitedFaceId und eine FaceListId).</span><span class="sxs-lookup"><span data-stu-id="63485-151">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="63485-152">Persistente Image im Zusammenhang mit der das Gesicht werden ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="63485-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-153">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-153">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="63485-154">Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.</span><span class="sxs-lookup"><span data-stu-id="63485-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-155">Löschen Sie eine vorhandene Liste der Fläche nach FaceListId.</span><span class="sxs-lookup"><span data-stu-id="63485-155">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="63485-156">Beibehalten, Gesicht, die Bilder in der gesichtserkennungs-Liste ebenfalls gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="63485-156">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-157">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-157">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-158">Löschen Sie eine vorhandene Liste der Fläche nach FaceListId.</span><span class="sxs-lookup"><span data-stu-id="63485-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="63485-159">Beibehalten, Gesicht, die Bilder in der gesichtserkennungs-Liste ebenfalls gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="63485-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-160">Löschen Sie eine vorhandene Liste der Fläche nach FaceListId.</span><span class="sxs-lookup"><span data-stu-id="63485-160">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="63485-161">Beibehalten, Gesicht, die Bilder in der gesichtserkennungs-Liste ebenfalls gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="63485-161">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-162">Löschen Sie eine vorhandene Liste der Fläche nach FaceListId.</span><span class="sxs-lookup"><span data-stu-id="63485-162">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="63485-163">Beibehalten, Gesicht, die Bilder in der gesichtserkennungs-Liste ebenfalls gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="63485-163">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-164">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-164">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-165">Eine Liste der gesichtserkennungs-Informationen abrufen.</span><span class="sxs-lookup"><span data-stu-id="63485-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-166">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-166">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_2
  name: get(string, Object, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-167">Eine Liste der gesichtserkennungs-Informationen abrufen.</span><span class="sxs-lookup"><span data-stu-id="63485-167">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: Object, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_1
  name: get(string, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-168">Eine Liste der gesichtserkennungs-Informationen abrufen.</span><span class="sxs-lookup"><span data-stu-id="63485-168">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-169">Eine Liste der gesichtserkennungs-Informationen abrufen.</span><span class="sxs-lookup"><span data-stu-id="63485-169">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-170">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-170">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-171">Informationen über alle vorhandenen Gesicht Listen abrufen.</span><span class="sxs-lookup"><span data-stu-id="63485-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="63485-172">Nur FaceListId, Namen und UserData werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_2
  name: list(Object, ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-173">Informationen über alle vorhandenen Gesicht Listen abrufen.</span><span class="sxs-lookup"><span data-stu-id="63485-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="63485-174">Nur FaceListId, Namen und UserData werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_1
  name: list(ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-175">Informationen über alle vorhandenen Gesicht Listen abrufen.</span><span class="sxs-lookup"><span data-stu-id="63485-175">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="63485-176">Nur FaceListId, Namen und UserData werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-176">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-177">Informationen über alle vorhandenen Gesicht Listen abrufen.</span><span class="sxs-lookup"><span data-stu-id="63485-177">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="63485-178">Nur FaceListId, Namen und UserData werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="63485-178">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-179">Aktualisieren Sie die Informationen aus einer Liste Gesicht.</span><span class="sxs-lookup"><span data-stu-id="63485-179">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-180">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-180">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-181">Aktualisieren Sie die Informationen aus einer Liste Gesicht.</span><span class="sxs-lookup"><span data-stu-id="63485-181">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-182">Aktualisieren Sie die Informationen aus einer Liste Gesicht.</span><span class="sxs-lookup"><span data-stu-id="63485-182">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="63485-183">Aktualisieren Sie die Informationen aus einer Liste Gesicht.</span><span class="sxs-lookup"><span data-stu-id="63485-183">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="63485-184">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="63485-184">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  name: FaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  name: FaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>>'
    fullName: '[]>>'
