### YamlMime:UniversalReference
ms.openlocfilehash: 2f68db2640bf5f18ec526b603a0c002bd8b3eb2f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 08/12/2018
ms.locfileid: "40063044"
items:
- uid: azure-cognitiveservices-face.FaceList
  name: FaceList
  fullName: FaceList
  children:
  - azure-cognitiveservices-face.FaceList.addFace
  - azure-cognitiveservices-face.FaceList.addFace_1
  - azure-cognitiveservices-face.FaceList.addFace_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceList.addFaceFromStream
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.create_1
  - azure-cognitiveservices-face.FaceList.create
  - azure-cognitiveservices-face.FaceList.create_2
  - azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteFace
  - azure-cognitiveservices-face.FaceList.deleteFace_1
  - azure-cognitiveservices-face.FaceList.deleteFace_2
  - azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteMethod
  - azure-cognitiveservices-face.FaceList.deleteMethod_1
  - azure-cognitiveservices-face.FaceList.deleteMethod_2
  - azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.get_1
  - azure-cognitiveservices-face.FaceList.get_2
  - azure-cognitiveservices-face.FaceList.get
  - azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.list
  - azure-cognitiveservices-face.FaceList.list_1
  - azure-cognitiveservices-face.FaceList.list_2
  - azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.update
  - azure-cognitiveservices-face.FaceList.update_1
  - azure-cognitiveservices-face.FaceList.update_2
  - azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-101">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="d7546-101">Add a face to a face list.</span></span> <span data-ttu-id="d7546-102">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d7546-103">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="d7546-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-104">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-104">Id referencing a Face List.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_1
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-105">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="d7546-105">Add a face to a face list.</span></span> <span data-ttu-id="d7546-106">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-106">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d7546-107">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="d7546-107">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_2
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-108">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="d7546-108">Add a face to a face list.</span></span> <span data-ttu-id="d7546-109">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-109">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d7546-110">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="d7546-110">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-111">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="d7546-111">Add a face to a face list.</span></span> <span data-ttu-id="d7546-112">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-112">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d7546-113">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="d7546-113">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-114">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="d7546-114">Add a face to a face list.</span></span> <span data-ttu-id="d7546-115">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-115">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d7546-116">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="d7546-116">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-117">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-117">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-118">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="d7546-118">Add a face to a face list.</span></span> <span data-ttu-id="d7546-119">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-119">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d7546-120">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="d7546-120">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-121">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="d7546-121">Add a face to a face list.</span></span> <span data-ttu-id="d7546-122">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-122">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d7546-123">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="d7546-123">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-124">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-124">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  name: addFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-125">Ein Gesicht eine Gesichts-Liste hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="d7546-125">Add a face to a face list.</span></span> <span data-ttu-id="d7546-126">Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="d7546-127">Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt, und PersistedFaceId läuft nicht ab.</span><span class="sxs-lookup"><span data-stu-id="d7546-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceWithHttpOperationResponse(faceListId: string, url: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-128">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-128">Id referencing a Face List.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-129">Erstellen Sie eine leere Fläche-Liste.</span><span class="sxs-lookup"><span data-stu-id="d7546-129">Create an empty face list.</span></span> <span data-ttu-id="d7546-130">Listen dürfen bis zu 64 Gesicht in einem Abonnement vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="d7546-130">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-131">Erstellen Sie eine leere Fläche-Liste.</span><span class="sxs-lookup"><span data-stu-id="d7546-131">Create an empty face list.</span></span> <span data-ttu-id="d7546-132">Listen dürfen bis zu 64 Gesicht in einem Abonnement vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="d7546-132">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-133">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="d7546-133">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-134">Erstellen Sie eine leere Fläche-Liste.</span><span class="sxs-lookup"><span data-stu-id="d7546-134">Create an empty face list.</span></span> <span data-ttu-id="d7546-135">Listen dürfen bis zu 64 Gesicht in einem Abonnement vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="d7546-135">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-136">Erstellen Sie eine leere Fläche-Liste.</span><span class="sxs-lookup"><span data-stu-id="d7546-136">Create an empty face list.</span></span> <span data-ttu-id="d7546-137">Listen dürfen bis zu 64 Gesicht in einem Abonnement vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="d7546-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-138">Verweisen auf eine Liste von bestimmten Gesicht ID.</span><span class="sxs-lookup"><span data-stu-id="d7546-138">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-139">Löschen einer vorhandenen Gesicht aus Gesicht (angegeben durch eine PersisitedFaceId und eine FaceListId).</span><span class="sxs-lookup"><span data-stu-id="d7546-139">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="d7546-140">Persistente Image im Zusammenhang mit der das Gesicht werden ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="d7546-140">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-141">FaceListId von einer vorhandenen gesichtserkennungs-Liste.</span><span class="sxs-lookup"><span data-stu-id="d7546-141">faceListId of an existing face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-142">PersistedFaceId einer vorhandenen Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="d7546-142">persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-143">Löschen einer vorhandenen Gesicht aus Gesicht (angegeben durch eine PersisitedFaceId und eine FaceListId).</span><span class="sxs-lookup"><span data-stu-id="d7546-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="d7546-144">Persistente Image im Zusammenhang mit der das Gesicht werden ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="d7546-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-145">Löschen einer vorhandenen Gesicht aus Gesicht (angegeben durch eine PersisitedFaceId und eine FaceListId).</span><span class="sxs-lookup"><span data-stu-id="d7546-145">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="d7546-146">Persistente Image im Zusammenhang mit der das Gesicht werden ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="d7546-146">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-147">Löschen einer vorhandenen Gesicht aus Gesicht (angegeben durch eine PersisitedFaceId und eine FaceListId).</span><span class="sxs-lookup"><span data-stu-id="d7546-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="d7546-148">Persistente Image im Zusammenhang mit der das Gesicht werden ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="d7546-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-149">FaceListId von einer vorhandenen gesichtserkennungs-Liste.</span><span class="sxs-lookup"><span data-stu-id="d7546-149">faceListId of an existing face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-150">PersistedFaceId einer vorhandenen Oberfläche.</span><span class="sxs-lookup"><span data-stu-id="d7546-150">persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-151">Löschen Sie eine vorhandene Liste der Fläche nach FaceListId.</span><span class="sxs-lookup"><span data-stu-id="d7546-151">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="d7546-152">Beibehalten, Gesicht, die Bilder in der gesichtserkennungs-Liste ebenfalls gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="d7546-152">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-153">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-153">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-154">Löschen Sie eine vorhandene Liste der Fläche nach FaceListId.</span><span class="sxs-lookup"><span data-stu-id="d7546-154">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="d7546-155">Beibehalten, Gesicht, die Bilder in der gesichtserkennungs-Liste ebenfalls gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="d7546-155">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-156">Löschen Sie eine vorhandene Liste der Fläche nach FaceListId.</span><span class="sxs-lookup"><span data-stu-id="d7546-156">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="d7546-157">Beibehalten, Gesicht, die Bilder in der gesichtserkennungs-Liste ebenfalls gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="d7546-157">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-158">Löschen Sie eine vorhandene Liste der Fläche nach FaceListId.</span><span class="sxs-lookup"><span data-stu-id="d7546-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="d7546-159">Beibehalten, Gesicht, die Bilder in der gesichtserkennungs-Liste ebenfalls gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="d7546-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-160">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-160">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-161">Eine Liste der gesichtserkennungs-Informationen abrufen.</span><span class="sxs-lookup"><span data-stu-id="d7546-161">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-162">Eine Liste der gesichtserkennungs-Informationen abrufen.</span><span class="sxs-lookup"><span data-stu-id="d7546-162">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: function, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-163">Eine Liste der gesichtserkennungs-Informationen abrufen.</span><span class="sxs-lookup"><span data-stu-id="d7546-163">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-164">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-164">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-165">Eine Liste der gesichtserkennungs-Informationen abrufen.</span><span class="sxs-lookup"><span data-stu-id="d7546-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-166">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-166">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-167">Informationen über alle vorhandenen Gesicht Listen abrufen.</span><span class="sxs-lookup"><span data-stu-id="d7546-167">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="d7546-168">Nur FaceListId, Namen und UserData werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-168">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-169">Informationen über alle vorhandenen Gesicht Listen abrufen.</span><span class="sxs-lookup"><span data-stu-id="d7546-169">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="d7546-170">Nur FaceListId, Namen und UserData werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-170">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-171">Informationen über alle vorhandenen Gesicht Listen abrufen.</span><span class="sxs-lookup"><span data-stu-id="d7546-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="d7546-172">Nur FaceListId, Namen und UserData werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: function, callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-173">Informationen über alle vorhandenen Gesicht Listen abrufen.</span><span class="sxs-lookup"><span data-stu-id="d7546-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="d7546-174">Nur FaceListId, Namen und UserData werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d7546-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-175">Aktualisieren Sie die Informationen aus einer Liste Gesicht.</span><span class="sxs-lookup"><span data-stu-id="d7546-175">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-176">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-176">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-177">Aktualisieren Sie die Informationen aus einer Liste Gesicht.</span><span class="sxs-lookup"><span data-stu-id="d7546-177">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-178">Aktualisieren Sie die Informationen aus einer Liste Gesicht.</span><span class="sxs-lookup"><span data-stu-id="d7546-178">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d7546-179">Aktualisieren Sie die Informationen aus einer Liste Gesicht.</span><span class="sxs-lookup"><span data-stu-id="d7546-179">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="d7546-180">ID, die eine Gesichts-Liste verweisen.</span><span class="sxs-lookup"><span data-stu-id="d7546-180">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>>'
    fullName: '[]>>'
