### YamlMime:UniversalReference
ms.openlocfilehash: b668012a360630506b3de5e9274fb380c44683f9
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 12/13/2018
ms.locfileid: "52170005"
items:
- uid: azure-cognitiveservices-face.PersonGroupPerson
  name: PersonGroupPerson
  fullName: PersonGroupPerson
  children:
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.create
  - azure-cognitiveservices-face.PersonGroupPerson.create_2
  - azure-cognitiveservices-face.PersonGroupPerson.create_1
  - azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.get
  - azure-cognitiveservices-face.PersonGroupPerson.get_2
  - azure-cognitiveservices-face.PersonGroupPerson.get_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFace
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.list
  - azure-cognitiveservices-face.PersonGroupPerson.list_2
  - azure-cognitiveservices-face.PersonGroupPerson.list_1
  - azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.update
  - azure-cognitiveservices-face.PersonGroupPerson.update_2
  - azure-cognitiveservices-face.PersonGroupPerson.update_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fügen Sie eine repräsentative Gesicht einer Person für die Identifikation hinzu. Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: image
      type:
      - stream.Readable
      description: >
        Ein Bild-Stream.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fügen Sie eine repräsentative Gesicht einer Person für die Identifikation hinzu. Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fügen Sie eine repräsentative Gesicht einer Person für die Identifikation hinzu. Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fügen Sie eine repräsentative Gesicht einer Person für die Identifikation hinzu. Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: image
      type:
      - stream.Readable
      description: >
        Ein Bild-Stream.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fügen Sie eine repräsentative Gesicht einer Person für die Identifikation hinzu. Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: url
      type:
      - string
      description: >
        Öffentlich erreichbar URL eines Bilds
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fügen Sie eine repräsentative Gesicht einer Person für die Identifikation hinzu. Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fügen Sie eine repräsentative Gesicht einer Person für die Identifikation hinzu. Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Fügen Sie eine repräsentative Gesicht einer Person für die Identifikation hinzu. Das Gesicht Eingabe wird als ein Bild mit einem Rechteck TargetFace angegeben.
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: url
      type:
      - string
      description: >
        Öffentlich erreichbar URL eines Bilds
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellen Sie eine neue Person in einer Gruppe für die angegebene Person an.
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellen Sie eine neue Person in einer Gruppe für die angegebene Person an.
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellen Sie eine neue Person in einer Gruppe für die angegebene Person an.
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellen Sie eine neue Person in einer Gruppe für die angegebene Person an.
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie eine Fläche, von einer Person. Relative-Funktion für das persistente Gesicht werden ebenfalls gelöscht.
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: persistedFaceId
      type:
      - string
      description: >
        Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie eine Fläche, von einer Person. Relative-Funktion für das persistente Gesicht werden ebenfalls gelöscht.
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie eine Fläche, von einer Person. Relative-Funktion für das persistente Gesicht werden ebenfalls gelöscht.
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie eine Fläche, von einer Person. Relative-Funktion für das persistente Gesicht werden ebenfalls gelöscht.
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: persistedFaceId
      type:
      - string
      description: >
        Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie eine vorhandene Person aus einer Personengruppe. Alle Person-Daten gespeichert und gesichtserkennungs-Funktionen in den Person-Eintrag gelöscht werden.
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie eine vorhandene Person aus einer Personengruppe. Alle Person-Daten gespeichert und gesichtserkennungs-Funktionen in den Person-Eintrag gelöscht werden.
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie eine vorhandene Person aus einer Personengruppe. Alle Person-Daten gespeichert und gesichtserkennungs-Funktionen in den Person-Eintrag gelöscht werden.
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie eine vorhandene Person aus einer Personengruppe. Alle Person-Daten gespeichert und gesichtserkennungs-Funktionen in den Person-Eintrag gelöscht werden.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Abrufen einer Person-Informationen, einschließlich registrierte gespeicherte Gesichter "," Name "und" UserData an.
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Abrufen einer Person-Informationen, einschließlich registrierte gespeicherte Gesichter "," Name "und" UserData an.
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Abrufen einer Person-Informationen, einschließlich registrierte gespeicherte Gesichter "," Name "und" UserData an.
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Abrufen von Informationen zu einer dauerhaften Fläche (angegeben durch PersistedFaceId, PersonId und seine PersonGroupId gehören).
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: persistedFaceId
      type:
      - string
      description: >
        Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Abrufen von Informationen zu einer dauerhaften Fläche (angegeben durch PersistedFaceId, PersonId und seine PersonGroupId gehören).
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Abrufen von Informationen zu einer dauerhaften Fläche (angegeben durch PersistedFaceId, PersonId und seine PersonGroupId gehören).
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Abrufen von Informationen zu einer dauerhaften Fläche (angegeben durch PersistedFaceId, PersonId und seine PersonGroupId gehören).
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: persistedFaceId
      type:
      - string
      description: >
        Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Abrufen einer Person-Informationen, einschließlich registrierte gespeicherte Gesichter "," Name "und" UserData an.
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Listen Sie alle Personen in einer Personengruppe aus, und rufen Sie Person-Informationen (einschließlich PersonId "," Name "," UserData "und" PersistedFaceIds registrierten Gesichter der Person ab).
  syntax:
    content: 'function list(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Listen Sie alle Personen in einer Personengruppe aus, und rufen Sie Person-Informationen (einschließlich PersonId "," Name "," UserData "und" PersistedFaceIds registrierten Gesichter der Person ab).
  syntax:
    content: 'function list(personGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Listen Sie alle Personen in einer Personengruppe aus, und rufen Sie Person-Informationen (einschließlich PersonId "," Name "," UserData "und" PersistedFaceIds registrierten Gesichter der Person ab).
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Listen Sie alle Personen in einer Personengruppe aus, und rufen Sie Person-Informationen (einschließlich PersonId "," Name "," UserData "und" PersistedFaceIds registrierten Gesichter der Person ab).
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Aktualisieren Sie die Namen oder die UserData einer Person.
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Aktualisieren Sie die Namen oder die UserData einer Person.
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Aktualisieren Sie die Namen oder die UserData einer Person.
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Update einer Person beibehalten einer Fläche UserData-Feld.
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: persistedFaceId
      type:
      - string
      description: >
        Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Update einer Person beibehalten einer Fläche UserData-Feld.
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Update einer Person beibehalten einer Fläche UserData-Feld.
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Update einer Person beibehalten einer Fläche UserData-Feld.
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: persistedFaceId
      type:
      - string
      description: >
        Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Aktualisieren Sie die Namen oder die UserData einer Person.
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        ID eine bestimmten Person-Gruppe verweisen.
    - id: personId
      type:
      - string
      description: >
        ID eine bestimmte Person verweisen.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
