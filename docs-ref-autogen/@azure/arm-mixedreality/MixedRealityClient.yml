### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-mixedreality.MixedRealityClient'
    name: MixedRealityClient
    fullName: MixedRealityClient
    children:
      - '@azure/arm-mixedreality.MixedRealityClient.acceptLanguage'
      - '@azure/arm-mixedreality.MixedRealityClient.apiVersion'
      - '@azure/arm-mixedreality.MixedRealityClient.beginLongRunningRequest'
      - '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal'
      - '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_2'
      - '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_1'
      - '@azure/arm-mixedreality.MixedRealityClient.credentials'
      - '@azure/arm-mixedreality.MixedRealityClient.longRunningOperationRetryTimeout'
      - '@azure/arm-mixedreality.MixedRealityClient.constructor'
      - '@azure/arm-mixedreality.MixedRealityClient.operations'
      - '@azure/arm-mixedreality.MixedRealityClient.restoreLROPoller'
      - '@azure/arm-mixedreality.MixedRealityClient.sendLongRunningRequest'
      - '@azure/arm-mixedreality.MixedRealityClient.sendLRORequest'
      - '@azure/arm-mixedreality.MixedRealityClient.sendOperationRequest'
      - '@azure/arm-mixedreality.MixedRealityClient.sendRequest'
      - '@azure/arm-mixedreality.MixedRealityClient.spatialAnchorsAccounts'
      - '@azure/arm-mixedreality.MixedRealityClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-mixedreality.MixedRealityClientContext'
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine HttpLongRunningOperationResponse, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Das Request-Objekt
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal'
    name: 'checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Überprüfen der Namensverfügbarkeit für globale Eindeutigkeit
    syntax:
      content: 'function checkNameAvailabilityLocal(location: string, checkNameAvailability: CheckNameAvailabilityRequest, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: location
          type:
            - string
          description: Die Position in der Eindeutigkeit überprüft wird.
        - id: checkNameAvailability
          type:
            - '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
          description: Überprüfen Sie die Verfügbarkeitsanforderung zur Namensüberprüfung.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityLocalResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_2'
    name: 'checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest, RequestOptionsBase, ServiceCallback<CheckNameAvailabilityResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailabilityLocal(location: string, checkNameAvailability: CheckNameAvailabilityRequest, options: RequestOptionsBase, callback: ServiceCallback<CheckNameAvailabilityResponse>)'
      parameters:
        - id: location
          type:
            - string
          description: Die Position in der Eindeutigkeit überprüft wird.
        - id: checkNameAvailability
          type:
            - '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
          description: Überprüfen Sie die Verfügbarkeitsanforderung zur Namensüberprüfung.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mixedreality.CheckNameAvailabilityResponse>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.CheckNameAvailabilityLocalResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_1'
    name: 'checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest, ServiceCallback<CheckNameAvailabilityResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailabilityLocal(location: string, checkNameAvailability: CheckNameAvailabilityRequest, callback: ServiceCallback<CheckNameAvailabilityResponse>)'
      parameters:
        - id: location
          type:
            - string
          description: Die Position in der Eindeutigkeit überprüft wird.
        - id: checkNameAvailability
          type:
            - '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
          description: Überprüfen Sie die Verfügbarkeitsanforderung zur Namensüberprüfung.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mixedreality.CheckNameAvailabilityResponse>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.CheckNameAvailabilityLocalResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Retry-Timeout in Sekunden für zeitintensive Vorgänge werden soll. Standardwert: 30.'
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.constructor'
    name: 'MixedRealityClient(ServiceClientCredentials, string, Models.MixedRealityClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initialisiert eine neue Instanz der Klasse MixedRealityClient an.
    syntax:
      content: 'new MixedRealityClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.MixedRealityClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Anmeldeinformationen für den Client zum Verbinden mit Azure.
        - id: subscriptionId
          type:
            - string
          description: Die Azure-Abonnement-ID.
        - id: options
          type:
            - Models.MixedRealityClientOptions
          description: ''
          optional: true
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-mixedreality.Operations'
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stellen Sie eine LROPoller aus der angegebenen LROPollState wieder her. Diese Methode kann verwendet werden, um eine LROPoller auf einem anderen Prozess oder Computer neu zu erstellen.'
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stellt einen Mechanismus, um eine Anforderung aus, die abgerufen werden, und geben Sie das endgültige Ergebnis bereit.'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Das Request-Objekt
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine LROPoller, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Die Argumente für den Vorgang.
        - id: operationSpec
          type:
            - OperationSpec
          description: Die Spezifikation für den Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: 'Zusätzliche Optionen, die beim Ausführen der Anforderung gesendet werden.'
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden Sie eine HTTP-Anforderung, die mithilfe der bereitgestellten OperationSpec aufgefüllt wird.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Die Argumente, denen von der HTTP-Anforderung auf Vorlagen basierende Werte aufgefüllt wird.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'Die OperationSpec, mit denen die HTTP-Anforderung aufgefüllt werden soll.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Der Rückruf aufgerufen wird, wenn die Antwort empfangen wird.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Die angegebene HTTP-Anforderung zu senden.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.spatialAnchorsAccounts'
    name: spatialAnchorsAccounts
    fullName: spatialAnchorsAccounts
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'spatialAnchorsAccounts: SpatialAnchorsAccounts'
      return:
        type:
          - '@azure/arm-mixedreality.SpatialAnchorsAccounts'
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-mixedreality'
references:
  - uid: '@azure/arm-mixedreality.MixedRealityClientContext'
    name: MixedRealityClientContext
    spec.typeScript:
      - name: MixedRealityClientContext
        fullName: MixedRealityClientContext
        uid: '@azure/arm-mixedreality.MixedRealityClientContext'
  - uid: '@azure/arm-mixedreality.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-mixedreality.Operations'
  - uid: '@azure/arm-mixedreality.SpatialAnchorsAccounts'
    name: SpatialAnchorsAccounts
    spec.typeScript:
      - name: SpatialAnchorsAccounts
        fullName: SpatialAnchorsAccounts
        uid: '@azure/arm-mixedreality.SpatialAnchorsAccounts'
  - uid: '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
    name: CheckNameAvailabilityRequest
    spec.typeScript:
      - name: CheckNameAvailabilityRequest
        fullName: CheckNameAvailabilityRequest
        uid: '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
  - uid: ServiceCallback<@azure/arm-mixedreality.CheckNameAvailabilityResponse>
    name: CheckNameAvailabilityResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResponse
        fullName: CheckNameAvailabilityResponse
        uid: '@azure/arm-mixedreality.CheckNameAvailabilityResponse'
      - name: '>'
        fullName: '>'