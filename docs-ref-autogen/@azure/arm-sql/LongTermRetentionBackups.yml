### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.LongTermRetentionBackups'
    name: LongTermRetentionBackups
    fullName: LongTermRetentionBackups
    children:
      - '@azure/arm-sql.LongTermRetentionBackups.beginDeleteMethod'
      - '@azure/arm-sql.LongTermRetentionBackups.deleteMethod'
      - '@azure/arm-sql.LongTermRetentionBackups.get'
      - '@azure/arm-sql.LongTermRetentionBackups.get_2'
      - '@azure/arm-sql.LongTermRetentionBackups.get_1'
      - '@azure/arm-sql.LongTermRetentionBackups.listByDatabase_2'
      - '@azure/arm-sql.LongTermRetentionBackups.listByDatabase'
      - '@azure/arm-sql.LongTermRetentionBackups.listByDatabase_1'
      - '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext'
      - '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext_2'
      - '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext_1'
      - '@azure/arm-sql.LongTermRetentionBackups.listByLocation_2'
      - '@azure/arm-sql.LongTermRetentionBackups.listByLocation'
      - '@azure/arm-sql.LongTermRetentionBackups.listByLocation_1'
      - '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext'
      - '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext_2'
      - '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext_1'
      - '@azure/arm-sql.LongTermRetentionBackups.listByServer_2'
      - '@azure/arm-sql.LongTermRetentionBackups.listByServer'
      - '@azure/arm-sql.LongTermRetentionBackups.listByServer_1'
      - '@azure/arm-sql.LongTermRetentionBackups.listByServerNext'
      - '@azure/arm-sql.LongTermRetentionBackups.listByServerNext_2'
      - '@azure/arm-sql.LongTermRetentionBackups.listByServerNext_1'
      - '@azure/arm-sql.LongTermRetentionBackups.constructor'
    langs:
      - typeScript
    type: class
    summary: 'Klasse, die eine LongTermRetentionBackups darstellt.'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht eine langfristig aufbewahrten Sicherung.
    syntax:
      content: 'function beginDeleteMethod(locationName: string, longTermRetentionServerName: string, longTermRetentionDatabaseName: string, backupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: longTermRetentionDatabaseName
          type:
            - string
          description: Der Name der Datenbank
        - id: backupName
          type:
            - string
          description: Der Name der Sicherungskopie.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht eine langfristig aufbewahrten Sicherung.
    syntax:
      content: 'function deleteMethod(locationName: string, longTermRetentionServerName: string, longTermRetentionDatabaseName: string, backupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: longTermRetentionDatabaseName
          type:
            - string
          description: Der Name der Datenbank
        - id: backupName
          type:
            - string
          description: Der Name der Sicherungskopie.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.get'
    name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ruft eine langfristige Aufbewahrung Sicherung ab.
    syntax:
      content: 'function get(locationName: string, longTermRetentionServerName: string, longTermRetentionDatabaseName: string, backupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank.
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: longTermRetentionDatabaseName
          type:
            - string
          description: Der Name der Datenbank
        - id: backupName
          type:
            - string
          description: Der Name der Sicherungskopie.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.get_2'
    name: 'get(string, string, string, string, RequestOptionsBase, ServiceCallback<LongTermRetentionBackup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(locationName: string, longTermRetentionServerName: string, longTermRetentionDatabaseName: string, backupName: string, options: RequestOptionsBase, callback: ServiceCallback<LongTermRetentionBackup>)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank.
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: longTermRetentionDatabaseName
          type:
            - string
          description: Der Name der Datenbank
        - id: backupName
          type:
            - string
          description: Der Name der Sicherungskopie.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackup>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.get_1'
    name: 'get(string, string, string, string, ServiceCallback<LongTermRetentionBackup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(locationName: string, longTermRetentionServerName: string, longTermRetentionDatabaseName: string, backupName: string, callback: ServiceCallback<LongTermRetentionBackup>)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank.
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: longTermRetentionDatabaseName
          type:
            - string
          description: Der Name der Datenbank
        - id: backupName
          type:
            - string
          description: Der Name der Sicherungskopie.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackup>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabase_2'
    name: 'listByDatabase(string, string, string, LongTermRetentionBackupsListByDatabaseOptionalParams, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByDatabase(locationName: string, longTermRetentionServerName: string, longTermRetentionDatabaseName: string, options: LongTermRetentionBackupsListByDatabaseOptionalParams, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: longTermRetentionDatabaseName
          type:
            - string
          description: Der Name der Datenbank
        - id: options
          type:
            - '@azure/arm-sql.LongTermRetentionBackupsListByDatabaseOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByDatabaseResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabase'
    name: 'listByDatabase(string, string, string, Models.LongTermRetentionBackupsListByDatabaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet alle Sicherungen mit langfristiger Aufbewahrung für eine Datenbank an.
    syntax:
      content: 'function listByDatabase(locationName: string, longTermRetentionServerName: string, longTermRetentionDatabaseName: string, options?: Models.LongTermRetentionBackupsListByDatabaseOptionalParams)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: longTermRetentionDatabaseName
          type:
            - string
          description: Der Name der Datenbank
        - id: options
          type:
            - Models.LongTermRetentionBackupsListByDatabaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByDatabaseResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabase_1'
    name: 'listByDatabase(string, string, string, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByDatabase(locationName: string, longTermRetentionServerName: string, longTermRetentionDatabaseName: string, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: longTermRetentionDatabaseName
          type:
            - string
          description: Der Name der Datenbank
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByDatabaseResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext'
    name: 'listByDatabaseNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet alle Sicherungen mit langfristiger Aufbewahrung für eine Datenbank an.
    syntax:
      content: 'function listByDatabaseNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByDatabaseNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext_2'
    name: 'listByDatabaseNext(string, RequestOptionsBase, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByDatabaseNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByDatabaseNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext_1'
    name: 'listByDatabaseNext(string, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByDatabaseNext(nextPageLink: string, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByDatabaseNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocation_2'
    name: 'listByLocation(string, LongTermRetentionBackupsListByLocationOptionalParams, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByLocation(locationName: string, options: LongTermRetentionBackupsListByLocationOptionalParams, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: options
          type:
            - '@azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByLocationResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocation'
    name: 'listByLocation(string, Models.LongTermRetentionBackupsListByLocationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet die Sicherungen mit langfristiger Aufbewahrung für einen bestimmten Standort.
    syntax:
      content: 'function listByLocation(locationName: string, options?: Models.LongTermRetentionBackupsListByLocationOptionalParams)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: options
          type:
            - Models.LongTermRetentionBackupsListByLocationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByLocationResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocation_1'
    name: 'listByLocation(string, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByLocation(locationName: string, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByLocationResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext'
    name: 'listByLocationNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet die Sicherungen mit langfristiger Aufbewahrung für einen bestimmten Standort.
    syntax:
      content: 'function listByLocationNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByLocationNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext_2'
    name: 'listByLocationNext(string, RequestOptionsBase, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByLocationNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByLocationNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext_1'
    name: 'listByLocationNext(string, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByLocationNext(nextPageLink: string, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByLocationNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByServer_2'
    name: 'listByServer(string, string, LongTermRetentionBackupsListByServerOptionalParams, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServer(locationName: string, longTermRetentionServerName: string, options: LongTermRetentionBackupsListByServerOptionalParams, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: options
          type:
            - '@azure/arm-sql.LongTermRetentionBackupsListByServerOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByServerResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByServer'
    name: 'listByServer(string, string, Models.LongTermRetentionBackupsListByServerOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet die Sicherungen mit langfristiger Aufbewahrung für einen bestimmten Server.
    syntax:
      content: 'function listByServer(locationName: string, longTermRetentionServerName: string, options?: Models.LongTermRetentionBackupsListByServerOptionalParams)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: options
          type:
            - Models.LongTermRetentionBackupsListByServerOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByServerResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByServer_1'
    name: 'listByServer(string, string, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServer(locationName: string, longTermRetentionServerName: string, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: locationName
          type:
            - string
          description: Der Speicherort der Datenbank
        - id: longTermRetentionServerName
          type:
            - string
          description: Name des Servers
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByServerResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByServerNext'
    name: 'listByServerNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet die Sicherungen mit langfristiger Aufbewahrung für einen bestimmten Server.
    syntax:
      content: 'function listByServerNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByServerNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByServerNext_2'
    name: 'listByServerNext(string, RequestOptionsBase, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServerNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByServerNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.listByServerNext_1'
    name: 'listByServerNext(string, ServiceCallback<LongTermRetentionBackupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServerNext(nextPageLink: string, callback: ServiceCallback<LongTermRetentionBackupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.LongTermRetentionBackupsListByServerNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.LongTermRetentionBackups.constructor'
    name: LongTermRetentionBackups(SqlManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Erstellen Sie eine LongTermRetentionBackups.
    syntax:
      content: 'new LongTermRetentionBackups(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-sql.SqlManagementClientContext'
          description: |
            Verweis auf den Dienstclient.
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.SqlManagementClientContext'
    name: SqlManagementClientContext
    spec.typeScript:
      - name: SqlManagementClientContext
        fullName: SqlManagementClientContext
        uid: '@azure/arm-sql.SqlManagementClientContext'
  - uid: ServiceCallback<@azure/arm-sql.LongTermRetentionBackup>
    name: LongTermRetentionBackup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LongTermRetentionBackup
        fullName: LongTermRetentionBackup
        uid: '@azure/arm-sql.LongTermRetentionBackup'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.LongTermRetentionBackupListResult>
    name: LongTermRetentionBackupListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LongTermRetentionBackupListResult
        fullName: LongTermRetentionBackupListResult
        uid: '@azure/arm-sql.LongTermRetentionBackupListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-sql.LongTermRetentionBackupsListByDatabaseOptionalParams'
    name: LongTermRetentionBackupsListByDatabaseOptionalParams
    spec.typeScript:
      - name: LongTermRetentionBackupsListByDatabaseOptionalParams
        fullName: LongTermRetentionBackupsListByDatabaseOptionalParams
        uid: '@azure/arm-sql.LongTermRetentionBackupsListByDatabaseOptionalParams'
  - uid: '@azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams'
    name: LongTermRetentionBackupsListByLocationOptionalParams
    spec.typeScript:
      - name: LongTermRetentionBackupsListByLocationOptionalParams
        fullName: LongTermRetentionBackupsListByLocationOptionalParams
        uid: '@azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams'
  - uid: '@azure/arm-sql.LongTermRetentionBackupsListByServerOptionalParams'
    name: LongTermRetentionBackupsListByServerOptionalParams
    spec.typeScript:
      - name: LongTermRetentionBackupsListByServerOptionalParams
        fullName: LongTermRetentionBackupsListByServerOptionalParams
        uid: '@azure/arm-sql.LongTermRetentionBackupsListByServerOptionalParams'