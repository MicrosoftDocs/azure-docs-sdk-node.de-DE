### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    fullName: FaceListAddFaceFromStreamOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="2803b-101">Optionale Parameter.</span><span class="sxs-lookup"><span data-stu-id="2803b-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="2803b-102">Das Signal der Abbruch von Anforderungen verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="2803b-102">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="2803b-103">{Object} [CustomHeaders] Benutzerdefinierte benutzerdefinierten-Anforderungsheadern, die angewendet werden, bevor die Anforderung gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="2803b-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="2803b-104">Rückruf, das auf den Fortschritt des Downloads ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="2803b-104">Callback which fires upon download progress.</span></span>'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="2803b-105">Rückruf, das ausgelöst, auf den Fortschritt des Dateiuploads wird.</span><span class="sxs-lookup"><span data-stu-id="2803b-105">Callback which fires upon upload progress.</span></span>'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="2803b-106">Eine gesichtsrechteck an das Ziel Gesicht einer Person in das Format der hinzuzufügenden "TargetFace = links, oben, Breite, Höhe".</span><span class="sxs-lookup"><span data-stu-id="2803b-106">A face rectangle to specify the target face to be added to a person in the format of "targetFace=left,top,width,height".</span></span> <span data-ttu-id="2803b-107">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="2803b-107">E.g.</span></span> <span data-ttu-id="2803b-108">"targetFace=10,10,100,100".</span><span class="sxs-lookup"><span data-stu-id="2803b-108">"targetFace=10,10,100,100".</span></span> <span data-ttu-id="2803b-109">Bei wird mehr als ein Gesicht im Bild ist TargetFace benötigt, um anzugeben, die auftreten, hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="2803b-109">If there is more than one face in the image, targetFace is required to specify which face to add.</span></span> <span data-ttu-id="2803b-110">Keine TargetFace bedeutet, dass es nur eine Seite, die in das gesamte Bild erkannt.</span><span class="sxs-lookup"><span data-stu-id="2803b-110">No targetFace means there is only one face detected in the entire image.</span></span>'
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="2803b-111">Bevor Sie automatisch beendet wird, ist die Anzahl der Millisekunden, die eine Anforderung dauert.</span><span class="sxs-lookup"><span data-stu-id="2803b-111">The number of milliseconds a request can take before automatically being terminated.</span></span>'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="2803b-112">Benutzer angegebene Daten über das Gesicht für einen bestimmten Zweck.</span><span class="sxs-lookup"><span data-stu-id="2803b-112">User-specified data about the face for any purpose.</span></span> <span data-ttu-id="2803b-113">Die maximale Länge beträgt 1KB.</span><span class="sxs-lookup"><span data-stu-id="2803b-113">The maximum length is 1KB.</span></span>
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'