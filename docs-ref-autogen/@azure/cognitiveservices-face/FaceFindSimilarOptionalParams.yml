### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
    name: FaceFindSimilarOptionalParams
    fullName: FaceFindSimilarOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceIds'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceListId'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.largeFaceListId'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.maxNumOfCandidatesReturned'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.mode'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: Optionale Parameter.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: Das Signal der Abbruch von Anforderungen verwendet werden kann.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Object} [CustomHeaders] Benutzerdefinierte benutzerdefinierten-Anforderungsheadern, die angewendet werden, bevor die Anforderung gesendet wird.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceIds'
    name: faceIds
    fullName: faceIds
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Ein Array von möglichen FaceIds. Alle von ihnen entstehen durch die Gesichtserkennungs - erkennen und die FaceIds läuft 24 Stunden nach dem Aufruf der Erkennung. Die Anzahl der FaceIds ist auf 1000 beschränkt. Parameter FaceListId, LargeFaceListId und FaceIds darf nicht gleichzeitig angegeben werden.'
    optional: true
    syntax:
      content: 'faceIds?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceListId'
    name: faceListId
    fullName: faceListId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Vorhandene Benutzer angegebenen eindeutigen Candidate Gesicht Liste erstellt, in der Liste der Gesichtserkennungs - erstellen Sie eine Gesichts-Liste. Gesichtserkennungs-Liste enthält eine Reihe von PersistedFaceIds werden beibehalten und nie abläuft.
      Parameter FaceListId, LargeFaceListId und FaceIds darf nicht gleichzeitig angegeben werden.
    optional: true
    syntax:
      content: 'faceListId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.largeFaceListId'
    name: largeFaceListId
    fullName: largeFaceListId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Vorhandene Benutzer angegebenen eindeutigen Candidate große Fläche Liste erstellt wird, im LargeFaceList – erstellen. Große Fläche Liste enthält eine Reihe von PersistedFaceIds werden beibehalten und nie abläuft. Parameter FaceListId, LargeFaceListId und FaceIds darf nicht gleichzeitig angegeben werden.'
    optional: true
    syntax:
      content: 'largeFaceListId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.maxNumOfCandidatesReturned'
    name: maxNumOfCandidatesReturned
    fullName: maxNumOfCandidatesReturned
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Anzahl der obersten ähnlicher Gesichter zurückgegeben. Der gültige Bereich ist [1, 1000]. Standardwert: 20.'
    optional: true
    syntax:
      content: 'maxNumOfCandidatesReturned?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.mode'
    name: mode
    fullName: mode
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Ähnlich wie Face Durchsuchen-Modus. Es kann "MatchPerson" oder "MatchFace" sein. Folgende Werte sind möglich: ''MatchPerson'', "MatchFace". Standardwert: "MatchPerson".'
    optional: true
    syntax:
      content: 'mode?: FindSimilarMatchMode'
      return:
        type:
          - '@azure/cognitiveservices-face.FindSimilarMatchMode'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Rückruf, das auf den Fortschritt des Downloads ausgelöst wird.'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Rückruf, das ausgelöst, auf den Fortschritt des Dateiuploads wird.'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Bevor Sie automatisch beendet wird, ist die Anzahl der Millisekunden, die eine Anforderung dauert.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FindSimilarMatchMode'
    name: FindSimilarMatchMode
    spec.typeScript:
      - name: FindSimilarMatchMode
        fullName: FindSimilarMatchMode
        uid: '@azure/cognitiveservices-face.FindSimilarMatchMode'