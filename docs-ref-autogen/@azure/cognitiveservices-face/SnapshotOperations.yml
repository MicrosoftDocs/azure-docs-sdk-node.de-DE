### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.SnapshotOperations'
    name: SnapshotOperations
    fullName: SnapshotOperations
    children:
      - '@azure/cognitiveservices-face.SnapshotOperations.apply'
      - '@azure/cognitiveservices-face.SnapshotOperations.apply_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.apply_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.get'
      - '@azure/cognitiveservices-face.SnapshotOperations.get_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.get_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.list'
      - '@azure/cognitiveservices-face.SnapshotOperations.list_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.list_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.constructor'
      - '@azure/cognitiveservices-face.SnapshotOperations.take'
      - '@azure/cognitiveservices-face.SnapshotOperations.take_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.take_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.update'
      - '@azure/cognitiveservices-face.SnapshotOperations.update_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.update_2'
    langs:
      - typeScript
    type: class
    summary: 'Klasse, die eine SnapshotOperations darstellt.'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply'
    name: 'apply(string, string, Models.SnapshotApplyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Senden Sie einen Vorgang, um eine Momentaufnahme für aktuellen Abonnement zu übernehmen. Für jede Momentaufnahme, die nur enthalten, die in der ApplyScope der Momentaufnahme - Abonnements kann nehmen sie anwenden.<br />
      Die Speichermomentaufnahme-Schnittstellen sind für Benutzer Daten sichern und Wiederherstellen ihrer Fläche aus einem Gesicht-Abonnement zu einem anderen innerhalb derselben Region oder regionsübergreifend. Der Workflow enthält zwei Phasen, ruft Benutzer zunächst, dass die Momentaufnahme - brauchen, um eine Kopie des Quellobjekts erstellen, und speichern es als eine Momentaufnahme ruft dann Snapshot - anwenden, um die Momentaufnahme in das Zielabonnement einfügen. Die Momentaufnahmen werden an einem zentralen Ort (pro Azure-Instanz), gespeichert, sodass sie plattformübergreifende Konten und Regionen angewendet werden können.<br />
      Anwenden der Momentaufnahme ist ein asynchroner Vorgang. Eine Vorgangs-Id kann abgerufen werden, aus dem Feld "Operation-Location" Antwort-Header, in OperationStatus - Get zum Nachverfolgen des Status der Anwendung der Momentaufnahme verwendet werden. Im Feld "ResourceLocation verwendet" OperationStatus - Get-Antwort, wenn der Vorgangsstatus "erfolgreich"angezeigt wird, wird die Objekt-Id enthalten sein.<br />
      Momentaufnahme anwenden Zeit hängt von der Anzahl von Personen- und gesichtsbezogenen Angaben Einträgen in der Momentaufnahmeobjekt.
      Es kann in Sekunden, oder bis zu 1 Stunde, für die 1.000.000 Personen mit mehrere Gesichter.<br />
      Momentaufnahmen automatisch abgelaufen ist und in 48 Stunden nach der Erstellung von Momentaufnahme gelöscht.
      - In Anspruch nehmen. Das Zielabonnement muss also die Momentaufnahme in 48 Stunden seit seiner Erstellung anwenden.<br />
      Anwenden einer Momentaufnahme wird nicht blockiert alle anderen Vorgänge für das Ziel Objekt, jedoch davon abgeraten, da die Richtigkeit beim Anwenden der Momentaufnahme nicht garantiert werden kann. Nach dem Anwenden der Momentaufnahme abgeschlossen ist, können alle Vorgänge für das Zielobjekt normal funktionieren.
      Momentaufnahme enthält auch die trainingsergebnissen des Quellobjekts, das Zielabonnement die Momentaufnahme angewendet wird, wird keine müssen erneut trainiert das Zielobjekt vor dem Aufrufen von identifizieren/FindSimilar bedeutet.<br />
      Eine Momentaufnahme kann parallel mehrmals angewendet werden, während derzeit nur CreateNew übernehmen Modus, was, dass der Apply-Vorgang fehl unterstützt wird bedeutet, wenn die Zielabonnement bereits ein Objekt mit demselben Typ und die gleiche Objekt-ID enthält. Benutzer können die "ObjectId" im Anforderungstext, um solche Konflikte zu vermeiden angeben.<br />
      * Free-Tarif-Abonnement-Kontingent: Wenden Sie 100 Vorgänge pro Monat.
      * Das abonnementkontingent S0-Tarif: 100 gelten Vorgängen pro Tag.
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, options?: Models.SnapshotApplyOptionalParams)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: objectId
          type:
            - string
          description: Vom Benutzer angegebene Zielobjekt-Id aus der Momentaufnahme erstellt werden.
        - id: options
          type:
            - Models.SnapshotApplyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply_1'
    name: 'apply(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: objectId
          type:
            - string
          description: Vom Benutzer angegebene Zielobjekt-Id aus der Momentaufnahme erstellt werden.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply_2'
    name: 'apply(string, string, SnapshotApplyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, options: SnapshotApplyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: objectId
          type:
            - string
          description: Vom Benutzer angegebene Zielobjekt-Id aus der Momentaufnahme erstellt werden.
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Löschen Sie eine vorhandene Momentaufnahme gemäß der SnapshotId. Alle Objektdaten und Informationen in der Momentaufnahme werden ebenfalls gelöscht. Nur das quellabonnement, das die Momentaufnahme erfasst wurde, kann die Momentaufnahme löschen. Wenn der Benutzer eine Momentaufnahme mit dieser API nicht gelöscht wird, wird die Momentaufnahme weiterhin automatisch in 48 Stunden nach der Erstellung gelöscht werden.'
    syntax:
      content: 'function deleteMethod(snapshotId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(snapshotId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(snapshotId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Abrufen von Informationen zu einer Momentaufnahme. Snapshot kann nur zugegriffen werden, um das quellabonnement, das die Ausführung gedauert, und Zielabonnements, die in der ApplyScope in enthalten eine Momentaufnahme - dauern.'
    syntax:
      content: 'function get(snapshotId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(snapshotId: string, options: RequestOptionsBase, callback: ServiceCallback<Snapshot>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Snapshot>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get_1'
    name: 'get(string, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(snapshotId: string, callback: ServiceCallback<Snapshot>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Snapshot>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus'
    name: 'getOperationStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Rufen Sie den Status eines Momentaufnahmevorgangs Take unteilbar sein/angewendet.
    syntax:
      content: 'function getOperationStatus(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: Vorgang "snapshot" verweist auf ID einer bestimmten Take unteilbar sein/angewendet.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_2'
    name: 'getOperationStatus(string, RequestOptionsBase, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationStatus(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: operationId
          type:
            - string
          description: Vorgang "snapshot" verweist auf ID einer bestimmten Take unteilbar sein/angewendet.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_1'
    name: 'getOperationStatus(string, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationStatus(operationId: string, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: operationId
          type:
            - string
          description: Vorgang "snapshot" verweist auf ID einer bestimmten Take unteilbar sein/angewendet.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list'
    name: list(Models.SnapshotListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Auflisten aller zugegriffen werden Momentaufnahmen mit weiteren Informationen, einschließlich Momentaufnahmen, die vom Benutzer ausgeführt wurden oder Momentaufnahmen, die für den Benutzer angewendet werden (Abonnement-Id wurde in der ApplyScope in Momentaufnahme eingeschlossen – dauern).'
    syntax:
      content: 'function list(options?: Models.SnapshotListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.SnapshotListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list_1'
    name: 'list(ServiceCallback<Snapshot[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<Snapshot[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list_2'
    name: 'list(SnapshotListOptionalParams, ServiceCallback<Snapshot[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: SnapshotListOptionalParams, callback: ServiceCallback<Snapshot[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotListOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.constructor'
    name: SnapshotOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Erstellen Sie eine SnapshotOperations.
    syntax:
      content: 'new SnapshotOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Verweis auf den Dienstclient.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take'
    name: 'take(Models.SnapshotObjectType, string, string[], Models.SnapshotTakeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Senden Sie einen Vorgang zum Erstellen von einer Momentaufnahme der gesichtserkennungs-Liste, große gesichtserkennungs-Liste, Personengruppen oder große Personengruppen, mit benutzerdefinierten momentaufnahmetyp Quellobjekt-Id, Bereich und eine optionale Benutzerdaten anwenden.<br />
      Die Speichermomentaufnahme-Schnittstellen sind für Benutzer Daten sichern und Wiederherstellen ihrer Fläche aus einem Gesicht-Abonnement zu einem anderen innerhalb derselben Region oder regionsübergreifend. Der Workflow enthält zwei Phasen, ruft Benutzer zunächst, dass die Momentaufnahme - brauchen, um eine Kopie des Quellobjekts erstellen, und speichern es als eine Momentaufnahme ruft dann Snapshot - anwenden, um die Momentaufnahme in das Zielabonnement einfügen. Die Momentaufnahmen werden an einem zentralen Ort (pro Azure-Instanz), gespeichert, sodass sie plattformübergreifende Konten und Regionen angewendet werden können.<br />
      Erstellen der Momentaufnahme ist ein asynchroner Vorgang. Eine Vorgangs-Id kann abgerufen werden, aus dem Feld "Operation-Location" Antwort-Header, in OperationStatus - Get zum Nachverfolgen des Status der Erstellung der Momentaufnahme verwendet werden. Im Feld "ResourceLocation verwendet" OperationStatus - Get-Antwort, wenn der Vorgangsstatus "erfolgreich"angezeigt wird, wird die Id der Momentaufnahme enthalten sein.<br />
      Momentaufnahme dauert, hängt von der Anzahl von Personen- und gesichtsbezogenen Angaben Einträge in das Quellobjekt ab. Es kann innerhalb von Sekunden, oder bis zu mehrere Stunden 1.000.000 Personen mit mehrere Gesichter sein.<br />
      Momentaufnahmen automatisch abgelaufen ist und in 48 Stunden nach der Erstellung von Momentaufnahme gelöscht.
      - In Anspruch nehmen. Der Benutzer kann die Momentaufnahme mithilfe von Momentaufnahme - Delete selbst jederzeit vor dem Ablauf löschen.<br />
      Erstellen der Momentaufnahme für ein bestimmtes Objekt wird keine anderen Vorgänge für das Objekt nicht blockiert. Alle Lesevorgänge (Get/auflisten und Identität/FindSimilar/Verify) können wie gewohnt durchgeführt werden. Sie sind für alle beschreibbaren Vorgänge, einschließlich Hinzufügen/Aktualisieren/löschen das Quellobjekt oder Personen/Gesichter und Trainieren nicht blockiert jedoch nicht empfohlen, da ein beschreibbare Aktualisierungen nicht auf die Momentaufnahme während der Durchführung wiedergegeben werden können. Nach dem Snapshot dauert abgeschlossen ist, können alle Lese- und Schreibberechtigung für Vorgänge wie gewohnt arbeiten. Momentaufnahme die trainingsergebnissen des Quellobjekts, dazu gehören auch das Zielabonnement die Momentaufnahme angewendet wird, wird keine müssen erneut trainiert das Zielobjekt vor dem Aufrufen von identifizieren/FindSimilar bedeutet.<br />
      * Free-Tarif-Abonnement-Kontingent: 100 Vorgänge pro Monat in Anspruch nehmen.
      * Das abonnementkontingent S0-Tarif: 100 Vorgänge pro Tag in Anspruch nehmen.
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], options?: Models.SnapshotTakeOptionalParams)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: 'Benutzerdefinierter Typ für das Quellobjekt zum Aufzeichnen einer Momentaufnahme aus. Derzeit werden FaceList "," PersonGroup "," LargeFaceList "und" LargePersonGroup unterstützt. Mögliche Werte sind: ''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: Vom Benutzer angegebene Quellobjekt-Id zum Aufzeichnen einer Momentaufnahme aus.
        - id: applyScope
          type:
            - 'string[]'
          description: 'Vom Benutzer angegebene Array von Ziel-Face-Abonnement-Ids für die Momentaufnahme an. Für jede Momentaufnahme, die nur enthalten, die in der ApplyScope der Momentaufnahme - Abonnements kann nehmen sie anwenden.'
        - id: options
          type:
            - Models.SnapshotTakeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take_1'
    name: 'take(Models.SnapshotObjectType, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], callback: ServiceCallback<void>)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: 'Benutzerdefinierter Typ für das Quellobjekt zum Aufzeichnen einer Momentaufnahme aus. Derzeit werden FaceList "," PersonGroup "," LargeFaceList "und" LargePersonGroup unterstützt. Mögliche Werte sind: ''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: Vom Benutzer angegebene Quellobjekt-Id zum Aufzeichnen einer Momentaufnahme aus.
        - id: applyScope
          type:
            - 'string[]'
          description: 'Vom Benutzer angegebene Array von Ziel-Face-Abonnement-Ids für die Momentaufnahme an. Für jede Momentaufnahme, die nur enthalten, die in der ApplyScope der Momentaufnahme - Abonnements kann nehmen sie anwenden.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take_2'
    name: 'take(Models.SnapshotObjectType, string, string[], SnapshotTakeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], options: SnapshotTakeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: 'Benutzerdefinierter Typ für das Quellobjekt zum Aufzeichnen einer Momentaufnahme aus. Derzeit werden FaceList "," PersonGroup "," LargeFaceList "und" LargePersonGroup unterstützt. Mögliche Werte sind: ''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: Vom Benutzer angegebene Quellobjekt-Id zum Aufzeichnen einer Momentaufnahme aus.
        - id: applyScope
          type:
            - 'string[]'
          description: 'Vom Benutzer angegebene Array von Ziel-Face-Abonnement-Ids für die Momentaufnahme an. Für jede Momentaufnahme, die nur enthalten, die in der ApplyScope der Momentaufnahme - Abonnements kann nehmen sie anwenden.'
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update'
    name: 'update(string, Models.SnapshotUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Aktualisieren Sie die Informationen einer Momentaufnahme. Nur das quellabonnement, das die Momentaufnahme erfasst wurde, kann die Momentaufnahme aktualisieren.'
    syntax:
      content: 'function update(snapshotId: string, options?: Models.SnapshotUpdateOptionalParams)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: options
          type:
            - Models.SnapshotUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(snapshotId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update_2'
    name: 'update(string, SnapshotUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(snapshotId: string, options: SnapshotUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: Die ID eine bestimmte Momentaufnahme verweisen.
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
    name: SnapshotApplyOptionalParams
    spec.typeScript:
      - name: SnapshotApplyOptionalParams
        fullName: SnapshotApplyOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Snapshot>
    name: Snapshot>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Snapshot
        fullName: Snapshot
        uid: '@azure/cognitiveservices-face.Snapshot'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
    name: OperationStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/cognitiveservices-face.OperationStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
    name: 'Snapshot[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Snapshot
        fullName: Snapshot
        uid: '@azure/cognitiveservices-face.Snapshot'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams'
    name: SnapshotListOptionalParams
    spec.typeScript:
      - name: SnapshotListOptionalParams
        fullName: SnapshotListOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams'
  - uid: '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
    name: SnapshotTakeOptionalParams
    spec.typeScript:
      - name: SnapshotTakeOptionalParams
        fullName: SnapshotTakeOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
  - uid: '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'
    name: SnapshotUpdateOptionalParams
    spec.typeScript:
      - name: SnapshotUpdateOptionalParams
        fullName: SnapshotUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'