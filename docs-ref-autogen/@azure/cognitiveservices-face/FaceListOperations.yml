### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListOperations'
    name: FaceListOperations
    fullName: FaceListOperations
    children:
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.FaceListOperations.create_2'
      - '@azure/cognitiveservices-face.FaceListOperations.create'
      - '@azure/cognitiveservices-face.FaceListOperations.create_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.FaceListOperations.constructor'
      - '@azure/cognitiveservices-face.FaceListOperations.get_2'
      - '@azure/cognitiveservices-face.FaceListOperations.get'
      - '@azure/cognitiveservices-face.FaceListOperations.get_1'
      - '@azure/cognitiveservices-face.FaceListOperations.list_2'
      - '@azure/cognitiveservices-face.FaceListOperations.list'
      - '@azure/cognitiveservices-face.FaceListOperations.list_1'
      - '@azure/cognitiveservices-face.FaceListOperations.update_2'
      - '@azure/cognitiveservices-face.FaceListOperations.update'
      - '@azure/cognitiveservices-face.FaceListOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: 'Klasse, die eine FaceListOperations darstellt.'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, FaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, options: FaceListAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Ein Bild-Stream.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, Models.FaceListAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Hiermit fügen Sie ein Gesicht einer angegebenen Liste mit Gesichtern hinzu. Bis zu 1.000 Gesichter können hinzugefügt werden.
      <br /> Um den Umgang mit einem Bild enthält mehrere Gesichter, Eingabe Gesicht kann als ein Bild mit einem Rechteck TargetFace angegeben werden. Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt. Kein Bild gespeichert werden. Nur das extrahierte gesichtserkennungs-Feature wird auf Server erst gespeichert werden [FaceList - Gesicht löschen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395251) oder [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) aufgerufen wird.
      <br /> Hinweis PersistedFaceId unterscheidet sich vom FaceId [konfrontiert: erkennen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Höhere Gesicht Bildqualität bedeutet, dass eine bessere Erkennung und die Genauigkeit der Erkennung. Erwägen Sie die Gesichter von hoher Qualität: frontalansicht, Clear- und Gesicht beträgt 200 x 200 Pixel (100 Pixel zwischen Augen) oder größer.
      * JPEG, PNG, GIF (der erste Frame) und BMP-Format werden unterstützt. Die zulässige Dateigröße liegt zwischen 1KB und 6MB.
      * "TargetFace" Rechteck sollte eine Seite enthalten. Keine oder mehrere Gesichter werden als Fehler betrachtet werden. Wenn das Rechteck angegebenen "TargetFace" aus nicht zurückgegeben wird [konfrontiert: erkennen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), es gibt keine Garantie aus, um zu erkennen, und fügen das Gesicht erfolgreich.
      * Out-of erkennbare gesichtserkennungs-Größe (36 x 36-4096 X 4096 Pixel) werden große kopfpose oder große Occlusions Fehler verursachen.
      * Hinzufügen/Löschen von Gesichtern in eine Liste der gleichen Gesicht werden nacheinander verarbeitet und in einen bzw. aus anderen Gesicht Listen, die parallel sind.
      * Die minimale erkennbare gesichtserkennungs-Größe ist 36 x 36 Pixel in einem Bild 1920 x 1080 Pixel nicht überschreiten.
      Bilder mit Dimensionen, die höher ist als 1920 x 1080 Pixel benötigen proportional minimale Gesicht vergrößern.
      * Verschiedene "DetectionModel'-Werte können angegeben werden. Zum verwenden und die von anderen erkennungsmodelle vergleichen können, finden Sie in [wie ein Modell zur Erkennung angegeben.](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modell | Empfohlene Verwendung-case(s) |
      | ---------- | -------- |
      | 'detection_01': | Das Standardmodell für die Erkennung für [FaceList - hinzufügen
      Face](/docs/Services/563879b61984550e40cbbe8d/Operations/563879b61984550f30395250). Wird für die in der Nähe von frontal angezeigten Gesichtern Erkennung empfohlen. Für Szenarien mit außergewöhnlich große Spitze (kopfpose) Gesichtern, okkludierte Gesichter oder falsche bildausrichtung werden die Gesichter in solchen Fällen möglicherweise nicht erkannt. | | 'detection_02': | 2019 veröffentlicht Modells zur Erkennung kann mit verbesserter Genauigkeit vor allem auf klein ","-Seite "und" verschwommenen Gesichter. |
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, options?: Models.FaceListAddFaceFromStreamOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Ein Bild-Stream.
        - id: options
          type:
            - Models.FaceListAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Ein Bild-Stream.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, FaceListAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, options: FaceListAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: url
          type:
            - string
          description: Öffentlich erreichbar URL eines Bilds
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, Models.FaceListAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Hiermit fügen Sie ein Gesicht einer angegebenen Liste mit Gesichtern hinzu. Bis zu 1.000 Gesichter können hinzugefügt werden.
      <br /> Um den Umgang mit einem Bild enthält mehrere Gesichter, Eingabe Gesicht kann als ein Bild mit einem Rechteck TargetFace angegeben werden. Es gibt eine PersistedFaceId, das das hinzugefügte Gesicht darstellt. Kein Bild gespeichert werden. Nur das extrahierte gesichtserkennungs-Feature wird auf Server erst gespeichert werden [FaceList - Gesicht löschen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395251) oder [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) aufgerufen wird.
      <br /> Hinweis PersistedFaceId unterscheidet sich vom FaceId [konfrontiert: erkennen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Höhere Gesicht Bildqualität bedeutet, dass eine bessere Erkennung und die Genauigkeit der Erkennung. Erwägen Sie die Gesichter von hoher Qualität: frontalansicht, Clear- und Gesicht beträgt 200 x 200 Pixel (100 Pixel zwischen Augen) oder größer.
      * JPEG, PNG, GIF (der erste Frame) und BMP-Format werden unterstützt. Die zulässige Dateigröße liegt zwischen 1KB und 6MB.
      * "TargetFace" Rechteck sollte eine Seite enthalten. Keine oder mehrere Gesichter werden als Fehler betrachtet werden. Wenn das Rechteck angegebenen "TargetFace" aus nicht zurückgegeben wird [konfrontiert: erkennen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), es gibt keine Garantie aus, um zu erkennen, und fügen das Gesicht erfolgreich.
      * Out-of erkennbare gesichtserkennungs-Größe (36 x 36-4096 X 4096 Pixel) werden große kopfpose oder große Occlusions Fehler verursachen.
      * Hinzufügen/Löschen von Gesichtern in eine Liste der gleichen Gesicht werden nacheinander verarbeitet und in einen bzw. aus anderen Gesicht Listen, die parallel sind.
      * Die minimale erkennbare gesichtserkennungs-Größe ist 36 x 36 Pixel in einem Bild 1920 x 1080 Pixel nicht überschreiten.
      Bilder mit Dimensionen, die höher ist als 1920 x 1080 Pixel benötigen proportional minimale Gesicht vergrößern.
      * Verschiedene "DetectionModel'-Werte können angegeben werden. Zum verwenden und die von anderen erkennungsmodelle vergleichen können, finden Sie in [wie ein Modell zur Erkennung angegeben.](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modell | Empfohlene Verwendung-case(s) |
      | ---------- | -------- |
      | 'detection_01': | Das Standardmodell für die Erkennung für [FaceList - hinzufügen
      Face](/docs/Services/563879b61984550e40cbbe8d/Operations/563879b61984550f30395250). Wird für die in der Nähe von frontal angezeigten Gesichtern Erkennung empfohlen. Für Szenarien mit außergewöhnlich große Spitze (kopfpose) Gesichtern, okkludierte Gesichter oder falsche bildausrichtung werden die Gesichter in solchen Fällen möglicherweise nicht erkannt. | | 'detection_02': | 2019 veröffentlicht Modells zur Erkennung kann mit verbesserter Genauigkeit vor allem auf klein ","-Seite "und" verschwommenen Gesichter. |
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Models.FaceListAddFaceFromUrlOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: url
          type:
            - string
          description: Öffentlich erreichbar URL eines Bilds
        - id: options
          type:
            - Models.FaceListAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: url
          type:
            - string
          description: Öffentlich erreichbar URL eines Bilds
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_2'
    name: 'create(string, FaceListCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, options: FaceListCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create'
    name: 'create(string, Models.FaceListCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Erstellen Sie eine leere Fläche Liste mit benutzerdefinierten FaceListId, Namen, eine optionale UserData und RecognitionModel. Listen dürfen bis zu 64 Gesicht in einem Abonnement verwendet wird.
      <br /> Gesichtserkennungs-Liste ist eine Liste von Gesichtern, bis zu 1.000 Gesichter, und ein, die [Gesichtserkennungs - Suchen von ähnlichen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).
      <br /> Benutzer sollten nach der Erstellung verwenden [FaceList - Gesicht hinzufügen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250) die Gesichter zu importieren. Kein Bild gespeichert werden. Nur die extrahierten gesichtserkennungs-Funktionen werden gespeichert, auf dem Server, bis [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) aufgerufen wird.
      <br /> Ermitteln Sie, dass für das Szenario wie das Suchen von Prominenten-ähnliche Gesichter, ähnlich wie gesichtserkennung, filtern, ähnlich wie verwendet wird, oder als ein Licht gesichtserkennung und viel Kennung. Aber wenn die tatsächliche Verwendung ist auf die jeweilige Person zu identifizieren, verwenden Sie [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) und [auftreten – identifizieren](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).
      <br /> Erwägen Sie [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) bei der gesichtserkennungs-Anzahl ist groß. Es kann bis zu 1.000.000 Gesichter unterstützen.
      <br />'RecognitionModel' muss angegeben werden, der gesichtserkennungs-Liste zugeordnet werden soll. Der Standardwert für 'RecognitionModel' ist "recognition_01", wenn das aktuelle Modell explizit Geben Sie benötigt werden, das Modell benötigen Sie in diesem Parameter. Neue Flächen, die zu einer vorhandenen gesichtserkennungs-Liste hinzugefügt werden, werden das Modell zur Erkennung verwendet, das bereits mit der Sammlung verknüpft ist. Vorhandenen gesichtserkennungs-Funktionen in eine Gesichts-Liste können nicht aktualisiert werden, auf Funktionen, die von einer anderen Version des Modells zur Erkennung extrahiert werden.
      * 'recognition_01': Das Standardmodell für die Erkennung für [FaceList erstellen](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b). Alle diese erstellt, bevor 2019 März gesichtserkennungs-Listen werden mit diesem Modell zur Erkennung Haftend.
      * 'recognition_02': Der Modell zur Erkennung im 2019 März veröffentlicht wurde. "recognition_02" wird empfohlen, da die gesamtgenauigkeit im Vergleich zu 'recognition_01' verbessert wird.
    syntax:
      content: 'function create(faceListId: string, options?: Models.FaceListCreateOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: options
          type:
            - Models.FaceListCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
    name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Löschen Sie eine Fläche aus einer Liste Gesicht, indem angegebene FaceListId und PersistedFaceId.
      <br /> Hinzufügen/Löschen von Gesichtern in eine Liste der gleichen Gesicht werden nacheinander verarbeitet und in einen bzw. aus anderen Gesicht Listen, die parallel sind.
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: persistedFaceId
          type:
            - string
          description: Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
    name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: persistedFaceId
          type:
            - string
          description: Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
    name: 'deleteFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: persistedFaceId
          type:
            - string
          description: Verweisen auf eine bestimmte PersistedFaceId einer vorhandenen Oberfläche ID.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Hiermit löschen Sie eine angegebene Liste mit Gesichtern.
    syntax:
      content: 'function deleteMethod(faceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(faceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.constructor'
    name: FaceListOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Erstellen Sie eine FaceListOperations.
    syntax:
      content: 'new FaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Verweis auf den Dienstclient.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_2'
    name: 'get(string, FaceListGetOptionalParams, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, options: FaceListGetOptionalParams, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListGetOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get'
    name: 'get(string, Models.FaceListGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Rufen Sie einer Gesichts-Liste FaceListId, Name, UserData, RecognitionModel und Flächen in der gesichtserkennungs-Liste.'
    syntax:
      content: 'function get(faceListId: string, options?: Models.FaceListGetOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: options
          type:
            - Models.FaceListGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_1'
    name: 'get(string, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_2'
    name: 'list(FaceListListOptionalParams, ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: FaceListListOptionalParams, callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListListOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list'
    name: list(Models.FaceListListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gesichtserkennungs-Listen FaceListId, Name, UserData und RecognitionModel aufgelistet. <br />
      Zum Abrufen von Informationen von Face in FaceList verwenden [FaceList - Get](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)
    syntax:
      content: 'function list(options?: Models.FaceListListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.FaceListListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_1'
    name: 'list(ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_2'
    name: 'update(string, FaceListUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, options: FaceListUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update'
    name: 'update(string, Models.FaceListUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Aktualisieren Sie die Informationen aus einer Liste Gesicht.
    syntax:
      content: 'function update(faceListId: string, options?: Models.FaceListUpdateOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: options
          type:
            - Models.FaceListUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Verweisen auf eine Liste von bestimmten Gesicht ID.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromStreamOptionalParams
        fullName: FaceListAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
    name: FaceListAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromUrlOptionalParams
        fullName: FaceListAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
    name: FaceListCreateOptionalParams
    spec.typeScript:
      - name: FaceListCreateOptionalParams
        fullName: FaceListCreateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.FaceList>
    name: FaceList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
    name: FaceListGetOptionalParams
    spec.typeScript:
      - name: FaceListGetOptionalParams
        fullName: FaceListGetOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
    name: 'FaceList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
    name: FaceListListOptionalParams
    spec.typeScript:
      - name: FaceListListOptionalParams
        fullName: FaceListListOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
    name: FaceListUpdateOptionalParams
    spec.typeScript:
      - name: FaceListUpdateOptionalParams
        fullName: FaceListUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'