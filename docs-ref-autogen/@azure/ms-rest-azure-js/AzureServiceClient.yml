### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient'
    name: AzureServiceClient
    fullName: AzureServiceClient
    children:
      - '@azure/ms-rest-azure-js.AzureServiceClient.acceptLanguage'
      - '@azure/ms-rest-azure-js.AzureServiceClient.constructor'
      - '@azure/ms-rest-azure-js.AzureServiceClient.beginLongRunningRequest'
      - '@azure/ms-rest-azure-js.AzureServiceClient.longRunningOperationRetryTimeout'
      - '@azure/ms-rest-azure-js.AzureServiceClient.restoreLROPoller'
      - '@azure/ms-rest-azure-js.AzureServiceClient.sendLongRunningRequest'
      - '@azure/ms-rest-azure-js.AzureServiceClient.sendLRORequest'
      - '@azure/ms-rest-azure-js.AzureServiceClient.sendOperationRequest'
      - '@azure/ms-rest-azure-js.AzureServiceClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.constructor'
    name: 'AzureServiceClient(ServiceClientCredentials, AzureServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new AzureServiceClient(credentials: ServiceClientCredentials, options?: AzureServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: ''
        - id: options
          type:
            - '@azure/ms-rest-azure-js.AzureServiceClientOptions'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="925d3-101">Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine HttpLongRunningOperationResponse, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="925d3-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="925d3-102">Das Request-Objekt</span><span class="sxs-lookup"><span data-stu-id="925d3-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/ms-rest-azure-js.LROPoller>
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="925d3-103">Die Retry-Timeout in Sekunden für zeitintensive Vorgänge werden soll.</span><span class="sxs-lookup"><span data-stu-id="925d3-103">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="925d3-104">Standardwert: 30.</span><span class="sxs-lookup"><span data-stu-id="925d3-104">Default value is 30.</span></span>'
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: number'
      return:
        type:
          - number
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="925d3-105">Stellen Sie eine LROPoller aus der angegebenen LROPollState wieder her.</span><span class="sxs-lookup"><span data-stu-id="925d3-105">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="925d3-106">Diese Methode kann verwendet werden, um eine LROPoller auf einem anderen Prozess oder Computer neu zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="925d3-106">This method can be used to recreate an LROPoller on a different process or machine.</span></span>'
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - '@azure/ms-rest-azure-js.LROPollState'
          description: ''
      return:
        type:
          - '@azure/ms-rest-azure-js.LROPoller'
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="925d3-107">Stellt einen Mechanismus, um eine Anforderung aus, die abgerufen werden, und geben Sie das endgültige Ergebnis bereit.</span><span class="sxs-lookup"><span data-stu-id="925d3-107">Provides a mechanism to make a request that will poll and provide the final result.</span></span>'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="925d3-108">Das Request-Objekt</span><span class="sxs-lookup"><span data-stu-id="925d3-108">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="925d3-109">Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine LROPoller, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="925d3-109">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="925d3-110">Die Argumente für den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="925d3-110">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="925d3-111">Die Spezifikation für den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="925d3-111">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: '<span data-ttu-id="925d3-112">Zusätzliche Optionen, die beim Ausführen der Anforderung gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="925d3-112">Additional options to be sent while making the request.</span></span>'
          optional: true
      return:
        type:
          - Promise<@azure/ms-rest-azure-js.LROPoller>
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="925d3-113">Senden Sie eine HTTP-Anforderung, die mithilfe der bereitgestellten OperationSpec aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="925d3-113">Send an HTTP request that is populated using the provided OperationSpec.</span></span>'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: '<span data-ttu-id="925d3-114">Die Argumente, denen von der HTTP-Anforderung auf Vorlagen basierende Werte aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="925d3-114">The arguments that the HTTP request''s templated values will be populated from.</span></span>'
        - id: operationSpec
          type:
            - OperationSpec
          description: '<span data-ttu-id="925d3-115">Die OperationSpec, mit denen die HTTP-Anforderung aufgefüllt werden soll.</span><span class="sxs-lookup"><span data-stu-id="925d3-115">The OperationSpec to use to populate the httpRequest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="925d3-116">Der Rückruf aufgerufen wird, wenn die Antwort empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="925d3-116">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="925d3-117">Die angegebene HTTP-Anforderung zu senden.</span><span class="sxs-lookup"><span data-stu-id="925d3-117">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/ms-rest-azure-js'
references:
  - uid: '@azure/ms-rest-azure-js.AzureServiceClientOptions'
    name: AzureServiceClientOptions
    spec.typeScript:
      - name: AzureServiceClientOptions
        fullName: AzureServiceClientOptions
        uid: '@azure/ms-rest-azure-js.AzureServiceClientOptions'
  - uid: Promise<@azure/ms-rest-azure-js.LROPoller>
    name: LROPoller>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LROPoller
        fullName: LROPoller
        uid: '@azure/ms-rest-azure-js.LROPoller'
      - name: '>'
        fullName: '>'
  - uid: '@azure/ms-rest-azure-js.LROPollState'
    name: LROPollState
    spec.typeScript:
      - name: LROPollState
        fullName: LROPollState
        uid: '@azure/ms-rest-azure-js.LROPollState'
  - uid: '@azure/ms-rest-azure-js.LROPoller'
    name: LROPoller
    spec.typeScript:
      - name: LROPoller
        fullName: LROPoller
        uid: '@azure/ms-rest-azure-js.LROPoller'