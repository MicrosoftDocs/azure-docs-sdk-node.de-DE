### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient'
    name: PredictionAPIClient
    fullName: PredictionAPIClient
    children:
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey'
    name: apiKey
    fullName: apiKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiKey: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientClassifyImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientClassifyImageOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-101">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-101">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-102">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-102">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-103">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-103">Binary image data.</span></span> <span data-ttu-id="e7bd6-104">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-104">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-105">-Images unterstützt bis zu 4MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-105">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, PredictionAPIClientClassifyImageOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientClassifyImageOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-106">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-106">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-107">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-107">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-108">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-108">Binary image data.</span></span> <span data-ttu-id="e7bd6-109">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-109">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-110">-Images unterstützt bis zu 4MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-110">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
          description: <span data-ttu-id="e7bd6-111">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="e7bd6-111">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-112">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-112">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-113">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-113">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-114">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-114">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-115">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-115">Binary image data.</span></span> <span data-ttu-id="e7bd6-116">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-116">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-117">-Images unterstützt bis zu 4MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-117">Supports images up to 4MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-118">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-118">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl'
    name: 'classifyImageUrl(string, string, ImageUrl, Models.PredictionAPIClientClassifyImageUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientClassifyImageUrlOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-119">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-119">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-120">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-120">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="e7bd6-121">Ein ImageUrl mit der Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-121">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2'
    name: 'classifyImageUrl(string, string, ImageUrl, PredictionAPIClientClassifyImageUrlOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientClassifyImageUrlOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-122">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-122">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-123">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-123">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="e7bd6-124">Ein ImageUrl mit der Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-124">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
          description: <span data-ttu-id="e7bd6-125">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="e7bd6-125">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-126">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-126">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1'
    name: 'classifyImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-127">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-127">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-128">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-128">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="e7bd6-129">Ein ImageUrl mit der Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-129">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-130">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-130">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-131">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-131">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-132">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-132">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="e7bd6-133">Ein {Iris.Web.Api.Models.ImageUrl} enthält, die die Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-133">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-134">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-134">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-135">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-135">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="e7bd6-136">Ein {Iris.Web.Api.Models.ImageUrl} enthält, die die Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-136">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
          description: <span data-ttu-id="e7bd6-137">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="e7bd6-137">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-138">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-138">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-139">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-139">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-140">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-140">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="e7bd6-141">Ein {Iris.Web.Api.Models.ImageUrl} enthält, die die Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-141">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-142">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-142">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-143">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-143">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-144">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-144">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-145">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-145">Binary image data.</span></span> <span data-ttu-id="e7bd6-146">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-146">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-147">-Images unterstützt bis zu 0MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-147">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, PredictionAPIClientClassifyImageWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientClassifyImageWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-148">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-148">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-149">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-149">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-150">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-150">Binary image data.</span></span> <span data-ttu-id="e7bd6-151">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-151">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-152">-Images unterstützt bis zu 0MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-152">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
          description: <span data-ttu-id="e7bd6-153">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="e7bd6-153">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-154">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-154">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-155">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-155">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-156">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-156">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-157">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-157">Binary image data.</span></span> <span data-ttu-id="e7bd6-158">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-158">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-159">-Images unterstützt bis zu 0MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-159">Supports images up to 0MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-160">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-160">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage'
    name: 'detectImage(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientDetectImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientDetectImageOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-161">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-161">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-162">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-162">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-163">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-163">Binary image data.</span></span> <span data-ttu-id="e7bd6-164">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-164">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-165">-Images unterstützt bis zu 4MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-165">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2'
    name: 'detectImage(string, string, msRest.HttpRequestBody, PredictionAPIClientDetectImageOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientDetectImageOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-166">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-166">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-167">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-167">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-168">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-168">Binary image data.</span></span> <span data-ttu-id="e7bd6-169">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-169">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-170">-Images unterstützt bis zu 4MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-170">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
          description: <span data-ttu-id="e7bd6-171">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="e7bd6-171">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-172">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-172">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1'
    name: 'detectImage(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-173">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-173">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-174">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-174">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-175">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-175">Binary image data.</span></span> <span data-ttu-id="e7bd6-176">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-176">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-177">-Images unterstützt bis zu 4MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-177">Supports images up to 4MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-178">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-178">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl'
    name: 'detectImageUrl(string, string, ImageUrl, Models.PredictionAPIClientDetectImageUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientDetectImageUrlOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-179">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-179">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-180">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-180">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="e7bd6-181">Ein ImageUrl mit der Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-181">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2'
    name: 'detectImageUrl(string, string, ImageUrl, PredictionAPIClientDetectImageUrlOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientDetectImageUrlOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-182">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-182">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-183">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-183">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="e7bd6-184">Ein ImageUrl mit der Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-184">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
          description: <span data-ttu-id="e7bd6-185">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="e7bd6-185">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-186">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-186">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1'
    name: 'detectImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-187">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-187">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-188">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-188">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="e7bd6-189">Ein ImageUrl mit der Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-189">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-190">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-190">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-191">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-191">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-192">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-192">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="e7bd6-193">Ein {Iris.Web.Api.Models.ImageUrl} enthält, die die Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-193">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-194">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-194">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-195">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-195">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="e7bd6-196">Ein {Iris.Web.Api.Models.ImageUrl} enthält, die die Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-196">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
          description: <span data-ttu-id="e7bd6-197">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="e7bd6-197">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-198">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-198">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-199">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-199">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-200">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-200">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="e7bd6-201">Ein {Iris.Web.Api.Models.ImageUrl} enthält, die die Url des Bilds ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-201">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-202">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-202">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-203">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-203">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-204">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-204">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-205">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-205">Binary image data.</span></span> <span data-ttu-id="e7bd6-206">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-206">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-207">-Images unterstützt bis zu 0MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-207">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, PredictionAPIClientDetectImageWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientDetectImageWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-208">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-208">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-209">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-209">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-210">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-210">Binary image data.</span></span> <span data-ttu-id="e7bd6-211">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-211">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-212">-Images unterstützt bis zu 0MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-212">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'
          description: <span data-ttu-id="e7bd6-213">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="e7bd6-213">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-214">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-214">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="e7bd6-215">Die Id des Projekts.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-215">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="e7bd6-216">Gibt den Namen des Modells für ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-216">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="e7bd6-217">Binäre Bilddaten.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-217">Binary image data.</span></span> <span data-ttu-id="e7bd6-218">Unterstützte Formate sind JPEG, GIF, PNG und BMP.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-218">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="e7bd6-219">-Images unterstützt bis zu 0MB.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-219">Supports images up to 0MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="e7bd6-220">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="e7bd6-220">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor'
    name: 'PredictionAPIClient(string, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="e7bd6-221">Initialisiert eine neue Instanz der Klasse PredictionAPIClient an.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-221">Initializes a new instance of the PredictionAPIClient class.</span></span>
    syntax:
      content: 'new PredictionAPIClient(apiKey: string, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: apiKey
          type:
            - string
          description: <span data-ttu-id="e7bd6-222">API-Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-222">API key.</span></span>
        - id: endpoint
          type:
            - string
          description: <span data-ttu-id="e7bd6-223">Cognitive Services-Endpunkte unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-223">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e7bd6-224">Senden Sie eine HTTP-Anforderung, die mithilfe der bereitgestellten OperationSpec aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-224">Send an HTTP request that is populated using the provided OperationSpec.</span></span>'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: '<span data-ttu-id="e7bd6-225">Die Argumente, denen von der HTTP-Anforderung auf Vorlagen basierende Werte aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-225">The arguments that the HTTP request''s templated values will be populated from.</span></span>'
        - id: operationSpec
          type:
            - OperationSpec
          description: '<span data-ttu-id="e7bd6-226">Die OperationSpec, mit denen die HTTP-Anforderung aufgefüllt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-226">The OperationSpec to use to populate the httpRequest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="e7bd6-227">Der Rückruf aufgerufen wird, wenn die Antwort empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-227">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e7bd6-228">Die angegebene HTTP-Anforderung zu senden.</span><span class="sxs-lookup"><span data-stu-id="e7bd6-228">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
references:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
    name: PredictionAPIClientContext
    spec.typeScript:
      - name: PredictionAPIClientContext
        fullName: PredictionAPIClientContext
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
    name: ImagePrediction>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImagePrediction
        fullName: ImagePrediction
        uid: '@azure/cognitiveservices-customvision-prediction.ImagePrediction'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
    name: PredictionAPIClientClassifyImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageOptionalParams
        fullName: PredictionAPIClientClassifyImageOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
    name: ImageUrl
    spec.typeScript:
      - name: ImageUrl
        fullName: ImageUrl
        uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
    name: PredictionAPIClientClassifyImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
    name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
    name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
    name: PredictionAPIClientDetectImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageOptionalParams
        fullName: PredictionAPIClientDetectImageOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
    name: PredictionAPIClientDetectImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlOptionalParams
        fullName: PredictionAPIClientDetectImageUrlOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
    name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'
    name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'