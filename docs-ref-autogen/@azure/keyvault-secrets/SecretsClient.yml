### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.SecretsClient'
    name: SecretsClient
    fullName: SecretsClient
    children:
      - '@azure/keyvault-secrets.SecretsClient.backupSecret'
      - '@azure/keyvault-secrets.SecretsClient.deleteSecret'
      - '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
      - '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.getSecret'
      - '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
      - '@azure/keyvault-secrets.SecretsClient.pipeline'
      - '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.restoreSecret'
      - '@azure/keyvault-secrets.SecretsClient.constructor'
      - '@azure/keyvault-secrets.SecretsClient.setSecret'
      - '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
      - '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="c25b4-101">Der Client für die Interaktion mit der Key Vault-Geheimnisse-Funktion</span><span class="sxs-lookup"><span data-stu-id="c25b4-101">The client to interact with the KeyVault secrets functionality</span></span>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.backupSecret'
    name: 'backupSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-102">Fordert an, dass eine Sicherung des angegebenen geheimen Schlüssels an den Client heruntergeladen werden.</span><span class="sxs-lookup"><span data-stu-id="c25b4-102">Requests that a backup of the specified secret be downloaded to the client.</span></span> <span data-ttu-id="c25b4-103">Alle Versionen des geheimen Schlüssels werden heruntergeladen.</span><span class="sxs-lookup"><span data-stu-id="c25b4-103">All versions of the secret will be downloaded.</span></span> <span data-ttu-id="c25b4-104">Dieser Vorgang ist die geheime Schlüssel/Backup-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-104">This operation requires the secrets/backup permission.</span></span>
      <span data-ttu-id="c25b4-105">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-105">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let backupResult = await client.backupSecret("MySecretName");
      ```
    syntax:
      content: 'function backupSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-106">Der Name des Geheimnisses.</span><span class="sxs-lookup"><span data-stu-id="c25b4-106">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.deleteSecret'
    name: 'deleteSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-107">Der DELETE-Vorgang gilt für alle geheimen Schlüssel in Azure Key Vault gespeichert.</span><span class="sxs-lookup"><span data-stu-id="c25b4-107">The DELETE operation applies to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="c25b4-108">DELETE kann nicht für eine einzelne Version eines geheimen Schlüssels angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="c25b4-108">DELETE cannot be applied to an individual version of a secret.</span></span> <span data-ttu-id="c25b4-109">Dieser Vorgang erfordert die Geheimnisse/Delete-Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="c25b4-109">This operation requires the secrets/delete permission.</span></span>
      <span data-ttu-id="c25b4-110">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-110">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      ```
    syntax:
      content: 'function deleteSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-111">Der Name des Geheimnisses.</span><span class="sxs-lookup"><span data-stu-id="c25b4-111">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="c25b4-112">Eine statische Methode verwendet, um ein neues Pipelineobjekt mit den bereitgestellten Anmeldeinformationen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="c25b4-112">A static method used to create a new Pipeline object with the provided Credential.</span></span>'
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-secrets.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
    name: 'getDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-113">Der Vorgang gelöscht-Geheimnis abrufen gibt den angegebenen gelöschten geheimen Schlüssel zusammen mit seinen Attributen zurück.</span><span class="sxs-lookup"><span data-stu-id="c25b4-113">The Get Deleted Secret operation returns the specified deleted secret along with its attributes.</span></span>
      <span data-ttu-id="c25b4-114">Dieser Vorgang ist die geheime Schlüssel/Get-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-114">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="c25b4-115">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-115">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.getDeletedSecret("MyDeletedSecret");
      ```
    syntax:
      content: 'function getDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-116">Der Name des Geheimnisses.</span><span class="sxs-lookup"><span data-stu-id="c25b4-116">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getSecret'
    name: 'getSecret(string, GetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-117">Der GET-Vorgang gilt zwar für alle geheimen Schlüssel in Azure Key Vault gespeichert.</span><span class="sxs-lookup"><span data-stu-id="c25b4-117">The GET operation is applicable to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="c25b4-118">Dieser Vorgang ist die geheime Schlüssel/Get-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-118">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="c25b4-119">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-119">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret("MySecretName");
      ```
    syntax:
      content: 'function getSecret(secretName: string, options?: GetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-120">Der Name des Geheimnisses.</span><span class="sxs-lookup"><span data-stu-id="c25b4-120">The name of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
    name: listDeletedSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-121">Durchlaufen die gelöschte geheimen Schlüssel im Tresor.</span><span class="sxs-lookup"><span data-stu-id="c25b4-121">Iterates the deleted secrets in the vault.</span></span>  <span data-ttu-id="c25b4-122">Der vollständige geheime Bezeichner und Attribute werden in der Antwort bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="c25b4-122">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="c25b4-123">Es werden keine Werte für die geheimen Schlüssel zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="c25b4-123">No values are returned for the secrets.</span></span> <span data-ttu-id="c25b4-124">Diese Vorgänge ist der geheime Schlüssel/List-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-124">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="c25b4-125">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-125">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listDeletedSecrets()) {
        const deletedSecret = await client.getSecret(secretAttr.name);
        console.log("deleted secret: ", deletedSecret);
      }
      ```
    syntax:
      content: 'function listDeletedSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecrets'
    name: listSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-126">Durchlaufen die neueste Version der alle geheimen Schlüssel im Tresor.</span><span class="sxs-lookup"><span data-stu-id="c25b4-126">Iterates the latest version of all secrets in the vault.</span></span>  <span data-ttu-id="c25b4-127">Der vollständige geheime Bezeichner und Attribute werden in der Antwort bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="c25b4-127">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="c25b4-128">Es werden keine Werte für die geheimen Schlüssel zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="c25b4-128">No values are returned for the secrets.</span></span> <span data-ttu-id="c25b4-129">Diese Vorgänge ist der geheime Schlüssel/List-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-129">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="c25b4-130">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-130">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecrets()) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret: ", secret);
      }
      ```
    syntax:
      content: 'function listSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
    name: 'listSecretVersions(string, GetSecretsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-131">Durchläuft alle Versionen des angegebenen geheimen Schlüssels im Tresor.</span><span class="sxs-lookup"><span data-stu-id="c25b4-131">Iterates all versions of the given secret in the vault.</span></span> <span data-ttu-id="c25b4-132">Der vollständige geheime Bezeichner und Attribute werden in der Antwort bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="c25b4-132">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="c25b4-133">Es werden keine Werte für die geheimen Schlüssel zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="c25b4-133">No values are returned for the secrets.</span></span> <span data-ttu-id="c25b4-134">Diese Vorgänge ist der geheime Schlüssel/List-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-134">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="c25b4-135">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-135">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecretVersions("MySecretName")) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret version: ", secret);
      }
      ```
    syntax:
      content: 'function listSecretVersions(secretName: string, options?: GetSecretsOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-136">Name des geheimen Schlüssels zum Abrufen von Versionen</span><span class="sxs-lookup"><span data-stu-id="c25b4-136">Name of the secret to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c25b4-137">Die Optionen zum Erstellen der Verbindung mit dem Dienst</span><span class="sxs-lookup"><span data-stu-id="c25b4-137">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
    name: 'purgeDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-138">Der geheime Bereinigung gelöscht-Vorgang zum den geheime Schlüssel ohne die Möglichkeit zur Wiederherstellung dauerhaft entfernt.</span><span class="sxs-lookup"><span data-stu-id="c25b4-138">The purge deleted secret operation removes the secret permanently, without the possibility of recovery.</span></span> <span data-ttu-id="c25b4-139">Dieser Vorgang kann nur für eine Funktion für vorläufiges Löschen aktiviert Tresor aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="c25b4-139">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id="c25b4-140">Dieser Vorgang erfordert die Berechtigung für geheime Schlüssel/löschen.</span><span class="sxs-lookup"><span data-stu-id="c25b4-140">This operation requires the secrets/purge permission.</span></span>
      <span data-ttu-id="c25b4-141">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-141">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.purgeDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function purgeDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-142">Der Name des Geheimnisses.</span><span class="sxs-lookup"><span data-stu-id="c25b4-142">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
    name: 'recoverDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-143">Wird die Wiederherstellung des gelöschten geheime Schlüssels im angegebenen Tresor.</span><span class="sxs-lookup"><span data-stu-id="c25b4-143">Recovers the deleted secret in the specified vault.</span></span> <span data-ttu-id="c25b4-144">Dieser Vorgang kann nur für eine Funktion für vorläufiges Löschen aktiviert Tresor ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="c25b4-144">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id="c25b4-145">Dieser Vorgang erfordert die Berechtigung für geheime Schlüssel/wiederherstellen.</span><span class="sxs-lookup"><span data-stu-id="c25b4-145">This operation requires the secrets/recover permission.</span></span>
      <span data-ttu-id="c25b4-146">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-146">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.recoverDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function recoverDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-147">Der Name des geheimen Schlüssels gelöscht.</span><span class="sxs-lookup"><span data-stu-id="c25b4-147">The name of the deleted secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.restoreSecret'
    name: 'restoreSecret(Uint8Array, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-148">Stellt Sie einen gesicherten geheimen Schlüssel, und alle seine Versionen in einem Tresor wieder her.</span><span class="sxs-lookup"><span data-stu-id="c25b4-148">Restores a backed up secret, and all its versions, to a vault.</span></span> <span data-ttu-id="c25b4-149">Dieser Vorgang ist der geheime Schlüssel/Restore-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-149">This operation requires the secrets/restore permission.</span></span>
      <span data-ttu-id="c25b4-150">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-150">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let mySecretBundle = await client.backupSecret("MySecretName");
      // ...
      await client.restoreSecret(mySecretBundle);
      ```
    syntax:
      content: 'function restoreSecret(secretBundleBackup: Uint8Array, options?: RequestOptionsBase)'
      parameters:
        - id: secretBundleBackup
          type:
            - Uint8Array
          description: <span data-ttu-id="c25b4-151">Der Blob-Sicherungsdatei mit geheimen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="c25b4-151">The backup blob associated with a secret bundle.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.constructor'
    name: 'SecretsClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-152">Erstellt eine Instanz des SecretsClient.</span><span class="sxs-lookup"><span data-stu-id="c25b4-152">Creates an instance of SecretsClient.</span></span>
      <span data-ttu-id="c25b4-153">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-153">Example usage:</span></span>
      ```ts
      import { SecretsClient } from "@azure/keyvault-secrets";
      import { EnvironmentCredential } from "@azure/identity";

      let url = `https://<MY KEYVAULT HERE>.vault.azure.net`;
      let credentials = new EnvironmentCredential();

      let client = new SecretsClient(url, credentials);
      ```
    syntax:
      content: 'new SecretsClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="c25b4-154">die Basis-Url auf den schlüsseltresor.</span><span class="sxs-lookup"><span data-stu-id="c25b4-154">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.setSecret'
    name: 'setSecret(string, string, SetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-155">Der SET-Vorgang hinzugefügt der Azure-Schlüsseltresor ein geheimer Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="c25b4-155">The SET operation adds a secret to the Azure Key Vault.</span></span> <span data-ttu-id="c25b4-156">Wenn der benannte geheime Schlüssel bereits vorhanden ist, erstellt Azure Key Vault eine neue Version des geheimen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="c25b4-156">If the named secret already exists, Azure Key Vault creates a new version of that secret.</span></span> <span data-ttu-id="c25b4-157">Dieser Vorgang ist die geheime Schlüssel/Set-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-157">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="c25b4-158">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-158">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.setSecret("MySecretName", "ABC123");
      ```
    syntax:
      content: 'function setSecret(secretName: string, value: string, options?: SetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-159">Der Name des Geheimnisses.</span><span class="sxs-lookup"><span data-stu-id="c25b4-159">The name of the secret.</span></span>
        - id: value
          type:
            - string
          description: <span data-ttu-id="c25b4-160">Der Wert des geheimen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="c25b4-160">The value of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.SetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
    name: 'updateSecretAttributes(string, string, UpdateSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c25b4-161">Der UPDATE-Vorgang ändert angegebene Attribute einer vorhandenen gespeicherten, geheimen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="c25b4-161">The UPDATE operation changes specified attributes of an existing stored secret.</span></span> <span data-ttu-id="c25b4-162">Attribute, die nicht in der Anforderung angegeben sind bleiben unverändert.</span><span class="sxs-lookup"><span data-stu-id="c25b4-162">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id="c25b4-163">Der Wert eines geheimen Schlüssels selbst kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="c25b4-163">The value of a secret itself cannot be changed.</span></span> <span data-ttu-id="c25b4-164">Dieser Vorgang ist die geheime Schlüssel/Set-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="c25b4-164">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="c25b4-165">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="c25b4-165">Example usage:</span></span>
      ```ts
      let secretName = "MySecretName";
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret(secretName);
      await client.updateSecret(secretName, secret.version, { enabled: false });
      ```
    syntax:
      content: 'function updateSecretAttributes(secretName: string, secretVersion: string, options?: UpdateSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="c25b4-166">Der Name des Geheimnisses.</span><span class="sxs-lookup"><span data-stu-id="c25b4-166">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: <span data-ttu-id="c25b4-167">Die Version des geheimen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="c25b4-167">The version of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.UpdateSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c25b4-168">Basis-URL für den Tresor</span><span class="sxs-lookup"><span data-stu-id="c25b4-168">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
references:
  - uid: ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'
  - uid: Promise<@azure/keyvault-secrets.DeletedSecret>
    name: DeletedSecret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecret
        fullName: DeletedSecret
        uid: '@azure/keyvault-secrets.DeletedSecret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretOptions'
    name: GetSecretOptions
    spec.typeScript:
      - name: GetSecretOptions
        fullName: GetSecretOptions
        uid: '@azure/keyvault-secrets.GetSecretOptions'
  - uid: Promise<@azure/keyvault-secrets.Secret>
    name: Secret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Secret
        fullName: Secret
        uid: '@azure/keyvault-secrets.Secret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretsOptions'
    name: GetSecretsOptions
    spec.typeScript:
      - name: GetSecretsOptions
        fullName: GetSecretsOptions
        uid: '@azure/keyvault-secrets.GetSecretsOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    name: 'SecretAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: ', '
        fullName: ', '
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-secrets.SetSecretOptions'
    name: SetSecretOptions
    spec.typeScript:
      - name: SetSecretOptions
        fullName: SetSecretOptions
        uid: '@azure/keyvault-secrets.SetSecretOptions'
  - uid: '@azure/keyvault-secrets.UpdateSecretOptions'
    name: UpdateSecretOptions
    spec.typeScript:
      - name: UpdateSecretOptions
        fullName: UpdateSecretOptions
        uid: '@azure/keyvault-secrets.UpdateSecretOptions'
  - uid: '@azure/keyvault-secrets.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'