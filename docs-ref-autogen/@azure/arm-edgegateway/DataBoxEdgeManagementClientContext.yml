### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext'
    name: DataBoxEdgeManagementClientContext
    fullName: DataBoxEdgeManagementClientContext
    children:
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.acceptLanguage'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.apiVersion'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.beginLongRunningRequest'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.credentials'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.constructor'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.longRunningOperationRetryTimeout'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.restoreLROPoller'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.sendLongRunningRequest'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.sendLRORequest'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.sendOperationRequest'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.sendRequest'
      - '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine HttpLongRunningOperationResponse, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Das Request-Objekt
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.constructor'
    name: 'DataBoxEdgeManagementClientContext(ServiceClientCredentials, string, Models.DataBoxEdgeManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initialisiert eine neue Instanz der Klasse DataBoxEdgeManagementClient an.
    syntax:
      content: 'new DataBoxEdgeManagementClientContext(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.DataBoxEdgeManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Anmeldeinformationen für den Client zum Verbinden mit Azure.
        - id: subscriptionId
          type:
            - string
          description: Die Abonnement-ID.
        - id: options
          type:
            - Models.DataBoxEdgeManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Retry-Timeout in Sekunden für zeitintensive Vorgänge werden soll. Standardwert: 30.'
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stellen Sie eine LROPoller aus der angegebenen LROPollState wieder her. Diese Methode kann verwendet werden, um eine LROPoller auf einem anderen Prozess oder Computer neu zu erstellen.'
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stellt einen Mechanismus, um eine Anforderung aus, die abgerufen werden, und geben Sie das endgültige Ergebnis bereit.'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Das Request-Objekt
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine LROPoller, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Die Argumente für den Vorgang.
        - id: operationSpec
          type:
            - OperationSpec
          description: Die Spezifikation für den Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: 'Zusätzliche Optionen, die beim Ausführen der Anforderung gesendet werden.'
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden Sie eine HTTP-Anforderung, die mithilfe der bereitgestellten OperationSpec aufgefüllt wird.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Die Argumente, denen von der HTTP-Anforderung auf Vorlagen basierende Werte aufgefüllt wird.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'Die OperationSpec, mit denen die HTTP-Anforderung aufgefüllt werden soll.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Der Rückruf aufgerufen wird, wenn die Antwort empfangen wird.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Die angegebene HTTP-Anforderung zu senden.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-edgegateway'
  - uid: '@azure/arm-edgegateway.DataBoxEdgeManagementClientContext.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-edgegateway'