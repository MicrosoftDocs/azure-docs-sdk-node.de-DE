### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-anomalydetector.Request'
    name: Request
    fullName: Request
    children:
      - '@azure/cognitiveservices-anomalydetector.Request.customInterval'
      - '@azure/cognitiveservices-anomalydetector.Request.granularity'
      - '@azure/cognitiveservices-anomalydetector.Request.maxAnomalyRatio'
      - '@azure/cognitiveservices-anomalydetector.Request.period'
      - '@azure/cognitiveservices-anomalydetector.Request.sensitivity'
      - '@azure/cognitiveservices-anomalydetector.Request.series'
    langs:
      - typeScript
    type: interface
    summary: 'Eine Schnittstelle, die Anforderung darstellt.'
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.Request.customInterval'
    name: customInterval
    fullName: customInterval
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Benutzerdefiniertes Intervall wird verwendet, um nicht standardmäßige Zeitintervall festlegen, z. B. wenn der Serie 5 Minuten ist, Anforderung kann festgelegt werden als {"Granularität": "exakten", "CustomInterval": 5}.'
    optional: true
    syntax:
      content: 'customInterval?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.Request.granularity'
    name: granularity
    fullName: granularity
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Nur möglich jährlich, monatlich, wöchentlich, täglich, stündlich oder exakten. Granularität dient zum Überprüfen, ob die Eingabereihe gültig ist. Folgende Werte sind möglich: "jährlich", "Monatlich", "wöchentlich", "täglich", "stündlich", "exakten"'
    syntax:
      content: 'granularity: Granularity'
      return:
        type:
          - '@azure/cognitiveservices-anomalydetector.Granularity'
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.Request.maxAnomalyRatio'
    name: maxAnomalyRatio
    fullName: maxAnomalyRatio
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Optionales Argument, erweiterte Modellparameter, Max. Anomalien Verhältnis in einer Zeitreihe.'
    optional: true
    syntax:
      content: 'maxAnomalyRatio?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.Request.period'
    name: period
    fullName: period
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Optionales Argument, regelmäßige Wert einer Zeitreihe. Wenn der Wert NULL oder nicht vorhanden sind, bestimmt die API den Zeitraum automatisch.'
    optional: true
    syntax:
      content: 'period?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.Request.sensitivity'
    name: sensitivity
    fullName: sensitivity
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Optionales Argument, das erweiterte Modellparameter, zwischen 0 und 99, desto niedriger ist der Wert, desto größer werden der Wert des Rands also weniger Anomalien akzeptiert werden.'
    optional: true
    syntax:
      content: 'sensitivity?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.Request.series'
    name: series
    fullName: series
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Zeitreihen-Datenpunkte. Punkte sollten nach dem Zeitstempel in aufsteigender Reihenfolge entsprechend das Ergebnis der Erkennung von Anomalien sortiert werden. Wenn die Daten nicht ordnungsgemäß sortiert werden oder duplizierte Zeitstempel vorhanden ist, funktioniert die API nicht. In diesem Fall wird eine Fehlermeldung zurückgegeben werden.'
    syntax:
      content: 'series: Point[]'
      return:
        type:
          - '@azure/cognitiveservices-anomalydetector.Point[]'
    package: '@azure/cognitiveservices-anomalydetector'
references:
  - uid: '@azure/cognitiveservices-anomalydetector.Granularity'
    name: Granularity
    spec.typeScript:
      - name: Granularity
        fullName: Granularity
        uid: '@azure/cognitiveservices-anomalydetector.Granularity'
  - uid: '@azure/cognitiveservices-anomalydetector.Point[]'
    name: 'Point[]'
    spec.typeScript:
      - name: Point
        fullName: Point
        uid: '@azure/cognitiveservices-anomalydetector.Point'
      - name: '[]'
        fullName: '[]'