### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-keys.KeysClient'
    name: KeysClient
    fullName: KeysClient
    children:
      - '@azure/keyvault-keys.KeysClient.backupKey'
      - '@azure/keyvault-keys.KeysClient.createEcKey'
      - '@azure/keyvault-keys.KeysClient.createKey'
      - '@azure/keyvault-keys.KeysClient.createRsaKey'
      - '@azure/keyvault-keys.KeysClient.deleteKey'
      - '@azure/keyvault-keys.KeysClient.getDefaultPipeline'
      - '@azure/keyvault-keys.KeysClient.getDeletedKey'
      - '@azure/keyvault-keys.KeysClient.getKey'
      - '@azure/keyvault-keys.KeysClient.importKey'
      - '@azure/keyvault-keys.KeysClient.constructor'
      - '@azure/keyvault-keys.KeysClient.listDeletedKeys'
      - '@azure/keyvault-keys.KeysClient.listKeys'
      - '@azure/keyvault-keys.KeysClient.listKeyVersions'
      - '@azure/keyvault-keys.KeysClient.pipeline'
      - '@azure/keyvault-keys.KeysClient.purgeDeletedKey'
      - '@azure/keyvault-keys.KeysClient.recoverDeletedKey'
      - '@azure/keyvault-keys.KeysClient.restoreKey'
      - '@azure/keyvault-keys.KeysClient.updateKey'
      - '@azure/keyvault-keys.KeysClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="611f1-101">Der Client für die Interaktion mit der Funktionalität der Key Vault-Schlüssel</span><span class="sxs-lookup"><span data-stu-id="611f1-101">The client to interact with the KeyVault keys functionality</span></span>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.backupKey'
    name: 'backupKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-102">Fordert an, dass eine Sicherung des angegebenen Schlüssels an den Client heruntergeladen werden.</span><span class="sxs-lookup"><span data-stu-id="611f1-102">Requests that a backup of the specified key be downloaded to the client.</span></span> <span data-ttu-id="611f1-103">Alle Versionen des Schlüssels werden heruntergeladen.</span><span class="sxs-lookup"><span data-stu-id="611f1-103">All versions of the key will be downloaded.</span></span> <span data-ttu-id="611f1-104">Dieser Vorgang erfordert die Berechtigung für die Schlüssel/sichern.</span><span class="sxs-lookup"><span data-stu-id="611f1-104">This operation requires the keys/backup permission.</span></span>
      <span data-ttu-id="611f1-105">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-105">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let backupContents = await client.backupKey("MyKey");
      ```
    syntax:
      content: 'function backupKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-106">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-106">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array | undefined>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createEcKey'
    name: 'createEcKey(string, CreateEcKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-107">Vorgang für den erstellen-Schlüssel kann verwendet werden, um jedes Schlüsseltyps im Azure-Schlüsseltresor zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="611f1-107">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="611f1-108">Wenn der benannte Schlüssel bereits vorhanden ist, erstellt Azure Key Vault eine neue Version des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-108">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="611f1-109">Er erfordert die Berechtigung zum Erstellen von Schlüsseln /.</span><span class="sxs-lookup"><span data-stu-id="611f1-109">It requires the keys/create permission.</span></span>
      <span data-ttu-id="611f1-110">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-110">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.createEcKey("MyKey", { curve: "P-256" });
      ```
    syntax:
      content: 'function createEcKey(name: string, options?: CreateEcKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-111">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-111">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateEcKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createKey'
    name: 'createKey(string, JsonWebKeyType, CreateKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-112">Vorgang für den erstellen-Schlüssel kann verwendet werden, um jedes Schlüsseltyps im Azure-Schlüsseltresor zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="611f1-112">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="611f1-113">Wenn der benannte Schlüssel bereits vorhanden ist, erstellt Azure Key Vault eine neue Version des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-113">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="611f1-114">Er erfordert die Berechtigung zum Erstellen von Schlüsseln /.</span><span class="sxs-lookup"><span data-stu-id="611f1-114">It requires the keys/create permission.</span></span>
      <span data-ttu-id="611f1-115">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-115">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      // Create an elliptic-curve key:
      let result = await client.createKey("MyKey", "EC");
      ```
    syntax:
      content: 'function createKey(name: string, keyType: JsonWebKeyType, options?: CreateKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-116">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-116">The name of the key.</span></span>
        - id: keyType
          type:
            - '@azure/keyvault-keys.JsonWebKeyType'
          description: <span data-ttu-id="611f1-117">Der Typ des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-117">The type of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.createRsaKey'
    name: 'createRsaKey(string, CreateRsaKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-118">Vorgang für den erstellen-Schlüssel kann verwendet werden, um jedes Schlüsseltyps im Azure-Schlüsseltresor zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="611f1-118">The create key operation can be used to create any key type in Azure Key Vault.</span></span> <span data-ttu-id="611f1-119">Wenn der benannte Schlüssel bereits vorhanden ist, erstellt Azure Key Vault eine neue Version des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-119">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="611f1-120">Er erfordert die Berechtigung zum Erstellen von Schlüsseln /.</span><span class="sxs-lookup"><span data-stu-id="611f1-120">It requires the keys/create permission.</span></span>
      <span data-ttu-id="611f1-121">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-121">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.createRsaKey("MyKey", { keySize: 2048 });
      ```
    syntax:
      content: 'function createRsaKey(name: string, options?: CreateRsaKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-122">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-122">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.CreateRsaKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.deleteKey'
    name: 'deleteKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-123">Der DELETE-Vorgang gilt für eine beliebige Taste, die in Azure Key Vault gespeichert.</span><span class="sxs-lookup"><span data-stu-id="611f1-123">The DELETE operation applies to any key stored in Azure Key Vault.</span></span> <span data-ttu-id="611f1-124">DELETE kann nicht für eine einzelne Version eines Schlüssels angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="611f1-124">DELETE cannot be applied to an individual version of a key.</span></span> <span data-ttu-id="611f1-125">Dieser Vorgang erfordert die Schlüssel/Delete-Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="611f1-125">This operation requires the keys/delete permission.</span></span>
      <span data-ttu-id="611f1-126">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-126">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let result = await client.deleteKey("MyKey");
      ```
    syntax:
      content: 'function deleteKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-127">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-127">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.DeletedKey>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="611f1-128">Eine statische Methode verwendet, um ein neues Pipelineobjekt mit den bereitgestellten Anmeldeinformationen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="611f1-128">A static method used to create a new Pipeline object with the provided Credential.</span></span>'
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-keys.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getDeletedKey'
    name: 'getDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-129">Der gelöschte Schlüssel abrufen-Vorgang gibt den angegebenen gelöschten Schlüssel zusammen mit seinen Attributen zurück.</span><span class="sxs-lookup"><span data-stu-id="611f1-129">The Get Deleted Key operation returns the specified deleted key along with its attributes.</span></span>
      <span data-ttu-id="611f1-130">Dieser Vorgang erfordert die Schlüssel/Get-Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="611f1-130">This operation requires the keys/get permission.</span></span>
      <span data-ttu-id="611f1-131">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-131">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let key = await client.getDeletedKey("MyDeletedKey");
      ```
    syntax:
      content: 'function getDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-132">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-132">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.DeletedKey>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.getKey'
    name: 'getKey(string, GetKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-133">Die GET-Vorgang gilt zwar für eine beliebige Taste, die in Azure Key Vault gespeichert.</span><span class="sxs-lookup"><span data-stu-id="611f1-133">The GET operation is applicable to any key stored in Azure Key Vault.</span></span> <span data-ttu-id="611f1-134">Dieser Vorgang erfordert die Schlüssel/Get-Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="611f1-134">This operation requires the keys/get permission.</span></span>
      <span data-ttu-id="611f1-135">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-135">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let key = await client.getKey("MyKey");
      ```
    syntax:
      content: 'function getKey(name: string, options?: GetKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-136">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-136">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.importKey'
    name: 'importKey(string, JsonWebKey, ImportKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-137">Vorgang für den Import-Schlüssel kann zum Importieren jedes Schlüsseltyps in Azure Key Vault verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="611f1-137">The import key operation may be used to import any key type into an Azure Key Vault.</span></span> <span data-ttu-id="611f1-138">Wenn der benannte Schlüssel bereits vorhanden ist, erstellt Azure Key Vault eine neue Version des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-138">If the named key already exists, Azure Key Vault creates a new version of the key.</span></span> <span data-ttu-id="611f1-139">Dieser Vorgang erfordert die Berechtigung für die Schlüssel/importieren.</span><span class="sxs-lookup"><span data-stu-id="611f1-139">This operation requires the keys/import permission.</span></span>
      <span data-ttu-id="611f1-140">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-140">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      // Key contents in myKeyContents
      let result = await client.importKey("MyKey", myKeyContents);
      ```
    syntax:
      content: 'function importKey(name: string, key: JsonWebKey, options?: ImportKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-141">Der Name für den importierten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="611f1-141">Name for the imported key.</span></span>
        - id: key
          type:
            - '@azure/keyvault-keys.JsonWebKey'
          description: <span data-ttu-id="611f1-142">Der JSON-Web-Schlüssel</span><span class="sxs-lookup"><span data-stu-id="611f1-142">The Json web key</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.ImportKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.constructor'
    name: 'KeysClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-143">Erstellt eine Instanz des KeysClient.</span><span class="sxs-lookup"><span data-stu-id="611f1-143">Creates an instance of KeysClient.</span></span>
      <span data-ttu-id="611f1-144">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-144">Example usage:</span></span>
      ```ts
      import { KeysClient } from "@azure/keyvault-keys";
      import { EnvironmentCredential } from "@azure/identity";

      let url = `https://<MY KEYVAULT HERE>.vault.azure.net`;
      let credentials = new EnvironmentCredential();

      let client = new KeysClient(url, credentials);
      ```
    syntax:
      content: 'new KeysClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="611f1-145">die Basis-Url auf den schlüsseltresor.</span><span class="sxs-lookup"><span data-stu-id="611f1-145">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-keys.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listDeletedKeys'
    name: listDeletedKeys(GetKeysOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-146">Durchlaufen die gelöschten Schlüssel im Tresor.</span><span class="sxs-lookup"><span data-stu-id="611f1-146">Iterates the deleted keys in the vault.</span></span>  <span data-ttu-id="611f1-147">Der vollständige Schlüsselbezeichner und die Attribute werden in der Antwort bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="611f1-147">The full key identifier and attributes are provided in the response.</span></span> <span data-ttu-id="611f1-148">Es werden keine Werte für die Schlüssel zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="611f1-148">No values are returned for the keys.</span></span> <span data-ttu-id="611f1-149">Diese Vorgänge ist der Schlüssel/List-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="611f1-149">This operations requires the keys/list permission.</span></span>
      <span data-ttu-id="611f1-150">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-150">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listDeletedKeys()) {
        const deletedKey = await client.getKey(keyAttr.name);
        console.log("deleted key: ", deletedKey);
      }
      ```
    syntax:
      content: 'function listDeletedKeys(options?: GetKeysOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listKeys'
    name: listKeys(GetKeysOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-151">Durchlaufen die neueste Version aller Schlüssel im Tresor.</span><span class="sxs-lookup"><span data-stu-id="611f1-151">Iterates the latest version of all keys in the vault.</span></span>  <span data-ttu-id="611f1-152">Der vollständige Schlüsselbezeichner und die Attribute werden in der Antwort bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="611f1-152">The full key identifier and attributes are provided in the response.</span></span> <span data-ttu-id="611f1-153">Es werden keine Werte für die Schlüssel zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="611f1-153">No values are returned for the keys.</span></span> <span data-ttu-id="611f1-154">Diese Vorgänge ist der Schlüssel/List-Berechtigung erforderlich.</span><span class="sxs-lookup"><span data-stu-id="611f1-154">This operations requires the keys/list permission.</span></span>
      <span data-ttu-id="611f1-155">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-155">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listKeys()) {
        const key = await client.getKey(keyAttr.name);
        console.log("key: ", key);
      }
      ```
    syntax:
      content: 'function listKeys(options?: GetKeysOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.listKeyVersions'
    name: 'listKeyVersions(string, GetKeysOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-156">Durchläuft alle Versionen des angegebenen Schlüssels im Tresor.</span><span class="sxs-lookup"><span data-stu-id="611f1-156">Iterates all versions of the given key in the vault.</span></span> <span data-ttu-id="611f1-157">Der vollständige Schlüsselbezeichner, Attribute und Tags werden in der Antwort bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="611f1-157">The full key identifier, attributes, and tags are provided in the response.</span></span> <span data-ttu-id="611f1-158">Dieser Vorgang erfordert die Berechtigung zum Schlüssel/auflisten.</span><span class="sxs-lookup"><span data-stu-id="611f1-158">This operation requires the keys/list permission.</span></span>
      <span data-ttu-id="611f1-159">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-159">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      for await (const keyAttr of client.listKeyVersions("MyKey")) {
        const key = await client.getKey(keyAttr.name);
        console.log("key version: ", key);
      }
      ```
    syntax:
      content: 'function listKeyVersions(name: string, options?: GetKeysOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-160">Name des Schlüssels zum Abrufen von Versionen</span><span class="sxs-lookup"><span data-stu-id="611f1-160">Name of the key to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.GetKeysOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="611f1-161">Die Optionen zum Erstellen der Verbindung mit dem Dienst</span><span class="sxs-lookup"><span data-stu-id="611f1-161">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.purgeDeletedKey'
    name: 'purgeDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-162">Die Bereinigung gelöscht Schlüsselvorgang entfernt den Schlüssel dauerhaft, ohne die Möglichkeit zur Wiederherstellung.</span><span class="sxs-lookup"><span data-stu-id="611f1-162">The purge deleted key operation removes the key permanently, without the possibility of recovery.</span></span> <span data-ttu-id="611f1-163">Dieser Vorgang kann nur für eine Funktion für vorläufiges Löschen aktiviert Tresor aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="611f1-163">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id="611f1-164">Dieser Vorgang erfordert die Berechtigung für die Schlüssel/löschen.</span><span class="sxs-lookup"><span data-stu-id="611f1-164">This operation requires the keys/purge permission.</span></span>
      <span data-ttu-id="611f1-165">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-165">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      await client.deleteKey("MyKey");
      // ...
      await client.purgeDeletedKey("MyKey");
      ```
    syntax:
      content: 'function purgeDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-166">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-166">The name of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.recoverDeletedKey'
    name: 'recoverDeletedKey(string, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-167">Wird die Wiederherstellung des gelöschten Schlüssels in den angegebenen Tresor.</span><span class="sxs-lookup"><span data-stu-id="611f1-167">Recovers the deleted key in the specified vault.</span></span> <span data-ttu-id="611f1-168">Dieser Vorgang kann nur für eine Funktion für vorläufiges Löschen aktiviert Tresor ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="611f1-168">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id="611f1-169">Dieser Vorgang erfordert die Berechtigung für die Schlüssel/wiederherstellen.</span><span class="sxs-lookup"><span data-stu-id="611f1-169">This operation requires the keys/recover permission.</span></span>
      <span data-ttu-id="611f1-170">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-170">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      await client.deleteKey("MyKey");
      // ...
      await client.recoverDeletedKey("MyKey");
      ```
    syntax:
      content: 'function recoverDeletedKey(name: string, options?: RequestOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-171">Der Name des gelöschten Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-171">The name of the deleted key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.restoreKey'
    name: 'restoreKey(Uint8Array, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-172">Stellt Sie einen gesicherten Schlüssel und alle seine Versionen in einem Tresor wieder her.</span><span class="sxs-lookup"><span data-stu-id="611f1-172">Restores a backed up key, and all its versions, to a vault.</span></span> <span data-ttu-id="611f1-173">Dieser Vorgang erfordert die Berechtigung für die Schlüssel/wiederherstellen.</span><span class="sxs-lookup"><span data-stu-id="611f1-173">This operation requires the keys/restore permission.</span></span>
      <span data-ttu-id="611f1-174">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-174">Example usage:</span></span>
      ```ts
      let client = new KeysClient(url, credentials);
      let backupContents = await client.backupKey("MyKey");
      // ...
      let key = await client.restoreKey(backupContents);
      ```
    syntax:
      content: 'function restoreKey(backup: Uint8Array, options?: RequestOptions)'
      parameters:
        - id: backup
          type:
            - Uint8Array
          description: <span data-ttu-id="611f1-175">Der Blob-Sicherungsdatei mit Schlüssel verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="611f1-175">The backup blob associated with a key bundle.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.updateKey'
    name: 'updateKey(string, string, UpdateKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="611f1-176">Der UPDATE-Vorgang ändert angegebene Attribute eines vorhandenen gespeicherten Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-176">The UPDATE operation changes specified attributes of an existing stored key.</span></span> <span data-ttu-id="611f1-177">Attribute, die nicht in der Anforderung angegeben sind bleiben unverändert.</span><span class="sxs-lookup"><span data-stu-id="611f1-177">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id="611f1-178">Der Wert eines Schlüssels selbst kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="611f1-178">The value of a key itself cannot be changed.</span></span> <span data-ttu-id="611f1-179">Dieser Vorgang erfordert die Schlüssel/Set-Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="611f1-179">This operation requires the keys/set permission.</span></span>
      <span data-ttu-id="611f1-180">Beispielverwendung:</span><span class="sxs-lookup"><span data-stu-id="611f1-180">Example usage:</span></span>
      ```ts
      let keyName = "MyKey";
      let client = new KeysClient(url, credentials);
      let key = await client.getKey(keyName);
      let result = await client.updateKey(keyName, key.version, { enabled: false });
      ```
    syntax:
      content: 'function updateKey(name: string, keyVersion: string, options?: UpdateKeyOptions)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="611f1-181">Der Name des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-181">The name of the key.</span></span>
        - id: keyVersion
          type:
            - string
          description: <span data-ttu-id="611f1-182">Die Version des Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="611f1-182">The version of the key.</span></span>
        - id: options
          type:
            - '@azure/keyvault-keys.UpdateKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-keys.Key>
    package: '@azure/keyvault-keys'
  - uid: '@azure/keyvault-keys.KeysClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="611f1-183">Basis-URL für den Tresor</span><span class="sxs-lookup"><span data-stu-id="611f1-183">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-keys'
references:
  - uid: ServiceClientOptions | @azure/keyvault-keys.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-keys.NewPipelineOptions'
  - uid: '@azure/keyvault-keys.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/keyvault-keys.RequestOptions'
  - uid: '@azure/keyvault-keys.CreateEcKeyOptions'
    name: CreateEcKeyOptions
    spec.typeScript:
      - name: CreateEcKeyOptions
        fullName: CreateEcKeyOptions
        uid: '@azure/keyvault-keys.CreateEcKeyOptions'
  - uid: Promise<@azure/keyvault-keys.Key>
    name: Key>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Key
        fullName: Key
        uid: '@azure/keyvault-keys.Key'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-keys.JsonWebKeyType'
    name: JsonWebKeyType
    spec.typeScript:
      - name: JsonWebKeyType
        fullName: JsonWebKeyType
        uid: '@azure/keyvault-keys.JsonWebKeyType'
  - uid: '@azure/keyvault-keys.CreateKeyOptions'
    name: CreateKeyOptions
    spec.typeScript:
      - name: CreateKeyOptions
        fullName: CreateKeyOptions
        uid: '@azure/keyvault-keys.CreateKeyOptions'
  - uid: '@azure/keyvault-keys.CreateRsaKeyOptions'
    name: CreateRsaKeyOptions
    spec.typeScript:
      - name: CreateRsaKeyOptions
        fullName: CreateRsaKeyOptions
        uid: '@azure/keyvault-keys.CreateRsaKeyOptions'
  - uid: Promise<@azure/keyvault-keys.DeletedKey>
    name: DeletedKey>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedKey
        fullName: DeletedKey
        uid: '@azure/keyvault-keys.DeletedKey'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-keys.GetKeyOptions'
    name: GetKeyOptions
    spec.typeScript:
      - name: GetKeyOptions
        fullName: GetKeyOptions
        uid: '@azure/keyvault-keys.GetKeyOptions'
  - uid: '@azure/keyvault-keys.JsonWebKey'
    name: JsonWebKey
    spec.typeScript:
      - name: JsonWebKey
        fullName: JsonWebKey
        uid: '@azure/keyvault-keys.JsonWebKey'
  - uid: '@azure/keyvault-keys.ImportKeyOptions'
    name: ImportKeyOptions
    spec.typeScript:
      - name: ImportKeyOptions
        fullName: ImportKeyOptions
        uid: '@azure/keyvault-keys.ImportKeyOptions'
  - uid: '@azure/keyvault-keys.GetKeysOptions'
    name: GetKeysOptions
    spec.typeScript:
      - name: GetKeysOptions
        fullName: GetKeysOptions
        uid: '@azure/keyvault-keys.GetKeysOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-keys.KeyAttributes, @azure/keyvault-keys.KeyAttributes[]>'
    name: 'KeyAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-keys.KeyAttributes'
      - name: ', '
        fullName: ', '
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: '@azure/keyvault-keys.KeyAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-keys.UpdateKeyOptions'
    name: UpdateKeyOptions
    spec.typeScript:
      - name: UpdateKeyOptions
        fullName: UpdateKeyOptions
        uid: '@azure/keyvault-keys.UpdateKeyOptions'
  - uid: '@azure/keyvault-keys.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-keys.NewPipelineOptions'