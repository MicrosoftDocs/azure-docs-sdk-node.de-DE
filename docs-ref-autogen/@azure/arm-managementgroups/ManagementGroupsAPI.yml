### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI'
    name: ManagementGroupsAPI
    fullName: ManagementGroupsAPI
    children:
      - '@azure/arm-managementgroups.ManagementGroupsAPI.acceptLanguage'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.apiVersion'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.beginLongRunningRequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_1'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.credentials'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.entities'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.longRunningOperationRetryTimeout'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroups'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.constructor'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroupSubscriptions'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.operations'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.restoreLROPoller'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.sendLongRunningRequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.sendLRORequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.sendOperationRequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.sendRequest'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_1'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine HttpLongRunningOperationResponse, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Das Request-Objekt
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability'
    name: 'checkNameAvailability(CheckNameAvailabilityRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Überprüft, ob der Name der angegebenen Verwaltungsgruppe gültig und eindeutig ist.'
    syntax:
      content: 'function checkNameAvailability(checkNameAvailabilityRequest: CheckNameAvailabilityRequest, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: Management Group Name Verfügbarkeit überprüfen Sie die Parameter.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_2'
    name: 'checkNameAvailability(CheckNameAvailabilityRequest, RequestOptionsBase, ServiceCallback<CheckNameAvailabilityResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(checkNameAvailabilityRequest: CheckNameAvailabilityRequest, options: RequestOptionsBase, callback: ServiceCallback<CheckNameAvailabilityResult>)'
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: Management Group Name Verfügbarkeit überprüfen Sie die Parameter.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_1'
    name: 'checkNameAvailability(CheckNameAvailabilityRequest, ServiceCallback<CheckNameAvailabilityResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(checkNameAvailabilityRequest: CheckNameAvailabilityRequest, callback: ServiceCallback<CheckNameAvailabilityResult>)'
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: Management Group Name Verfügbarkeit überprüfen Sie die Parameter.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.entities'
    name: entities
    fullName: entities
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'entities: Entities'
      return:
        type:
          - '@azure/arm-managementgroups.Entities'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Retry-Timeout in Sekunden für zeitintensive Vorgänge werden soll. Standardwert: 30.'
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroups'
    name: managementGroups
    fullName: managementGroups
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managementGroups: ManagementGroups'
      return:
        type:
          - '@azure/arm-managementgroups.ManagementGroups'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.constructor'
    name: 'ManagementGroupsAPI(ServiceClientCredentials, Models.ManagementGroupsAPIOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initialisiert eine neue Instanz der Klasse ManagementGroupsAPI an.
    syntax:
      content: 'new ManagementGroupsAPI(credentials: ServiceClientCredentials, options?: Models.ManagementGroupsAPIOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Anmeldeinformationen für den Client zum Verbinden mit Azure.
        - id: options
          type:
            - Models.ManagementGroupsAPIOptions
          description: ''
          optional: true
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroupSubscriptions'
    name: managementGroupSubscriptions
    fullName: managementGroupSubscriptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managementGroupSubscriptions: ManagementGroupSubscriptions'
      return:
        type:
          - '@azure/arm-managementgroups.ManagementGroupSubscriptions'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-managementgroups.Operations'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stellen Sie eine LROPoller aus der angegebenen LROPollState wieder her. Diese Methode kann verwendet werden, um eine LROPoller auf einem anderen Prozess oder Computer neu zu erstellen.'
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stellt einen Mechanismus, um eine Anforderung aus, die abgerufen werden, und geben Sie das endgültige Ergebnis bereit.'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Das Request-Objekt
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine LROPoller, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Die Argumente für den Vorgang.
        - id: operationSpec
          type:
            - OperationSpec
          description: Die Spezifikation für den Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: 'Zusätzliche Optionen, die beim Ausführen der Anforderung gesendet werden.'
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden Sie eine HTTP-Anforderung, die mithilfe der bereitgestellten OperationSpec aufgefüllt wird.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Die Argumente, denen von der HTTP-Anforderung auf Vorlagen basierende Werte aufgefüllt wird.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'Die OperationSpec, mit denen die HTTP-Anforderung aufgefüllt werden soll.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Der Rückruf aufgerufen wird, wenn die Antwort empfangen wird.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Die angegebene HTTP-Anforderung zu senden.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill'
    name: startTenantBackfill(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Startet die generellen Abonnements für den Mandanten.
    syntax:
      content: 'function startTenantBackfill(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_2'
    name: 'startTenantBackfill(RequestOptionsBase, ServiceCallback<TenantBackfillStatusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startTenantBackfill(options: RequestOptionsBase, callback: ServiceCallback<TenantBackfillStatusResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_1'
    name: startTenantBackfill(ServiceCallback<TenantBackfillStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startTenantBackfill(callback: ServiceCallback<TenantBackfillStatusResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus'
    name: tenantBackfillStatus(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Ruft die Status der Abgleich von Mandanten
    syntax:
      content: 'function tenantBackfillStatus(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_2'
    name: 'tenantBackfillStatus(RequestOptionsBase, ServiceCallback<TenantBackfillStatusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tenantBackfillStatus(options: RequestOptionsBase, callback: ServiceCallback<TenantBackfillStatusResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_1'
    name: tenantBackfillStatus(ServiceCallback<TenantBackfillStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tenantBackfillStatus(callback: ServiceCallback<TenantBackfillStatusResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
references:
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
    name: ManagementGroupsAPIContext
    spec.typeScript:
      - name: ManagementGroupsAPIContext
        fullName: ManagementGroupsAPIContext
        uid: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
  - uid: '@azure/arm-managementgroups.Entities'
    name: Entities
    spec.typeScript:
      - name: Entities
        fullName: Entities
        uid: '@azure/arm-managementgroups.Entities'
  - uid: '@azure/arm-managementgroups.ManagementGroupSubscriptions'
    name: ManagementGroupSubscriptions
    spec.typeScript:
      - name: ManagementGroupSubscriptions
        fullName: ManagementGroupSubscriptions
        uid: '@azure/arm-managementgroups.ManagementGroupSubscriptions'
  - uid: '@azure/arm-managementgroups.ManagementGroups'
    name: ManagementGroups
    spec.typeScript:
      - name: ManagementGroups
        fullName: ManagementGroups
        uid: '@azure/arm-managementgroups.ManagementGroups'
  - uid: '@azure/arm-managementgroups.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-managementgroups.Operations'
  - uid: '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
    name: CheckNameAvailabilityRequest
    spec.typeScript:
      - name: CheckNameAvailabilityRequest
        fullName: CheckNameAvailabilityRequest
        uid: '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
  - uid: ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: '@azure/arm-managementgroups.CheckNameAvailabilityResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
    name: TenantBackfillStatusResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TenantBackfillStatusResult
        fullName: TenantBackfillStatusResult
        uid: '@azure/arm-managementgroups.TenantBackfillStatusResult'
      - name: '>'
        fullName: '>'