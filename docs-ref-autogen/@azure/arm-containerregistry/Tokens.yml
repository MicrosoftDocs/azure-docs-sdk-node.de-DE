### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerregistry.Tokens'
    name: Tokens
    fullName: Tokens
    children:
      - '@azure/arm-containerregistry.Tokens.beginCreate'
      - '@azure/arm-containerregistry.Tokens.beginDeleteMethod'
      - '@azure/arm-containerregistry.Tokens.beginUpdate'
      - '@azure/arm-containerregistry.Tokens.create'
      - '@azure/arm-containerregistry.Tokens.deleteMethod'
      - '@azure/arm-containerregistry.Tokens.get'
      - '@azure/arm-containerregistry.Tokens.get_2'
      - '@azure/arm-containerregistry.Tokens.get_1'
      - '@azure/arm-containerregistry.Tokens.list'
      - '@azure/arm-containerregistry.Tokens.list_2'
      - '@azure/arm-containerregistry.Tokens.list_1'
      - '@azure/arm-containerregistry.Tokens.listNext'
      - '@azure/arm-containerregistry.Tokens.listNext_2'
      - '@azure/arm-containerregistry.Tokens.listNext_1'
      - '@azure/arm-containerregistry.Tokens.constructor'
      - '@azure/arm-containerregistry.Tokens.update'
    langs:
      - typeScript
    type: class
    summary: 'Klasse, die ein Token darstellt.'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.beginCreate'
    name: 'beginCreate(string, string, string, Token, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Erstellt ein Token für eine containerregistrierung mit den angegebenen Parametern.
    syntax:
      content: 'function beginCreate(resourceGroupName: string, registryName: string, tokenName: string, tokenCreateParameters: Token, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: tokenCreateParameters
          type:
            - '@azure/arm-containerregistry.Token'
          description: Die Parameter für das Erstellen eines Tokens.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht ein Token aus einer containerregistrierung an.
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, registryName: string, tokenName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.beginUpdate'
    name: 'beginUpdate(string, string, string, TokenUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Aktualisiert ein Token mit den angegebenen Parametern.
    syntax:
      content: 'function beginUpdate(resourceGroupName: string, registryName: string, tokenName: string, tokenUpdateParameters: TokenUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: tokenUpdateParameters
          type:
            - '@azure/arm-containerregistry.TokenUpdateParameters'
          description: Die Parameter für ein Token zu aktualisieren.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.create'
    name: 'create(string, string, string, Token, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Erstellt ein Token für eine containerregistrierung mit den angegebenen Parametern.
    syntax:
      content: 'function create(resourceGroupName: string, registryName: string, tokenName: string, tokenCreateParameters: Token, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: tokenCreateParameters
          type:
            - '@azure/arm-containerregistry.Token'
          description: Die Parameter für das Erstellen eines Tokens.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TokensCreateResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht ein Token aus einer containerregistrierung an.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, registryName: string, tokenName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ruft die Eigenschaften des angegebenen Token ab.
    syntax:
      content: 'function get(resourceGroupName: string, registryName: string, tokenName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TokensGetResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<Token>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, registryName: string, tokenName: string, options: RequestOptionsBase, callback: ServiceCallback<Token>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.Token>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TokensGetResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.get_1'
    name: 'get(string, string, string, ServiceCallback<Token>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, registryName: string, tokenName: string, callback: ServiceCallback<Token>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.Token>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TokensGetResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet alle Token für die angegebene containerregistrierung auf.
    syntax:
      content: 'function list(resourceGroupName: string, registryName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TokensListResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.list_2'
    name: 'list(string, string, RequestOptionsBase, ServiceCallback<TokenListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, registryName: string, options: RequestOptionsBase, callback: ServiceCallback<TokenListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.TokenListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TokensListResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.list_1'
    name: 'list(string, string, ServiceCallback<TokenListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, registryName: string, callback: ServiceCallback<TokenListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.TokenListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TokensListResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet alle Token für die angegebene containerregistrierung auf.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TokensListNextResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<TokenListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<TokenListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.TokenListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TokensListNextResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.listNext_1'
    name: 'listNext(string, ServiceCallback<TokenListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<TokenListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerregistry.TokenListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TokensListNextResponse>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.constructor'
    name: Tokens(ContainerRegistryManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Erstellen Sie ein Token.
    syntax:
      content: 'new Tokens(client: ContainerRegistryManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-containerregistry.ContainerRegistryManagementClientContext'
          description: |
            Verweis auf den Dienstclient.
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.Tokens.update'
    name: 'update(string, string, string, TokenUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Aktualisiert ein Token mit den angegebenen Parametern.
    syntax:
      content: 'function update(resourceGroupName: string, registryName: string, tokenName: string, tokenUpdateParameters: TokenUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Der Name der Ressourcengruppe, zu der der Container-Registry-Instanz gehört.'
        - id: registryName
          type:
            - string
          description: Der Name der containerregistrierung.
        - id: tokenName
          type:
            - string
          description: Der Name des Tokens.
        - id: tokenUpdateParameters
          type:
            - '@azure/arm-containerregistry.TokenUpdateParameters'
          description: Die Parameter für ein Token zu aktualisieren.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TokensUpdateResponse>
    package: '@azure/arm-containerregistry'
references:
  - uid: '@azure/arm-containerregistry.ContainerRegistryManagementClientContext'
    name: ContainerRegistryManagementClientContext
    spec.typeScript:
      - name: ContainerRegistryManagementClientContext
        fullName: ContainerRegistryManagementClientContext
        uid: '@azure/arm-containerregistry.ContainerRegistryManagementClientContext'
  - uid: '@azure/arm-containerregistry.Token'
    name: Token
    spec.typeScript:
      - name: Token
        fullName: Token
        uid: '@azure/arm-containerregistry.Token'
  - uid: '@azure/arm-containerregistry.TokenUpdateParameters'
    name: TokenUpdateParameters
    spec.typeScript:
      - name: TokenUpdateParameters
        fullName: TokenUpdateParameters
        uid: '@azure/arm-containerregistry.TokenUpdateParameters'
  - uid: ServiceCallback<@azure/arm-containerregistry.Token>
    name: Token>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Token
        fullName: Token
        uid: '@azure/arm-containerregistry.Token'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerregistry.TokenListResult>
    name: TokenListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TokenListResult
        fullName: TokenListResult
        uid: '@azure/arm-containerregistry.TokenListResult'
      - name: '>'
        fullName: '>'