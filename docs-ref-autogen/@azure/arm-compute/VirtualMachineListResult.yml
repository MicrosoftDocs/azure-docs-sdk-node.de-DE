### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-compute.VirtualMachineListResult'
    name: VirtualMachineListResult
    fullName: VirtualMachineListResult
    children:
      - '@azure/arm-compute.VirtualMachineListResult.Array'
      - '@azure/arm-compute.VirtualMachineListResult.concat'
      - '@azure/arm-compute.VirtualMachineListResult.concat_1'
      - '@azure/arm-compute.VirtualMachineListResult.copyWithin'
      - '@azure/arm-compute.VirtualMachineListResult.entries'
      - '@azure/arm-compute.VirtualMachineListResult.every'
      - '@azure/arm-compute.VirtualMachineListResult.fill'
      - '@azure/arm-compute.VirtualMachineListResult.filter_1'
      - '@azure/arm-compute.VirtualMachineListResult.filter'
      - '@azure/arm-compute.VirtualMachineListResult.find'
      - '@azure/arm-compute.VirtualMachineListResult.find_1'
      - '@azure/arm-compute.VirtualMachineListResult.findIndex'
      - '@azure/arm-compute.VirtualMachineListResult.forEach'
      - '@azure/arm-compute.VirtualMachineListResult.indexOf'
      - '@azure/arm-compute.VirtualMachineListResult.join'
      - '@azure/arm-compute.VirtualMachineListResult.keys'
      - '@azure/arm-compute.VirtualMachineListResult.lastIndexOf'
      - '@azure/arm-compute.VirtualMachineListResult.length'
      - '@azure/arm-compute.VirtualMachineListResult.map'
      - '@azure/arm-compute.VirtualMachineListResult.nextLink'
      - '@azure/arm-compute.VirtualMachineListResult.pop'
      - '@azure/arm-compute.VirtualMachineListResult.push'
      - '@azure/arm-compute.VirtualMachineListResult.reduce_2'
      - '@azure/arm-compute.VirtualMachineListResult.reduce'
      - '@azure/arm-compute.VirtualMachineListResult.reduce_1'
      - '@azure/arm-compute.VirtualMachineListResult.reduceRight_2'
      - '@azure/arm-compute.VirtualMachineListResult.reduceRight'
      - '@azure/arm-compute.VirtualMachineListResult.reduceRight_1'
      - '@azure/arm-compute.VirtualMachineListResult.reverse'
      - '@azure/arm-compute.VirtualMachineListResult.shift'
      - '@azure/arm-compute.VirtualMachineListResult.slice'
      - '@azure/arm-compute.VirtualMachineListResult.some'
      - '@azure/arm-compute.VirtualMachineListResult.sort'
      - '@azure/arm-compute.VirtualMachineListResult.splice_1'
      - '@azure/arm-compute.VirtualMachineListResult.splice'
      - '@azure/arm-compute.VirtualMachineListResult.toLocaleString'
      - '@azure/arm-compute.VirtualMachineListResult.toString'
      - '@azure/arm-compute.VirtualMachineListResult.unshift'
      - '@azure/arm-compute.VirtualMachineListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-compute.VirtualMachine>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.concat'
    name: 'concat(ConcatArray<VirtualMachine>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-101">Kombiniert zwei oder mehr Arrays.</span><span class="sxs-lookup"><span data-stu-id="2fbef-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<VirtualMachine>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-compute.VirtualMachine>[]'
          description: |
            <span data-ttu-id="2fbef-102">Zusätzliche Elemente, die am Ende von array1 hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-compute.VirtualMachine[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-103">Kombiniert zwei oder mehr Arrays.</span><span class="sxs-lookup"><span data-stu-id="2fbef-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="2fbef-104">Zusätzliche Elemente, die am Ende von array1 hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-compute.VirtualMachine[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-105">Gibt dieses Objekt nach dem Kopieren der eines Teil des Arrays identifizierte starten und Beenden der auf dasselbe Array beginnend ab Position-Ziel</span><span class="sxs-lookup"><span data-stu-id="2fbef-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="2fbef-106">Ziel negativ ist, wird es als Länge + Ziel, in denen die Länge des Arrays beträgt, behandelt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="2fbef-107">Wenn Start negativ ist, wird es als Länge + Start behandelt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="2fbef-108">Wenn das Ende negativ ist, wird es als Länge + Ende behandelt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="2fbef-109">Wenn nicht angegeben, die Länge dieses Objekt wird als den Standardwert verwendet.</span><span class="sxs-lookup"><span data-stu-id="2fbef-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-110">Gibt ein iterable von Schlüssel-Wert-Paaren für jeden Beitrag im array</span><span class="sxs-lookup"><span data-stu-id="2fbef-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.every'
    name: 'every((value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-111">Bestimmt, ob alle Elemente eines Arrays mit den angegebenen Test erfüllen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-111">Determines whether all the members of an array satisfy the specified test.</span></span>'
    syntax:
      content: 'function every(callbackfn: (value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean'
          description: '<span data-ttu-id="2fbef-112">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2fbef-113">Der every-Methode ruft die Listenwerts-Funktion für jedes Element im Matrix1, bis die Listenwerts "false" zurückgibt oder bis zum Ende des Arrays.</span><span class="sxs-lookup"><span data-stu-id="2fbef-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2fbef-114">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2fbef-115">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.fill'
    name: 'fill(VirtualMachine, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-116">Gibt dieses Objekt nach dem Füllen im Abschnitts identifizierte beginnen und enden mit Wert</span><span class="sxs-lookup"><span data-stu-id="2fbef-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: VirtualMachine, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-compute.VirtualMachine'
          description: <span data-ttu-id="2fbef-117">der Wert zum Ausfüllen von Array-Abschnitt mit</span><span class="sxs-lookup"><span data-stu-id="2fbef-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="2fbef-118">Der Index zu beginnen, Arrays, an.</span><span class="sxs-lookup"><span data-stu-id="2fbef-118">index to start filling the array at.</span></span> <span data-ttu-id="2fbef-119">Wenn Start negativ ist, wird es als Länge + starten, in denen die Länge des Arrays beträgt, behandelt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="2fbef-120">Der Index, beenden, füllen das Array an.</span><span class="sxs-lookup"><span data-stu-id="2fbef-120">index to stop filling the array at.</span></span> <span data-ttu-id="2fbef-121">Wenn das Ende negativ ist, wird es als Länge + Ende behandelt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.filter_1'
    name: 'filter((value: VirtualMachine, index: number, array: VirtualMachine[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-122">Gibt zurück, die Elemente eines Arrays, die in einer Rückruffunktion angegebene Bedingung erfüllen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter(callbackfn: (value: VirtualMachine, index: number, array: VirtualMachine[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: VirtualMachine, index: number, array: VirtualMachine[]) => any'
          description: '<span data-ttu-id="2fbef-123">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2fbef-124">Die Filter-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2fbef-125">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2fbef-126">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-compute.VirtualMachine[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.filter'
    name: 'filter((value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-127">Gibt zurück, die Elemente eines Arrays, die in einer Rückruffunktion angegebene Bedingung erfüllen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter<S>(callbackfn: (value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean'
          description: '<span data-ttu-id="2fbef-128">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2fbef-129">Die Filter-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2fbef-130">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2fbef-131">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.find'
    name: 'find((this: void, value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-132">Gibt den Wert des ersten Elements im Array zurück, in denen ist Prädikat "true", und nicht definierte andernfalls.</span><span class="sxs-lookup"><span data-stu-id="2fbef-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean'
          description: '<span data-ttu-id="2fbef-133">Suchen Sie Aufrufe Prädikat einmal für jedes Element des Arrays, in aufsteigender Reihenfolge, bis sie eine findet, in denen Prädikat "true" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="2fbef-134">Wenn dieses Element gefunden wird, gibt Find sofort den Wert dieses Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="2fbef-135">Andernfalls wird suchen nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2fbef-136">Wenn angegeben, wird es als dieses verwendet Wert für jeden Aufruf des Prädikats.</span><span class="sxs-lookup"><span data-stu-id="2fbef-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="2fbef-137">Wenn diese Option nicht angegeben ist, nicht definiert wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="2fbef-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.find_1'
    name: 'find((value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-138">Gibt den Wert des ersten Elements im Array zurück, in denen ist Prädikat "true", und nicht definierte andernfalls.</span><span class="sxs-lookup"><span data-stu-id="2fbef-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-compute.VirtualMachine | undefined'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.findIndex'
    name: 'findIndex((value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-139">Gibt den Index des ersten Elements im Array zurück, in dem Prädikat true festgelegt ist, und andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="2fbef-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: VirtualMachine, index: number, obj: VirtualMachine[]) => boolean'
          description: '<span data-ttu-id="2fbef-140">Suchen Sie Aufrufe Prädikat einmal für jedes Element des Arrays, in aufsteigender Reihenfolge, bis sie eine findet, in denen Prädikat "true" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="2fbef-141">Wenn ein solches Element gefunden wird, gibt FindIndex sofort den Index dieses Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="2fbef-142">FindIndex gibt, andernfalls-1 zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2fbef-143">Wenn angegeben, wird es als dieses verwendet Wert für jeden Aufruf des Prädikats.</span><span class="sxs-lookup"><span data-stu-id="2fbef-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="2fbef-144">Wenn diese Option nicht angegeben ist, nicht definiert wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="2fbef-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.forEach'
    name: 'forEach((value: VirtualMachine, index: number, array: VirtualMachine[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-145">Führt die angegebene Aktion für jedes Element in einem Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: VirtualMachine, index: number, array: VirtualMachine[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: VirtualMachine, index: number, array: VirtualMachine[]) => void'
          description: '<span data-ttu-id="2fbef-146">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2fbef-147">ForEach, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-147">forEach calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2fbef-148">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2fbef-149">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.indexOf'
    name: 'indexOf(VirtualMachine, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-150">Gibt den Index des ersten Vorkommens eines Werts in einem Array zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: VirtualMachine, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-compute.VirtualMachine'
          description: '<span data-ttu-id="2fbef-151">Der Wert, der in das Array gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fbef-151">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="2fbef-152">Der Arrayindex, an dem die Suche zu starten.</span><span class="sxs-lookup"><span data-stu-id="2fbef-152">The array index at which to begin the search.</span></span> <span data-ttu-id="2fbef-153">Wenn FromIndex weggelassen wird, beginnt die Suche, bei Index 0.</span><span class="sxs-lookup"><span data-stu-id="2fbef-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-154">Fügt alle Elemente eines Arrays durch die angegebene aus Trennzeichen bestehende Zeichenfolge getrennt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-154">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="2fbef-155">Eine Zeichenfolge, die zum Trennen der ein Element eines Arrays von der nächsten in der Ergebniszeichenfolge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="2fbef-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="2fbef-156">Wenn nicht angegeben, werden die Elemente des Arrays durch ein Komma getrennt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-157">Gibt ein iterable von Schlüsseln im array</span><span class="sxs-lookup"><span data-stu-id="2fbef-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.lastIndexOf'
    name: 'lastIndexOf(VirtualMachine, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-158">Gibt den Index des letzten Vorkommens eines angegebenen Werts in einem Array zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: VirtualMachine, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-compute.VirtualMachine'
          description: '<span data-ttu-id="2fbef-159">Der Wert, der in das Array gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fbef-159">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="2fbef-160">Der Arrayindex, an dem die Suche zu starten.</span><span class="sxs-lookup"><span data-stu-id="2fbef-160">The array index at which to begin the search.</span></span> <span data-ttu-id="2fbef-161">Wenn FromIndex weggelassen wird, beginnt die Suche, am letzten Index im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="2fbef-162">Übernimmt oder bestimmt die Länge des Arrays.</span><span class="sxs-lookup"><span data-stu-id="2fbef-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="2fbef-163">Dies ist eine Nummer eins höher ist als das höchste der in einem Array definierten Elemente.</span><span class="sxs-lookup"><span data-stu-id="2fbef-163">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.map'
    name: 'map((value: VirtualMachine, index: number, array: VirtualMachine[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-164">Ruft eine definierte Rückruffunktion für jedes Element eines Arrays und gibt ein Array mit den Ergebnissen zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: VirtualMachine, index: number, array: VirtualMachine[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: VirtualMachine, index: number, array: VirtualMachine[]) => U'
          description: '<span data-ttu-id="2fbef-165">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2fbef-166">Die Map-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-166">The map method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2fbef-167">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2fbef-168">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="2fbef-169">Der URI zum Abrufen der nächsten Seite von virtuellen Computern.</span><span class="sxs-lookup"><span data-stu-id="2fbef-169">The URI to fetch the next page of VMs.</span></span> <span data-ttu-id="2fbef-170">Rufen Sie ListNext() mit diesem URI zum Abrufen der nächsten Seite von virtuellen Computern.</span><span class="sxs-lookup"><span data-stu-id="2fbef-170">Call ListNext() with this URI to fetch the next page of Virtual Machines.</span></span>
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-171">Entfernt das letzte Element aus einem Array und gibt sie zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-171">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-compute.VirtualMachine | undefined'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.push'
    name: 'push(VirtualMachine[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-172">Fügt neue Elemente in ein Array und gibt die neue Länge des Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-172">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: VirtualMachine[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-compute.VirtualMachine[]'
          description: |
            <span data-ttu-id="2fbef-173">Neue Elemente des Arrays.</span><span class="sxs-lookup"><span data-stu-id="2fbef-173">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-174">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-174">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="2fbef-175">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-175">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => U'
          description: '<span data-ttu-id="2fbef-176">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-176">A function that accepts up to four arguments.</span></span> <span data-ttu-id="2fbef-177">Die Reduce-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-177">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="2fbef-178">Wenn "InitialValue" angegeben ist, wird es als Anfangswert verwendet, die Ansammlung beginnt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-178">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="2fbef-179">Der erste Aufruf an die Funktion Listenwerts stellt dieser Wert als Argument anstelle eines Arraywerts.</span><span class="sxs-lookup"><span data-stu-id="2fbef-179">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.reduce'
    name: 'reduce((previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-180">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-180">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="2fbef-181">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-181">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine'
          description: '<span data-ttu-id="2fbef-182">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-182">A function that accepts up to four arguments.</span></span> <span data-ttu-id="2fbef-183">Die Reduce-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-183">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - '@azure/arm-compute.VirtualMachine'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.reduce_1'
    name: 'reduce((previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine, VirtualMachine)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-184">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-184">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="2fbef-185">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-185">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine, initialValue: VirtualMachine)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-compute.VirtualMachine'
          description: ''
      return:
        type:
          - '@azure/arm-compute.VirtualMachine'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-186">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="2fbef-186">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="2fbef-187">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-187">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => U'
          description: '<span data-ttu-id="2fbef-188">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-188">A function that accepts up to four arguments.</span></span> <span data-ttu-id="2fbef-189">ReduceRight-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-189">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="2fbef-190">Wenn "InitialValue" angegeben ist, wird es als Anfangswert verwendet, die Ansammlung beginnt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-190">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="2fbef-191">Der erste Aufruf an die Funktion Listenwerts stellt dieser Wert als Argument anstelle eines Arraywerts.</span><span class="sxs-lookup"><span data-stu-id="2fbef-191">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.reduceRight'
    name: 'reduceRight((previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-192">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="2fbef-192">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="2fbef-193">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-193">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine'
          description: '<span data-ttu-id="2fbef-194">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-194">A function that accepts up to four arguments.</span></span> <span data-ttu-id="2fbef-195">ReduceRight-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-195">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - '@azure/arm-compute.VirtualMachine'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.reduceRight_1'
    name: 'reduceRight((previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine, VirtualMachine)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-196">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="2fbef-196">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="2fbef-197">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-197">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine, initialValue: VirtualMachine)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: VirtualMachine, currentValue: VirtualMachine, currentIndex: number, array: VirtualMachine[]) => VirtualMachine'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-compute.VirtualMachine'
          description: ''
      return:
        type:
          - '@azure/arm-compute.VirtualMachine'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-198">Kehrt die Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="2fbef-198">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-compute.VirtualMachine[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-199">Entfernt das erste Element aus einem Array und gibt sie zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-199">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-compute.VirtualMachine | undefined'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-200">Gibt einen Abschnitt eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-200">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="2fbef-201">Der Anfang des angegebenen Abschnitts des Arrays.</span><span class="sxs-lookup"><span data-stu-id="2fbef-201">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="2fbef-202">Das Ende der angegebenen Teil des Arrays.</span><span class="sxs-lookup"><span data-stu-id="2fbef-202">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-compute.VirtualMachine[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.some'
    name: 'some((value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-203">Bestimmt, ob die angegebene Rückruffunktion für jedes Element eines Arrays "true" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="2fbef-203">Determines whether the specified callback function returns true for any element of an array.</span></span>'
    syntax:
      content: 'function some(callbackfn: (value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: VirtualMachine, index: number, array: VirtualMachine[]) => boolean'
          description: '<span data-ttu-id="2fbef-204">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-204">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2fbef-205">Die eine Methode ruft die Listenwerts-Funktion für jedes Element im Matrix1, bis die Listenwerts "true" zurückgibt oder bis zum Ende des Arrays.</span><span class="sxs-lookup"><span data-stu-id="2fbef-205">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2fbef-206">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-206">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2fbef-207">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-207">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.sort'
    name: 'sort(undefined | (a: VirtualMachine, b: VirtualMachine) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-208">Ein Array sortiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-208">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: VirtualMachine, b: VirtualMachine) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: VirtualMachine, b: VirtualMachine) => number'
          description: |
            <span data-ttu-id="2fbef-209">Der Name der Funktion verwendet, um die Reihenfolge der Elemente zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-209">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="2fbef-210">Wenn nicht angegeben, werden die Elemente sortiert, aufsteigend in ASCII-Zeichen sortiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-210">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.splice_1'
    name: 'splice(number, number, VirtualMachine[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-211">Entfernt Elemente aus einem Array und bei Bedarf fügt neue Elemente ein an ihre Stelle ein, wobei die gelöschten Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="2fbef-211">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: VirtualMachine[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="2fbef-212">Die nullbasierte Position im Array ab dem mit dem Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-212">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="2fbef-213">Die Anzahl der zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="2fbef-213">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-compute.VirtualMachine[]'
          description: |
            <span data-ttu-id="2fbef-214">Elemente, die in das Array anstelle der gelöschten Elemente eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fbef-214">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-compute.VirtualMachine[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-215">Entfernt Elemente aus einem Array und bei Bedarf fügt neue Elemente ein an ihre Stelle ein, wobei die gelöschten Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="2fbef-215">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="2fbef-216">Die nullbasierte Position im Array ab dem mit dem Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="2fbef-216">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="2fbef-217">Die Anzahl der zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="2fbef-217">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-compute.VirtualMachine[]'
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2fbef-218">Gibt eine Zeichenfolgendarstellung eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-218">Returns a string representation of an array.</span></span> <span data-ttu-id="2fbef-219">Die Elemente werden in eine Zeichenfolge, die mit den entsprechenden-Methoden ToLocalString konvertiert.</span><span class="sxs-lookup"><span data-stu-id="2fbef-219">The elements are converted to string using their toLocalString methods.</span></span>'
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-220">Gibt eine Zeichenfolgendarstellung eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="2fbef-220">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.unshift'
    name: 'unshift(VirtualMachine[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-221">Fügt neue Elemente zu Beginn eines Arrays an.</span><span class="sxs-lookup"><span data-stu-id="2fbef-221">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: VirtualMachine[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-compute.VirtualMachine[]'
          description: |
            <span data-ttu-id="2fbef-222">Am Anfang das Array einzufügenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="2fbef-222">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-compute'
  - uid: '@azure/arm-compute.VirtualMachineListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2fbef-223">Gibt ein iterable der Werte im array</span><span class="sxs-lookup"><span data-stu-id="2fbef-223">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-compute.VirtualMachine>
    package: '@azure/arm-compute'
references:
  - uid: Array<@azure/arm-compute.VirtualMachine>
    name: VirtualMachine>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: '@azure/arm-compute.VirtualMachine'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-compute.VirtualMachine>[]'
    name: 'VirtualMachine>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: '@azure/arm-compute.VirtualMachine'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-compute.VirtualMachine[]'
    name: 'VirtualMachine[]'
    spec.typeScript:
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: '@azure/arm-compute.VirtualMachine'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-compute.VirtualMachine'
    name: VirtualMachine
    spec.typeScript:
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: '@azure/arm-compute.VirtualMachine'
  - uid: '@azure/arm-compute.VirtualMachine | undefined'
    name: VirtualMachine | undefined
    spec.typeScript:
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: '@azure/arm-compute.VirtualMachine'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-compute.VirtualMachine>
    name: VirtualMachine>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: '@azure/arm-compute.VirtualMachine'
      - name: '>'
        fullName: '>'