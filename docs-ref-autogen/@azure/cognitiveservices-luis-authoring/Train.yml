### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-luis-authoring.Train'
    name: Train
    fullName: Train
    children:
      - '@azure/cognitiveservices-luis-authoring.Train.getStatus'
      - '@azure/cognitiveservices-luis-authoring.Train.getStatus_2'
      - '@azure/cognitiveservices-luis-authoring.Train.getStatus_1'
      - '@azure/cognitiveservices-luis-authoring.Train.constructor'
      - '@azure/cognitiveservices-luis-authoring.Train.trainVersion'
      - '@azure/cognitiveservices-luis-authoring.Train.trainVersion_2'
      - '@azure/cognitiveservices-luis-authoring.Train.trainVersion_1'
    langs:
      - typeScript
    type: class
    summary: 'Klasse, die Zug darstellt.'
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus'
    name: 'getStatus(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Ruft den Trainingsstatus aller Modelle (Intents und Entitäten) für die angegebene LUIS-app ab. Sie müssen die Train-API zum Trainieren von LUIS-app vor dem Aufruf dieser API Trainingsstatus abrufen aufrufen.
      "AppID" gibt an, die LUIS-app-ID "Versions-ID" gibt die Versionsnummer der LUIS-app an. Beispiel: "0.1".
    syntax:
      content: 'function getStatus(appId: string, versionId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type:
            - string
          description: Die Anwendungs-ID.
        - id: versionId
          type:
            - string
          description: Die Versions-ID
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TrainGetStatusResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus_2'
    name: 'getStatus(string, string, RequestOptionsBase, ServiceCallback<ModelTrainingInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getStatus(appId: string, versionId: string, options: RequestOptionsBase, callback: ServiceCallback<ModelTrainingInfo[]>)'
      parameters:
        - id: appId
          type:
            - string
          description: Die Anwendungs-ID.
        - id: versionId
          type:
            - string
          description: Die Versions-ID
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-luis-authoring.ModelTrainingInfo[]>'
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TrainGetStatusResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.getStatus_1'
    name: 'getStatus(string, string, ServiceCallback<ModelTrainingInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getStatus(appId: string, versionId: string, callback: ServiceCallback<ModelTrainingInfo[]>)'
      parameters:
        - id: appId
          type:
            - string
          description: Die Anwendungs-ID.
        - id: versionId
          type:
            - string
          description: Die Versions-ID
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-luis-authoring.ModelTrainingInfo[]>'
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TrainGetStatusResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.constructor'
    name: Train(LUISAuthoringClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Erstellen Sie eine trainieren.
    syntax:
      content: 'new Train(client: LUISAuthoringClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
          description: |
            Verweis auf den Dienstclient.
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion'
    name: 'trainVersion(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Sendet eine Anforderung Schulungen für eine Version von einer angegebenen LUIS-app. Diese POST-Anforderung initiiert eine Anforderung asynchron aus. Um zu bestimmen, ob die Training-Anforderung erfolgreich ist, senden Sie eine GET-Anforderung, um Schulungen Status zu erhalten. Hinweis: Die Version der Anwendung ist nicht vollständig trainiert werden, es sei denn, alle Modelle (Intents und Entitäten) werden erfolgreich trainiert, oder auf dem neuesten Stand sind. Um Schulungen Erfolg zu überprüfen, rufen Sie den Status der Schulung mindestens einmal nach dem Training abgeschlossen ist.'
    syntax:
      content: 'function trainVersion(appId: string, versionId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type:
            - string
          description: Die Anwendungs-ID.
        - id: versionId
          type:
            - string
          description: Die Versions-ID
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TrainTrainVersionResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion_2'
    name: 'trainVersion(string, string, RequestOptionsBase, ServiceCallback<EnqueueTrainingResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function trainVersion(appId: string, versionId: string, options: RequestOptionsBase, callback: ServiceCallback<EnqueueTrainingResponse>)'
      parameters:
        - id: appId
          type:
            - string
          description: Die Anwendungs-ID.
        - id: versionId
          type:
            - string
          description: Die Versions-ID
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TrainTrainVersionResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Train.trainVersion_1'
    name: 'trainVersion(string, string, ServiceCallback<EnqueueTrainingResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function trainVersion(appId: string, versionId: string, callback: ServiceCallback<EnqueueTrainingResponse>)'
      parameters:
        - id: appId
          type:
            - string
          description: Die Anwendungs-ID.
        - id: versionId
          type:
            - string
          description: Die Versions-ID
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.TrainTrainVersionResponse>
    package: '@azure/cognitiveservices-luis-authoring'
references:
  - uid: '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
    name: LUISAuthoringClientContext
    spec.typeScript:
      - name: LUISAuthoringClientContext
        fullName: LUISAuthoringClientContext
        uid: '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
  - uid: 'ServiceCallback<@azure/cognitiveservices-luis-authoring.ModelTrainingInfo[]>'
    name: 'ModelTrainingInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ModelTrainingInfo
        fullName: ModelTrainingInfo
        uid: '@azure/cognitiveservices-luis-authoring.ModelTrainingInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: ServiceCallback<@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse>
    name: EnqueueTrainingResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EnqueueTrainingResponse
        fullName: EnqueueTrainingResponse
        uid: '@azure/cognitiveservices-luis-authoring.EnqueueTrainingResponse'
      - name: '>'
        fullName: '>'