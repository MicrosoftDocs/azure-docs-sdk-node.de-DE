### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventhub.EventHubManagementClient'
    name: EventHubManagementClient
    fullName: EventHubManagementClient
    children:
      - '@azure/arm-eventhub.EventHubManagementClient.acceptLanguage'
      - '@azure/arm-eventhub.EventHubManagementClient.apiVersion'
      - '@azure/arm-eventhub.EventHubManagementClient.beginLongRunningRequest'
      - '@azure/arm-eventhub.EventHubManagementClient.consumerGroups'
      - '@azure/arm-eventhub.EventHubManagementClient.credentials'
      - '@azure/arm-eventhub.EventHubManagementClient.disasterRecoveryConfigs'
      - '@azure/arm-eventhub.EventHubManagementClient.constructor'
      - '@azure/arm-eventhub.EventHubManagementClient.eventHubs'
      - '@azure/arm-eventhub.EventHubManagementClient.longRunningOperationRetryTimeout'
      - '@azure/arm-eventhub.EventHubManagementClient.namespaces'
      - '@azure/arm-eventhub.EventHubManagementClient.operations'
      - '@azure/arm-eventhub.EventHubManagementClient.regions'
      - '@azure/arm-eventhub.EventHubManagementClient.restoreLROPoller'
      - '@azure/arm-eventhub.EventHubManagementClient.sendLongRunningRequest'
      - '@azure/arm-eventhub.EventHubManagementClient.sendLRORequest'
      - '@azure/arm-eventhub.EventHubManagementClient.sendOperationRequest'
      - '@azure/arm-eventhub.EventHubManagementClient.sendRequest'
      - '@azure/arm-eventhub.EventHubManagementClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-eventhub.EventHubManagementClientContext'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="39102-101">Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine HttpLongRunningOperationResponse, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="39102-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="39102-102">Das Request-Objekt</span><span class="sxs-lookup"><span data-stu-id="39102-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.consumerGroups'
    name: consumerGroups
    fullName: consumerGroups
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'consumerGroups: ConsumerGroups'
      return:
        type:
          - '@azure/arm-eventhub.ConsumerGroups'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.disasterRecoveryConfigs'
    name: disasterRecoveryConfigs
    fullName: disasterRecoveryConfigs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'disasterRecoveryConfigs: DisasterRecoveryConfigs'
      return:
        type:
          - '@azure/arm-eventhub.DisasterRecoveryConfigs'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.constructor'
    name: 'EventHubManagementClient(ServiceClientCredentials, string, Models.EventHubManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="39102-103">Initialisiert eine neue Instanz der Klasse EventHubManagementClient an.</span><span class="sxs-lookup"><span data-stu-id="39102-103">Initializes a new instance of the EventHubManagementClient class.</span></span>
    syntax:
      content: 'new EventHubManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.EventHubManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="39102-104">Anmeldeinformationen für den Client zum Verbinden mit Azure.</span><span class="sxs-lookup"><span data-stu-id="39102-104">Credentials needed for the client to connect to Azure.</span></span>
        - id: subscriptionId
          type:
            - string
          description: '<span data-ttu-id="39102-105">Abonnementanmeldeinformationen, die Microsoft Azure-Abonnement eindeutig zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="39102-105">Subscription credentials that uniquely identify a Microsoft Azure subscription.</span></span> <span data-ttu-id="39102-106">Die Abonnement-ID ist Teil des URI für jeden Dienstaufruf.</span><span class="sxs-lookup"><span data-stu-id="39102-106">The subscription ID forms part of the URI for every service call.</span></span>'
        - id: options
          type:
            - Models.EventHubManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.eventHubs'
    name: eventHubs
    fullName: eventHubs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'eventHubs: EventHubs'
      return:
        type:
          - '@azure/arm-eventhub.EventHubs'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="39102-107">Die Retry-Timeout in Sekunden für zeitintensive Vorgänge werden soll.</span><span class="sxs-lookup"><span data-stu-id="39102-107">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="39102-108">Standardwert: 30.</span><span class="sxs-lookup"><span data-stu-id="39102-108">Default value is 30.</span></span>'
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.namespaces'
    name: namespaces
    fullName: namespaces
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'namespaces: Namespaces'
      return:
        type:
          - '@azure/arm-eventhub.Namespaces'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-eventhub.Operations'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.regions'
    name: regions
    fullName: regions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'regions: Regions'
      return:
        type:
          - '@azure/arm-eventhub.Regions'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="39102-109">Stellen Sie eine LROPoller aus der angegebenen LROPollState wieder her.</span><span class="sxs-lookup"><span data-stu-id="39102-109">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="39102-110">Diese Methode kann verwendet werden, um eine LROPoller auf einem anderen Prozess oder Computer neu zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="39102-110">This method can be used to recreate an LROPoller on a different process or machine.</span></span>'
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="39102-111">Stellt einen Mechanismus, um eine Anforderung aus, die abgerufen werden, und geben Sie das endgültige Ergebnis bereit.</span><span class="sxs-lookup"><span data-stu-id="39102-111">Provides a mechanism to make a request that will poll and provide the final result.</span></span>'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="39102-112">Das Request-Objekt</span><span class="sxs-lookup"><span data-stu-id="39102-112">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="39102-113">Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine LROPoller, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="39102-113">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="39102-114">Die Argumente für den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="39102-114">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="39102-115">Die Spezifikation für den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="39102-115">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: '<span data-ttu-id="39102-116">Zusätzliche Optionen, die beim Ausführen der Anforderung gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="39102-116">Additional options to be sent while making the request.</span></span>'
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="39102-117">Senden Sie eine HTTP-Anforderung, die mithilfe der bereitgestellten OperationSpec aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="39102-117">Send an HTTP request that is populated using the provided OperationSpec.</span></span>'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: '<span data-ttu-id="39102-118">Die Argumente, denen von der HTTP-Anforderung auf Vorlagen basierende Werte aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="39102-118">The arguments that the HTTP request''s templated values will be populated from.</span></span>'
        - id: operationSpec
          type:
            - OperationSpec
          description: '<span data-ttu-id="39102-119">Die OperationSpec, mit denen die HTTP-Anforderung aufgefüllt werden soll.</span><span class="sxs-lookup"><span data-stu-id="39102-119">The OperationSpec to use to populate the httpRequest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="39102-120">Der Rückruf aufgerufen wird, wenn die Antwort empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="39102-120">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="39102-121">Die angegebene HTTP-Anforderung zu senden.</span><span class="sxs-lookup"><span data-stu-id="39102-121">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.EventHubManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-eventhub'
references:
  - uid: '@azure/arm-eventhub.EventHubManagementClientContext'
    name: EventHubManagementClientContext
    spec.typeScript:
      - name: EventHubManagementClientContext
        fullName: EventHubManagementClientContext
        uid: '@azure/arm-eventhub.EventHubManagementClientContext'
  - uid: '@azure/arm-eventhub.ConsumerGroups'
    name: ConsumerGroups
    spec.typeScript:
      - name: ConsumerGroups
        fullName: ConsumerGroups
        uid: '@azure/arm-eventhub.ConsumerGroups'
  - uid: '@azure/arm-eventhub.DisasterRecoveryConfigs'
    name: DisasterRecoveryConfigs
    spec.typeScript:
      - name: DisasterRecoveryConfigs
        fullName: DisasterRecoveryConfigs
        uid: '@azure/arm-eventhub.DisasterRecoveryConfigs'
  - uid: '@azure/arm-eventhub.EventHubs'
    name: EventHubs
    spec.typeScript:
      - name: EventHubs
        fullName: EventHubs
        uid: '@azure/arm-eventhub.EventHubs'
  - uid: '@azure/arm-eventhub.Namespaces'
    name: Namespaces
    spec.typeScript:
      - name: Namespaces
        fullName: Namespaces
        uid: '@azure/arm-eventhub.Namespaces'
  - uid: '@azure/arm-eventhub.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-eventhub.Operations'
  - uid: '@azure/arm-eventhub.Regions'
    name: Regions
    spec.typeScript:
      - name: Regions
        fullName: Regions
        uid: '@azure/arm-eventhub.Regions'