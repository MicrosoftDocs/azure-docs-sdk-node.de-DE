### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient'
    name: ManagedApplicationClient
    fullName: ManagedApplicationClient
    children:
      - '@azure/arm-managedapplications.ManagedApplicationClient.acceptLanguage'
      - '@azure/arm-managedapplications.ManagedApplicationClient.apiVersion'
      - '@azure/arm-managedapplications.ManagedApplicationClient.applianceDefinitions'
      - '@azure/arm-managedapplications.ManagedApplicationClient.appliances'
      - '@azure/arm-managedapplications.ManagedApplicationClient.beginLongRunningRequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.credentials'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperations'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperations_2'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperations_1'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext_2'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext_1'
      - '@azure/arm-managedapplications.ManagedApplicationClient.longRunningOperationRetryTimeout'
      - '@azure/arm-managedapplications.ManagedApplicationClient.constructor'
      - '@azure/arm-managedapplications.ManagedApplicationClient.restoreLROPoller'
      - '@azure/arm-managedapplications.ManagedApplicationClient.sendLongRunningRequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.sendLRORequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.sendOperationRequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.sendRequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-managedapplications.ManagedApplicationClientContext'
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.applianceDefinitions'
    name: applianceDefinitions
    fullName: applianceDefinitions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'applianceDefinitions: ApplianceDefinitions'
      return:
        type:
          - '@azure/arm-managedapplications.ApplianceDefinitions'
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.appliances'
    name: appliances
    fullName: appliances
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'appliances: Appliances'
      return:
        type:
          - '@azure/arm-managedapplications.Appliances'
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine HttpLongRunningOperationResponse, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Das Request-Objekt
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperations'
    name: listOperations(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Zeigt eine Liste aller verfügbaren Microsoft.Solutions REST-API-Vorgänge.
    syntax:
      content: 'function listOperations(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListOperationsResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperations_2'
    name: 'listOperations(RequestOptionsBase, ServiceCallback<OperationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOperations(options: RequestOptionsBase, callback: ServiceCallback<OperationListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.OperationListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.ListOperationsResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperations_1'
    name: listOperations(ServiceCallback<OperationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOperations(callback: ServiceCallback<OperationListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.OperationListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.ListOperationsResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext'
    name: 'listOperationsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Zeigt eine Liste aller verfügbaren Microsoft.Solutions REST-API-Vorgänge.
    syntax:
      content: 'function listOperationsNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListOperationsNextResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext_2'
    name: 'listOperationsNext(string, RequestOptionsBase, ServiceCallback<OperationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOperationsNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<OperationListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.OperationListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.ListOperationsNextResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext_1'
    name: 'listOperationsNext(string, ServiceCallback<OperationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOperationsNext(nextPageLink: string, callback: ServiceCallback<OperationListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.OperationListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.ListOperationsNextResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Retry-Timeout in Sekunden für zeitintensive Vorgänge werden soll. Standardwert: 30.'
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.constructor'
    name: 'ManagedApplicationClient(ServiceClientCredentials, string, Models.ManagedApplicationClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initialisiert eine neue Instanz der Klasse ManagedApplicationClient an.
    syntax:
      content: 'new ManagedApplicationClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.ManagedApplicationClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Anmeldeinformationen für den Client zum Verbinden mit Azure.
        - id: subscriptionId
          type:
            - string
          description: Die ID der Ziel-Abonnements.
        - id: options
          type:
            - Models.ManagedApplicationClientOptions
          description: ''
          optional: true
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stellen Sie eine LROPoller aus der angegebenen LROPollState wieder her. Diese Methode kann verwendet werden, um eine LROPoller auf einem anderen Prozess oder Computer neu zu erstellen.'
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Stellt einen Mechanismus, um eine Anforderung aus, die abgerufen werden, und geben Sie das endgültige Ergebnis bereit.'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Das Request-Objekt
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden der ursprünglichen Anforderung von einem LRO (langer Vorgang) und eine LROPoller, die stellt Methoden zum Abrufen der LRO und überprüft, ob der LRO abgeschlossen ist.'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Die Argumente für den Vorgang.
        - id: operationSpec
          type:
            - OperationSpec
          description: Die Spezifikation für den Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: 'Zusätzliche Optionen, die beim Ausführen der Anforderung gesendet werden.'
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden Sie eine HTTP-Anforderung, die mithilfe der bereitgestellten OperationSpec aufgefüllt wird.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Die Argumente, denen von der HTTP-Anforderung auf Vorlagen basierende Werte aufgefüllt wird.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'Die OperationSpec, mit denen die HTTP-Anforderung aufgefüllt werden soll.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Der Rückruf aufgerufen wird, wenn die Antwort empfangen wird.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Die angegebene HTTP-Anforderung zu senden.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-managedapplications'
references:
  - uid: '@azure/arm-managedapplications.ManagedApplicationClientContext'
    name: ManagedApplicationClientContext
    spec.typeScript:
      - name: ManagedApplicationClientContext
        fullName: ManagedApplicationClientContext
        uid: '@azure/arm-managedapplications.ManagedApplicationClientContext'
  - uid: '@azure/arm-managedapplications.ApplianceDefinitions'
    name: ApplianceDefinitions
    spec.typeScript:
      - name: ApplianceDefinitions
        fullName: ApplianceDefinitions
        uid: '@azure/arm-managedapplications.ApplianceDefinitions'
  - uid: '@azure/arm-managedapplications.Appliances'
    name: Appliances
    spec.typeScript:
      - name: Appliances
        fullName: Appliances
        uid: '@azure/arm-managedapplications.Appliances'
  - uid: ServiceCallback<@azure/arm-managedapplications.OperationListResult>
    name: OperationListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationListResult
        fullName: OperationListResult
        uid: '@azure/arm-managedapplications.OperationListResult'
      - name: '>'
        fullName: '>'