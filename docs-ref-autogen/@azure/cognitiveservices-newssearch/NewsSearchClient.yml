### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchClient'
    name: NewsSearchClient
    fullName: NewsSearchClient
    children:
      - '@azure/cognitiveservices-newssearch.NewsSearchClient.credentials'
      - '@azure/cognitiveservices-newssearch.NewsSearchClient.endpoint'
      - '@azure/cognitiveservices-newssearch.NewsSearchClient.news'
      - '@azure/cognitiveservices-newssearch.NewsSearchClient.constructor'
      - '@azure/cognitiveservices-newssearch.NewsSearchClient.sendOperationRequest'
      - '@azure/cognitiveservices-newssearch.NewsSearchClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-newssearch.NewsSearchClientContext'
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'endpoint?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchClient.news'
    name: news
    fullName: news
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'news: NewsOperations'
      return:
        type:
          - '@azure/cognitiveservices-newssearch.NewsOperations'
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchClient.constructor'
    name: 'NewsSearchClient(ServiceClientCredentials, Models.NewsSearchClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initialisiert eine neue Instanz der Klasse NewsSearchClient an.
    syntax:
      content: 'new NewsSearchClient(credentials: ServiceClientCredentials, options?: Models.NewsSearchClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: 'Abonnementanmeldeinformationen, die clientabonnement eindeutig identifiziert.'
        - id: options
          type:
            - Models.NewsSearchClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Senden Sie eine HTTP-Anforderung, die mithilfe der bereitgestellten OperationSpec aufgef端llt wird.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Die Argumente, denen von der HTTP-Anforderung auf Vorlagen basierende Werte aufgef端llt wird.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'Die OperationSpec, mit denen die HTTP-Anforderung aufgef端llt werden soll.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Der R端ckruf aufgerufen wird, wenn die Antwort empfangen wird.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Die angegebene HTTP-Anforderung zu senden.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-newssearch'
references:
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchClientContext'
    name: NewsSearchClientContext
    spec.typeScript:
      - name: NewsSearchClientContext
        fullName: NewsSearchClientContext
        uid: '@azure/cognitiveservices-newssearch.NewsSearchClientContext'
  - uid: '@azure/cognitiveservices-newssearch.NewsOperations'
    name: NewsOperations
    spec.typeScript:
      - name: NewsOperations
        fullName: NewsOperations
        uid: '@azure/cognitiveservices-newssearch.NewsOperations'