### YamlMime:UniversalReference
ms.openlocfilehash: fd9659c6d754a551c1196d82e6d7d47fe353e207
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 08/22/2018
ms.locfileid: "41696057"
items:
- uid: '@azure/cosmos.Item'
  name: Item
  fullName: Item
  children:
  - '@azure/cosmos.Item.container'
  - '@azure/cosmos.Item.delete'
  - '@azure/cosmos.Item.delete_1'
  - '@azure/cosmos.Item.id'
  - '@azure/cosmos.Item.primaryKey'
  - '@azure/cosmos.Item.read'
  - '@azure/cosmos.Item.read_1'
  - '@azure/cosmos.Item.replace'
  - '@azure/cosmos.Item.replace_1'
  - '@azure/cosmos.Item.url'
  langs:
  - typeScript
  type: class
  summary: Zum Ausführen von Vorgängen für ein bestimmtes Element verwendet.
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: Löschen Sie das Element an.
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        Zusätzliche Optionen für die Anforderung, z. B. den Partitionsschlüssel.
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.delete_1'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Löschen Sie das Element an.

    Alle bereitgestellten Typ T, nicht notwendigerweise vom SDK erzwungen wird.

    Erhalten Sie möglicherweise mehr oder weniger Eigenschaften, und es liegt an die Logik, um es zu erzwingen.
  syntax:
    content: 'function delete<T>(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        Zusätzliche Optionen für die Anforderung, z. B. den Partitionsschlüssel.
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.primaryKey'
  name: primaryKey
  fullName: primaryKey
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'primaryKey: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Lesen Sie das Element der Definition.

    Es gibt keine Set-Schema für JSON-Elemente. Sie können eine beliebige Anzahl von benutzerdefinierten Eigenschaften enthalten.
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        Zusätzliche Optionen für die Anforderung, z. B. den Partitionsschlüssel.

        Beachten Sie, wenn Sie auf das Objekt einen Partitionsschlüssel angeben, wird den Primärschlüssel auf überschrieben `this.primaryKey`.
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.read_1'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Lesen Sie das Element der Definition.

    Alle bereitgestellten Typ T, nicht notwendigerweise vom SDK erzwungen wird.

    Erhalten Sie möglicherweise mehr oder weniger Eigenschaften, und es liegt an die Logik, um es zu erzwingen.

    Wenn Sie der Typ T eine Klasse ist, wird nicht übergeben `typeof` vergleichen, da es keine Übereinstimmung Prototyp hat.

    Es wird empfohlen, nur Schnittstellen verwendet werden soll.


    Es gibt keine Set-Schema für JSON-Elemente. Sie können eine beliebige Anzahl von benutzerdefinierten Eigenschaften enthalten.
  syntax:
    content: 'function read<T>(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        Zusätzliche Optionen für die Anforderung, z. B. den Partitionsschlüssel.

        Beachten Sie, wenn Sie auf das Objekt einen Partitionsschlüssel angeben, wird den Primärschlüssel auf überschrieben `this.primaryKey`.
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.replace'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Ersetzen Sie das Element der Definition.

    Es gibt keine Set-Schema für JSON-Elemente. Sie können eine beliebige Anzahl von benutzerdefinierten Eigenschaften enthalten.
  syntax:
    content: 'function replace(body: ItemDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.ItemDefinition'
      description: Die Definition zum Ersetzen des vorhandenen <xref:Item>Definition mit.
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        Zusätzliche Optionen für die Anforderung, z. B. den Partitionsschlüssel.
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.replace_1'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Ersetzen Sie das Element der Definition.

    Alle bereitgestellten Typ T, nicht notwendigerweise vom SDK erzwungen wird.

    Erhalten Sie möglicherweise mehr oder weniger Eigenschaften, und es liegt an die Logik, um es zu erzwingen.


    Es gibt keine Set-Schema für JSON-Elemente. Sie können eine beliebige Anzahl von benutzerdefinierten Eigenschaften enthalten.
  syntax:
    content: 'function replace<T>(body: T, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - T
      description: Die Definition zum Ersetzen des vorhandenen <xref:Item>Definition mit.
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        Zusätzliche Optionen für die Anforderung, z. B. den Partitionsschlüssel.
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ItemResponse<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Item.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: Gibt eine Verweis-URL für die Ressource zurück. Zum Verknüpfen von Berechtigungen verwendet.
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ItemResponse<@azure/cosmos.ItemDefinition>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <
    fullName: <
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
  - name: '>>'
    fullName: '>>'
- uid: Promise<@azure/cosmos.ItemResponse<T>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ItemResponse
    fullName: ItemResponse
    uid: '@azure/cosmos.ItemResponse'
  - name: <T>>
    fullName: <T>>
- uid: '@azure/cosmos.ItemDefinition'
  spec.typeScript:
  - name: ItemDefinition
    fullName: ItemDefinition
    uid: '@azure/cosmos.ItemDefinition'
