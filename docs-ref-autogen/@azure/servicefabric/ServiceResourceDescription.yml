### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceResourceDescription'
    name: ServiceResourceDescription
    fullName: ServiceResourceDescription
    children:
      - '@azure/servicefabric.ServiceResourceDescription.autoScalingPolicies'
      - '@azure/servicefabric.ServiceResourceDescription.codePackages'
      - '@azure/servicefabric.ServiceResourceDescription.description'
      - '@azure/servicefabric.ServiceResourceDescription.diagnostics'
      - '@azure/servicefabric.ServiceResourceDescription.healthState'
      - '@azure/servicefabric.ServiceResourceDescription.identityRefs'
      - '@azure/servicefabric.ServiceResourceDescription.name'
      - '@azure/servicefabric.ServiceResourceDescription.networkRefs'
      - '@azure/servicefabric.ServiceResourceDescription.osType'
      - '@azure/servicefabric.ServiceResourceDescription.replicaCount'
      - '@azure/servicefabric.ServiceResourceDescription.status'
      - '@azure/servicefabric.ServiceResourceDescription.statusDetails'
      - '@azure/servicefabric.ServiceResourceDescription.unhealthyEvaluation'
    langs:
      - typeScript
    type: interface
    summary: Dieser Typ beschreibt eine Service-Ressource.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.autoScalingPolicies'
    name: autoScalingPolicies
    fullName: autoScalingPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: Die automatische Skalierung von Richtlinien
    optional: true
    syntax:
      content: 'autoScalingPolicies?: AutoScalingPolicy[]'
      return:
        type:
          - '@azure/servicefabric.AutoScalingPolicy[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.codePackages'
    name: codePackages
    fullName: codePackages
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Beschreibt die Codepakete, die den Dienst bildet. Ein Codepaket beschreibt den Container und die Eigenschaften für die Ausführung an. Alle Codepakete zusammen auf demselben Host gestartet werden, und teilen die gleichen Kontext (Netzwerk, Prozess usw.).'
    syntax:
      content: 'codePackages: ContainerCodePackageProperties[]'
      return:
        type:
          - '@azure/servicefabric.ContainerCodePackageProperties[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.description'
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: Benutzer lesbare Beschreibung des Diensts.
    optional: true
    syntax:
      content: 'description?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.diagnostics'
    name: diagnostics
    fullName: diagnostics
    children: []
    langs:
      - typeScript
    type: property
    summary: Verweis auf die Senken im DiagnosticsDescription.
    optional: true
    syntax:
      content: 'diagnostics?: DiagnosticsRef'
      return:
        type:
          - '@azure/servicefabric.DiagnosticsRef'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.healthState'
    name: healthState
    fullName: healthState
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Beschreibt den Integritätsstatus des Anwendungsressource. Mögliche Werte sind: "Invalid", "Ok", "Warnung", "Error", "Unbekannt" **beachten: Diese Eigenschaft wird nicht serialisiert werden. Es kann nur vom Server aufgefüllt werden.**'
    optional: true
    syntax:
      content: 'healthState?: HealthState'
      return:
        type:
          - '@azure/servicefabric.HealthState'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.identityRefs'
    name: identityRefs
    fullName: identityRefs
    children: []
    langs:
      - typeScript
    type: property
    summary: Die Liste für den Service-Identität.
    optional: true
    syntax:
      content: 'identityRefs?: ServiceIdentity[]'
      return:
        type:
          - '@azure/servicefabric.ServiceIdentity[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: Der Name der Dienstressource.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.networkRefs'
    name: networkRefs
    fullName: networkRefs
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Namen der privaten Netzwerke, denen dieser Dienst Teil sein muss.'
    optional: true
    syntax:
      content: 'networkRefs?: NetworkRef[]'
      return:
        type:
          - '@azure/servicefabric.NetworkRef[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.osType'
    name: osType
    fullName: osType
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Das Betriebssystem, das durch den Code im Dienst erforderlich. Mögliche Werte sind: ''Linux'', ''Windows'''
    syntax:
      content: 'osType: OperatingSystemType'
      return:
        type:
          - '@azure/servicefabric.OperatingSystemType'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.replicaCount'
    name: replicaCount
    fullName: replicaCount
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Anzahl der Replikate des Diensts zu erstellen. Der Standardwert ist 1, wenn nicht angegeben.'
    optional: true
    syntax:
      content: 'replicaCount?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Status des Diensts. Mögliche Werte sind: ''Unknown'', ''Ready'', ''Upgrading'', ''Creating'', ''Deleting'', ''Failed'' **NOTE: Diese Eigenschaft wird nicht serialisiert werden. Es kann nur vom Server aufgefüllt werden.**'
    optional: true
    syntax:
      content: 'status?: ResourceStatus'
      return:
        type:
          - '@azure/servicefabric.ResourceStatus'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.statusDetails'
    name: statusDetails
    fullName: statusDetails
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Erhalten weitere Informationen zu den aktuellen Status des Diensts.
      **HINWEIS: Diese Eigenschaft wird nicht serialisiert werden. Es kann nur vom Server aufgefüllt werden.**
    optional: true
    syntax:
      content: 'statusDetails?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceResourceDescription.unhealthyEvaluation'
    name: unhealthyEvaluation
    fullName: unhealthyEvaluation
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Wenn der Zustand des Diensts Integrität nicht "Ok" ist, diese zusätzliche Details von Service Fabric-Diagnose-Manager für den Benutzer wissen, warum der Dienst "fehlerhaft" markiert ist.
      **HINWEIS: Diese Eigenschaft wird nicht serialisiert werden. Es kann nur vom Server aufgefüllt werden.**
    optional: true
    syntax:
      content: 'unhealthyEvaluation?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.AutoScalingPolicy[]'
    name: 'AutoScalingPolicy[]'
    spec.typeScript:
      - name: AutoScalingPolicy
        fullName: AutoScalingPolicy
        uid: '@azure/servicefabric.AutoScalingPolicy'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ContainerCodePackageProperties[]'
    name: 'ContainerCodePackageProperties[]'
    spec.typeScript:
      - name: ContainerCodePackageProperties
        fullName: ContainerCodePackageProperties
        uid: '@azure/servicefabric.ContainerCodePackageProperties'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.DiagnosticsRef'
    name: DiagnosticsRef
    spec.typeScript:
      - name: DiagnosticsRef
        fullName: DiagnosticsRef
        uid: '@azure/servicefabric.DiagnosticsRef'
  - uid: '@azure/servicefabric.HealthState'
    name: HealthState
    spec.typeScript:
      - name: HealthState
        fullName: HealthState
        uid: '@azure/servicefabric.HealthState'
  - uid: '@azure/servicefabric.ServiceIdentity[]'
    name: 'ServiceIdentity[]'
    spec.typeScript:
      - name: ServiceIdentity
        fullName: ServiceIdentity
        uid: '@azure/servicefabric.ServiceIdentity'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.NetworkRef[]'
    name: 'NetworkRef[]'
    spec.typeScript:
      - name: NetworkRef
        fullName: NetworkRef
        uid: '@azure/servicefabric.NetworkRef'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.OperatingSystemType'
    name: OperatingSystemType
    spec.typeScript:
      - name: OperatingSystemType
        fullName: OperatingSystemType
        uid: '@azure/servicefabric.OperatingSystemType'
  - uid: '@azure/servicefabric.ResourceStatus'
    name: ResourceStatus
    spec.typeScript:
      - name: ResourceStatus
        fullName: ResourceStatus
        uid: '@azure/servicefabric.ResourceStatus'