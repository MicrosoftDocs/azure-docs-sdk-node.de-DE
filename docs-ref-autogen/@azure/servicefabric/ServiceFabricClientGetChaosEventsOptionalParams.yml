### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
    name: ServiceFabricClientGetChaosEventsOptionalParams
    fullName: ServiceFabricClientGetChaosEventsOptionalParams
    children:
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.abortSignal'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.continuationToken'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.customHeaders'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.endTimeUtc'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.maxResults'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.onDownloadProgress'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.onUploadProgress'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.startTimeUtc'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.timeout'
      - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.timeoutParameter'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: RequestOptionsBase
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: Das Signal der Abbruch von Anforderungen verwendet werden kann.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.continuationToken'
    name: continuationToken
    fullName: continuationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'continuationToken?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Object} [CustomHeaders] Benutzerdefinierte benutzerdefinierten-Anforderungsheadern, die angewendet werden, bevor die Anforderung gesendet wird.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.endTimeUtc'
    name: endTimeUtc
    fullName: endTimeUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'endTimeUtc?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.maxResults'
    name: maxResults
    fullName: maxResults
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxResults?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Rückruf, das auf den Fortschritt des Downloads ausgelöst wird.'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Rückruf, das ausgelöst, auf den Fortschritt des Dateiuploads wird.'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.startTimeUtc'
    name: startTimeUtc
    fullName: startTimeUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'startTimeUtc?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Bevor Sie automatisch beendet wird, ist die Anzahl der Millisekunden, die eine Anforderung dauert.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'