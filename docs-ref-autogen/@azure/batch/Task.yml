### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.Task'
    name: Task
    fullName: Task
    children:
      - '@azure/batch.Task.add'
      - '@azure/batch.Task.add_1'
      - '@azure/batch.Task.add_2'
      - '@azure/batch.Task.addCollection'
      - '@azure/batch.Task.addCollection_1'
      - '@azure/batch.Task.addCollection_2'
      - '@azure/batch.Task.deleteMethod'
      - '@azure/batch.Task.deleteMethod_1'
      - '@azure/batch.Task.deleteMethod_2'
      - '@azure/batch.Task.get'
      - '@azure/batch.Task.get_1'
      - '@azure/batch.Task.get_2'
      - '@azure/batch.Task.list'
      - '@azure/batch.Task.list_1'
      - '@azure/batch.Task.list_2'
      - '@azure/batch.Task.listNext'
      - '@azure/batch.Task.listNext_1'
      - '@azure/batch.Task.listNext_2'
      - '@azure/batch.Task.listSubtasks'
      - '@azure/batch.Task.listSubtasks_1'
      - '@azure/batch.Task.listSubtasks_2'
      - '@azure/batch.Task.reactivate'
      - '@azure/batch.Task.reactivate_1'
      - '@azure/batch.Task.reactivate_2'
      - '@azure/batch.Task.constructor'
      - '@azure/batch.Task.terminate'
      - '@azure/batch.Task.terminate_1'
      - '@azure/batch.Task.terminate_2'
      - '@azure/batch.Task.update'
      - '@azure/batch.Task.update_1'
      - '@azure/batch.Task.update_2'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="f7e5f-101">Klasse, die eine Aufgabe darstellt.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-101">Class representing a Task.</span></span>'
    package: '@azure/batch'
  - uid: '@azure/batch.Task.add'
    name: 'add(string, TaskAddParameter, Models.TaskAddOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f7e5f-102">Die maximale Lebensdauer eines Tasks vom hinzufügen bis zum Abschluss beträgt 180 Tage.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-102">The maximum lifetime of a task from addition to completion is 180 days.</span></span> <span data-ttu-id="f7e5f-103">Wenn eine Aufgabe nicht abgeschlossen wurde, innerhalb von 180 Tagen hinzugefügt wird, dass er vom Batch-Dienst und Links wird beendet war in unabhängig von Ihrem Status es zu diesem Zeitpunkt.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-103">If a task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time.</span></span>'
    syntax:
      content: 'function add(jobId: string, task: TaskAddParameter, options?: Models.TaskAddOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-104">Die ID des Auftrags, für die die Aufgabe hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-104">The ID of the job to which the task is to be added.</span></span>'
        - id: task
          type:
            - '@azure/batch.TaskAddParameter'
          description: <span data-ttu-id="f7e5f-105">Die Aufgabe hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-105">The task to be added.</span></span>
        - id: options
          type:
            - Models.TaskAddOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.add_1'
    name: 'add(string, TaskAddParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function add(jobId: string, task: TaskAddParameter, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-106">Die ID des Auftrags, für die die Aufgabe hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-106">The ID of the job to which the task is to be added.</span></span>'
        - id: task
          type:
            - '@azure/batch.TaskAddParameter'
          description: <span data-ttu-id="f7e5f-107">Die Aufgabe hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-107">The task to be added.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-108">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-108">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.add_2'
    name: 'add(string, TaskAddParameter, TaskAddOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function add(jobId: string, task: TaskAddParameter, options: TaskAddOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-109">Die ID des Auftrags, für die die Aufgabe hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-109">The ID of the job to which the task is to be added.</span></span>'
        - id: task
          type:
            - '@azure/batch.TaskAddParameter'
          description: <span data-ttu-id="f7e5f-110">Die Aufgabe hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-110">The task to be added.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskAddOptionalParams'
          description: <span data-ttu-id="f7e5f-111">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-111">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-112">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-112">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.addCollection'
    name: 'addCollection(string, TaskAddParameter[], Models.TaskAddCollectionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f7e5f-113">Beachten Sie, dass jede Aufgabe eine eindeutige ID.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-113">Note that each task must have a unique ID.</span></span> <span data-ttu-id="f7e5f-114">Der Batch-Dienst möglicherweise nicht die Ergebnisse für jede Aufgabe in der gleichen Reihenfolge zurück, die Aufgaben in dieser Anforderung gesendet wurden.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-114">The Batch service may not return the results for each task in the same order the tasks were submitted in this request.</span></span> <span data-ttu-id="f7e5f-115">Wenn der Server ein auftritt Timeout oder die Verbindung, während der Anforderung geschlossen wird, die Anforderung teilweise oder vollständig verarbeitet, das war möglicherweise oder überhaupt nicht.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-115">If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all.</span></span> <span data-ttu-id="f7e5f-116">In solchen Fällen muss der Benutzer die Anforderung erneut senden.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-116">In such cases, the user should re-issue the request.</span></span> <span data-ttu-id="f7e5f-117">Beachten Sie, dass es bis zu dem Benutzer, die Fehler ordnungsgemäß zu behandeln, wenn eine Anforderung erneut gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-117">Note that it is up to the user to correctly handle failures when re-issuing a request.</span></span> <span data-ttu-id="f7e5f-118">Beispielsweise sollten Sie die gleichen Aufgaben-IDs bei einem erneuten Versuch verwenden, damit, dass wenn der vorherige Vorgang erfolgreich war, die Wiederholung nicht unerwartet zusätzliche Aufgaben erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-118">For example, you should use the same task IDs during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</span></span> <span data-ttu-id="f7e5f-119">Wenn die Antwort auf alle Aufgaben, die Fehler beim Hinzufügen enthält, kann ein Client die Anforderung wiederholen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-119">If the response contains any tasks which failed to add, a client can retry the request.</span></span> <span data-ttu-id="f7e5f-120">In einer Wiederholung ist es am effizientesten, nur Aufgaben, die nicht hinzufügen, und klicken Sie, um Aufgaben zu unterdrücken, die beim ersten Versuch erfolgreich hinzugefügt wurden, erneut zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-120">In a retry, it is most efficient to resubmit only tasks that failed to add, and to omit tasks that were successfully added on the first attempt.</span></span> <span data-ttu-id="f7e5f-121">Die maximale Lebensdauer eines Tasks vom hinzufügen bis zum Abschluss beträgt 180 Tage.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-121">The maximum lifetime of a task from addition to completion is 180 days.</span></span> <span data-ttu-id="f7e5f-122">Wenn eine Aufgabe nicht abgeschlossen wurde, innerhalb von 180 Tagen hinzugefügt wird, dass er vom Batch-Dienst und Links wird beendet war in unabhängig von Ihrem Status es zu diesem Zeitpunkt.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-122">If a task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time.</span></span>'
    syntax:
      content: 'function addCollection(jobId: string, value: TaskAddParameter[], options?: Models.TaskAddCollectionOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-123">Die ID des Auftrags, für die die Auflistung der hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-123">The ID of the job to which the task collection is to be added.</span></span>'
        - id: value
          type:
            - '@azure/batch.TaskAddParameter[]'
          description: '<span data-ttu-id="f7e5f-124">Die Auflistung von Aufgaben hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-124">The collection of tasks to add.</span></span> <span data-ttu-id="f7e5f-125">Die maximale Anzahl von Aufgaben ist 100.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-125">The maximum count of tasks is 100.</span></span> <span data-ttu-id="f7e5f-126">Die gesamte serialisierte Größe dieser Auflistung muss weniger als 1 MB sein.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-126">The total serialized size of this collection must be less than 1MB.</span></span> <span data-ttu-id="f7e5f-127">Wenn er ist größer als 1MB (z. B., wenn es sich bei jeder Task 100 Ressourcendateien oder Umgebungsvariablen hat), wird die Anforderung mit Code ''RequestBodyTooLarge'' fehl und mit weniger Aufgaben erneut wiederholt werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-127">If it is greater than 1MB (for example if each task has 100''s of resource files or environment variables), the request will fail with code ''RequestBodyTooLarge'' and should be retried again with fewer tasks.</span></span>'
        - id: options
          type:
            - Models.TaskAddCollectionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskAddCollectionResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.addCollection_1'
    name: 'addCollection(string, TaskAddParameter[], ServiceCallback<TaskAddCollectionResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addCollection(jobId: string, value: TaskAddParameter[], callback: ServiceCallback<TaskAddCollectionResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-128">Die ID des Auftrags, für die die Auflistung der hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-128">The ID of the job to which the task collection is to be added.</span></span>'
        - id: value
          type:
            - '@azure/batch.TaskAddParameter[]'
          description: '<span data-ttu-id="f7e5f-129">Die Auflistung von Aufgaben hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-129">The collection of tasks to add.</span></span> <span data-ttu-id="f7e5f-130">Die maximale Anzahl von Aufgaben ist 100.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-130">The maximum count of tasks is 100.</span></span> <span data-ttu-id="f7e5f-131">Die gesamte serialisierte Größe dieser Auflistung muss weniger als 1 MB sein.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-131">The total serialized size of this collection must be less than 1MB.</span></span> <span data-ttu-id="f7e5f-132">Wenn er ist größer als 1MB (z. B., wenn es sich bei jeder Task 100 Ressourcendateien oder Umgebungsvariablen hat), wird die Anforderung mit Code ''RequestBodyTooLarge'' fehl und mit weniger Aufgaben erneut wiederholt werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-132">If it is greater than 1MB (for example if each task has 100''s of resource files or environment variables), the request will fail with code ''RequestBodyTooLarge'' and should be retried again with fewer tasks.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/batch.TaskAddCollectionResult>
          description: |
            <span data-ttu-id="f7e5f-133">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-133">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskAddCollectionResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.addCollection_2'
    name: 'addCollection(string, TaskAddParameter[], TaskAddCollectionOptionalParams, ServiceCallback<TaskAddCollectionResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addCollection(jobId: string, value: TaskAddParameter[], options: TaskAddCollectionOptionalParams, callback: ServiceCallback<TaskAddCollectionResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-134">Die ID des Auftrags, für die die Auflistung der hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-134">The ID of the job to which the task collection is to be added.</span></span>'
        - id: value
          type:
            - '@azure/batch.TaskAddParameter[]'
          description: '<span data-ttu-id="f7e5f-135">Die Auflistung von Aufgaben hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-135">The collection of tasks to add.</span></span> <span data-ttu-id="f7e5f-136">Die maximale Anzahl von Aufgaben ist 100.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-136">The maximum count of tasks is 100.</span></span> <span data-ttu-id="f7e5f-137">Die gesamte serialisierte Größe dieser Auflistung muss weniger als 1 MB sein.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-137">The total serialized size of this collection must be less than 1MB.</span></span> <span data-ttu-id="f7e5f-138">Wenn er ist größer als 1MB (z. B., wenn es sich bei jeder Task 100 Ressourcendateien oder Umgebungsvariablen hat), wird die Anforderung mit Code ''RequestBodyTooLarge'' fehl und mit weniger Aufgaben erneut wiederholt werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-138">If it is greater than 1MB (for example if each task has 100''s of resource files or environment variables), the request will fail with code ''RequestBodyTooLarge'' and should be retried again with fewer tasks.</span></span>'
        - id: options
          type:
            - '@azure/batch.TaskAddCollectionOptionalParams'
          description: <span data-ttu-id="f7e5f-139">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-139">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.TaskAddCollectionResult>
          description: |
            <span data-ttu-id="f7e5f-140">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-140">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskAddCollectionResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.deleteMethod'
    name: 'deleteMethod(string, string, Models.TaskDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f7e5f-141">Wenn eine Aufgabe gelöscht wird, werden alle Dateien in das Verzeichnis auf dem Computeknoten, in dem er ausgeführt wurde (unabhängig von der Aufbewahrungsdauer) ebenfalls gelöscht.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-141">When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time).</span></span> <span data-ttu-id="f7e5f-142">Für Tasks mit mehreren Instanzen gilt der Löschvorgang für den Task synchron für den primärtask. Unteraufgaben und die Dateien werden asynchron im Hintergrund gelöscht.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-142">For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</span></span>'
    syntax:
      content: 'function deleteMethod(jobId: string, taskId: string, options?: Models.TaskDeleteMethodOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-143">Die ID des Auftrags, aus dem die Aufgabe zu löschen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-143">The ID of the job from which to delete the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-144">Die ID der Aufgabe zu löschen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-144">The ID of the task to delete.</span></span>
        - id: options
          type:
            - Models.TaskDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(jobId: string, taskId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-145">Die ID des Auftrags, aus dem die Aufgabe zu löschen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-145">The ID of the job from which to delete the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-146">Die ID der Aufgabe zu löschen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-146">The ID of the task to delete.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-147">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-147">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.deleteMethod_2'
    name: 'deleteMethod(string, string, TaskDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(jobId: string, taskId: string, options: TaskDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-148">Die ID des Auftrags, aus dem die Aufgabe zu löschen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-148">The ID of the job from which to delete the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-149">Die ID der Aufgabe zu löschen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-149">The ID of the task to delete.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskDeleteMethodOptionalParams'
          description: <span data-ttu-id="f7e5f-150">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-150">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-151">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-151">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.get'
    name: 'get(string, string, Models.TaskGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f7e5f-152">Tasks mit mehreren Instanzen, Informationen wie z. B. Affinitäts-ID, und finden Sie ExecutionInfo NodeInfo für den primärtask.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-152">For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task.</span></span> <span data-ttu-id="f7e5f-153">Verwenden Sie die Liste Unteraufgaben API zum Abrufen von Informationen zu Subtasks.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-153">Use the list subtasks API to retrieve information about subtasks.</span></span>'
    syntax:
      content: 'function get(jobId: string, taskId: string, options?: Models.TaskGetOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-154">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-154">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-155">Die ID der Aufgabe zu dem Informationen abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-155">The ID of the task to get information about.</span></span>
        - id: options
          type:
            - Models.TaskGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.get_1'
    name: 'get(string, string, ServiceCallback<CloudTask>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(jobId: string, taskId: string, callback: ServiceCallback<CloudTask>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-156">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-156">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-157">Die ID der Aufgabe zu dem Informationen abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-157">The ID of the task to get information about.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTask>
          description: |
            <span data-ttu-id="f7e5f-158">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-158">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.get_2'
    name: 'get(string, string, TaskGetOptionalParams, ServiceCallback<CloudTask>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(jobId: string, taskId: string, options: TaskGetOptionalParams, callback: ServiceCallback<CloudTask>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="f7e5f-159">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-159">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-160">Die ID der Aufgabe zu dem Informationen abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-160">The ID of the task to get information about.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskGetOptionalParams'
          description: <span data-ttu-id="f7e5f-161">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-161">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTask>
          description: |
            <span data-ttu-id="f7e5f-162">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-162">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.list'
    name: 'list(string, Models.TaskListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f7e5f-163">Tasks mit mehreren Instanzen, Informationen wie z. B. Affinitäts-ID, und finden Sie ExecutionInfo NodeInfo für den primärtask.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-163">For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task.</span></span> <span data-ttu-id="f7e5f-164">Verwenden Sie die Liste Unteraufgaben API zum Abrufen von Informationen zu Subtasks.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-164">Use the list subtasks API to retrieve information about subtasks.</span></span>'
    syntax:
      content: 'function list(jobId: string, options?: Models.TaskListOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-165">Die ID des Auftrags.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-165">The ID of the job.</span></span>
        - id: options
          type:
            - Models.TaskListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.list_1'
    name: 'list(string, ServiceCallback<CloudTaskListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(jobId: string, callback: ServiceCallback<CloudTaskListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-166">Die ID des Auftrags.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-166">The ID of the job.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListResult>
          description: |
            <span data-ttu-id="f7e5f-167">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-167">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.list_2'
    name: 'list(string, TaskListOptionalParams, ServiceCallback<CloudTaskListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(jobId: string, options: TaskListOptionalParams, callback: ServiceCallback<CloudTaskListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-168">Die ID des Auftrags.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-168">The ID of the job.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskListOptionalParams'
          description: <span data-ttu-id="f7e5f-169">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-169">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListResult>
          description: |
            <span data-ttu-id="f7e5f-170">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-170">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listNext'
    name: 'listNext(string, Models.TaskListNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f7e5f-171">Tasks mit mehreren Instanzen, Informationen wie z. B. Affinitäts-ID, und finden Sie ExecutionInfo NodeInfo für den primärtask.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-171">For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task.</span></span> <span data-ttu-id="f7e5f-172">Verwenden Sie die Liste Unteraufgaben API zum Abrufen von Informationen zu Subtasks.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-172">Use the list subtasks API to retrieve information about subtasks.</span></span>'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Models.TaskListNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="f7e5f-173">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-173">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Models.TaskListNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listNext_1'
    name: 'listNext(string, ServiceCallback<CloudTaskListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<CloudTaskListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="f7e5f-174">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-174">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListResult>
          description: |
            <span data-ttu-id="f7e5f-175">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-175">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listNext_2'
    name: 'listNext(string, TaskListNextOptionalParams, ServiceCallback<CloudTaskListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: TaskListNextOptionalParams, callback: ServiceCallback<CloudTaskListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="f7e5f-176">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-176">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskListNextOptionalParams'
          description: <span data-ttu-id="f7e5f-177">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-177">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListResult>
          description: |
            <span data-ttu-id="f7e5f-178">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-178">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listSubtasks'
    name: 'listSubtasks(string, string, Models.TaskListSubtasksOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f7e5f-179">Wenn der Vorgang nicht auf einen Task mit mehreren Instanzen ist zurück dies eine leere Auflistung.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-179">If the task is not a multi-instance task then this returns an empty collection.</span></span>
    syntax:
      content: 'function listSubtasks(jobId: string, taskId: string, options?: Models.TaskListSubtasksOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-180">Die ID des Auftrags.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-180">The ID of the job.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-181">Die ID der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-181">The ID of the task.</span></span>
        - id: options
          type:
            - Models.TaskListSubtasksOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskListSubtasksResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listSubtasks_1'
    name: 'listSubtasks(string, string, ServiceCallback<CloudTaskListSubtasksResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSubtasks(jobId: string, taskId: string, callback: ServiceCallback<CloudTaskListSubtasksResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-182">Die ID des Auftrags.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-182">The ID of the job.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-183">Die ID der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-183">The ID of the task.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListSubtasksResult>
          description: |
            <span data-ttu-id="f7e5f-184">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-184">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListSubtasksResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listSubtasks_2'
    name: 'listSubtasks(string, string, TaskListSubtasksOptionalParams, ServiceCallback<CloudTaskListSubtasksResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSubtasks(jobId: string, taskId: string, options: TaskListSubtasksOptionalParams, callback: ServiceCallback<CloudTaskListSubtasksResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-185">Die ID des Auftrags.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-185">The ID of the job.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-186">Die ID der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-186">The ID of the task.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskListSubtasksOptionalParams'
          description: <span data-ttu-id="f7e5f-187">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-187">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListSubtasksResult>
          description: |
            <span data-ttu-id="f7e5f-188">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-188">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListSubtasksResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.reactivate'
    name: 'reactivate(string, string, Models.TaskReactivateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f7e5f-189">Eine erneute Aktivierung ist eine Aufgabe berechtigt, bis die maximale Anzahl von Wiederholungsversuchen erneut wiederholt werden.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-189">Reactivation makes a task eligible to be retried again up to its maximum retry count.</span></span> <span data-ttu-id="f7e5f-190">Der Status der Aufgabe wird in aktiv geändert.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-190">The task''s state is changed to active.</span></span> <span data-ttu-id="f7e5f-191">Wie der Vorgang nicht mehr in den Zustand abgeschlossen ist, ist keine vorherigen Informationen von Exit Code oder Fehler nach der Reaktivierung nicht mehr verfügbar.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-191">As the task is no longer in the completed state, any previous exit code or failure information is no longer available after reactivation.</span></span> <span data-ttu-id="f7e5f-192">Jedes Mal, wenn eine Aufgabe erneut aktiviert wird, wird die Anzahl der Wiederholungsversuche auf 0 zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-192">Each time a task is reactivated, its retry count is reset to 0.</span></span> <span data-ttu-id="f7e5f-193">Reaktivierung schlägt fehl, für Aufgaben, die nicht abgeschlossen werden oder bei denen zuvor (mit Exitcode 0) wurde erfolgreich abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-193">Reactivation will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0).</span></span> <span data-ttu-id="f7e5f-194">Darüber hinaus schlägt es fehl, wenn der Auftrag abgeschlossen wurde (oder beenden oder löschen).</span><span class="sxs-lookup"><span data-stu-id="f7e5f-194">Additionally, it will fail if the job has completed (or is terminating or deleting).</span></span>'
    syntax:
      content: 'function reactivate(jobId: string, taskId: string, options?: Models.TaskReactivateOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-195">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-195">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-196">Die ID der Aufgabe erneut aktivieren.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-196">The ID of the task to reactivate.</span></span>
        - id: options
          type:
            - Models.TaskReactivateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskReactivateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.reactivate_1'
    name: 'reactivate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reactivate(jobId: string, taskId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-197">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-197">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-198">Die ID der Aufgabe erneut aktivieren.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-198">The ID of the task to reactivate.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-199">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-199">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskReactivateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.reactivate_2'
    name: 'reactivate(string, string, TaskReactivateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reactivate(jobId: string, taskId: string, options: TaskReactivateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-200">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-200">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-201">Die ID der Aufgabe erneut aktivieren.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-201">The ID of the task to reactivate.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskReactivateOptionalParams'
          description: <span data-ttu-id="f7e5f-202">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-202">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-203">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-203">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskReactivateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.constructor'
    name: Task(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="f7e5f-204">Erstellen einer Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-204">Create a Task.</span></span>
    syntax:
      content: 'new Task(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            <span data-ttu-id="f7e5f-205">Verweis auf den Dienstclient.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-205">Reference to the service client.</span></span>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.terminate'
    name: 'terminate(string, string, Models.TaskTerminateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f7e5f-206">Wenn die Aufgabe beendet wurde, wird es in den abgeschlossenen Zustand verschoben.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-206">When the task has been terminated, it moves to the completed state.</span></span> <span data-ttu-id="f7e5f-207">Für Tasks mit mehreren Instanzen gilt der Vorgang "Beenden" Task synchron für den primärtask. Unteraufgaben werden dann asynchron im Hintergrund beendet.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-207">For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</span></span>'
    syntax:
      content: 'function terminate(jobId: string, taskId: string, options?: Models.TaskTerminateOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-208">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-208">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-209">Die ID des Tasks beendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-209">The ID of the task to terminate.</span></span>
        - id: options
          type:
            - Models.TaskTerminateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.terminate_1'
    name: 'terminate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function terminate(jobId: string, taskId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-210">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-210">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-211">Die ID des Tasks beendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-211">The ID of the task to terminate.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-212">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-212">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.terminate_2'
    name: 'terminate(string, string, TaskTerminateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function terminate(jobId: string, taskId: string, options: TaskTerminateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-213">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-213">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-214">Die ID des Tasks beendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-214">The ID of the task to terminate.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskTerminateOptionalParams'
          description: <span data-ttu-id="f7e5f-215">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-215">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-216">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-216">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.update'
    name: 'update(string, string, Models.TaskUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f7e5f-217">Aktualisiert die Eigenschaften der angegebenen Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-217">Updates the properties of the specified task.</span></span>
    syntax:
      content: 'function update(jobId: string, taskId: string, options?: Models.TaskUpdateOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-218">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-218">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-219">Die ID des Tasks zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-219">The ID of the task to update.</span></span>
        - id: options
          type:
            - Models.TaskUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskUpdateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(jobId: string, taskId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-220">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-220">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-221">Die ID des Tasks zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-221">The ID of the task to update.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-222">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-222">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskUpdateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.update_2'
    name: 'update(string, string, TaskUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(jobId: string, taskId: string, options: TaskUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="f7e5f-223">Die ID des Auftrags mit der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-223">The ID of the job containing the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="f7e5f-224">Die ID des Tasks zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="f7e5f-224">The ID of the task to update.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskUpdateOptionalParams'
          description: <span data-ttu-id="f7e5f-225">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="f7e5f-225">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f7e5f-226">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="f7e5f-226">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskUpdateResponse>
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.TaskAddParameter'
    name: TaskAddParameter
    spec.typeScript:
      - name: TaskAddParameter
        fullName: TaskAddParameter
        uid: '@azure/batch.TaskAddParameter'
  - uid: '@azure/batch.TaskAddOptionalParams'
    name: TaskAddOptionalParams
    spec.typeScript:
      - name: TaskAddOptionalParams
        fullName: TaskAddOptionalParams
        uid: '@azure/batch.TaskAddOptionalParams'
  - uid: '@azure/batch.TaskAddParameter[]'
    name: 'TaskAddParameter[]'
    spec.typeScript:
      - name: TaskAddParameter
        fullName: TaskAddParameter
        uid: '@azure/batch.TaskAddParameter'
      - name: '[]'
        fullName: '[]'
  - uid: ServiceCallback<@azure/batch.TaskAddCollectionResult>
    name: TaskAddCollectionResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TaskAddCollectionResult
        fullName: TaskAddCollectionResult
        uid: '@azure/batch.TaskAddCollectionResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.TaskAddCollectionOptionalParams'
    name: TaskAddCollectionOptionalParams
    spec.typeScript:
      - name: TaskAddCollectionOptionalParams
        fullName: TaskAddCollectionOptionalParams
        uid: '@azure/batch.TaskAddCollectionOptionalParams'
  - uid: '@azure/batch.TaskDeleteMethodOptionalParams'
    name: TaskDeleteMethodOptionalParams
    spec.typeScript:
      - name: TaskDeleteMethodOptionalParams
        fullName: TaskDeleteMethodOptionalParams
        uid: '@azure/batch.TaskDeleteMethodOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudTask>
    name: CloudTask>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudTask
        fullName: CloudTask
        uid: '@azure/batch.CloudTask'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.TaskGetOptionalParams'
    name: TaskGetOptionalParams
    spec.typeScript:
      - name: TaskGetOptionalParams
        fullName: TaskGetOptionalParams
        uid: '@azure/batch.TaskGetOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudTaskListResult>
    name: CloudTaskListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudTaskListResult
        fullName: CloudTaskListResult
        uid: '@azure/batch.CloudTaskListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.TaskListOptionalParams'
    name: TaskListOptionalParams
    spec.typeScript:
      - name: TaskListOptionalParams
        fullName: TaskListOptionalParams
        uid: '@azure/batch.TaskListOptionalParams'
  - uid: '@azure/batch.TaskListNextOptionalParams'
    name: TaskListNextOptionalParams
    spec.typeScript:
      - name: TaskListNextOptionalParams
        fullName: TaskListNextOptionalParams
        uid: '@azure/batch.TaskListNextOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudTaskListSubtasksResult>
    name: CloudTaskListSubtasksResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudTaskListSubtasksResult
        fullName: CloudTaskListSubtasksResult
        uid: '@azure/batch.CloudTaskListSubtasksResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.TaskListSubtasksOptionalParams'
    name: TaskListSubtasksOptionalParams
    spec.typeScript:
      - name: TaskListSubtasksOptionalParams
        fullName: TaskListSubtasksOptionalParams
        uid: '@azure/batch.TaskListSubtasksOptionalParams'
  - uid: '@azure/batch.TaskReactivateOptionalParams'
    name: TaskReactivateOptionalParams
    spec.typeScript:
      - name: TaskReactivateOptionalParams
        fullName: TaskReactivateOptionalParams
        uid: '@azure/batch.TaskReactivateOptionalParams'
  - uid: '@azure/batch.TaskTerminateOptionalParams'
    name: TaskTerminateOptionalParams
    spec.typeScript:
      - name: TaskTerminateOptionalParams
        fullName: TaskTerminateOptionalParams
        uid: '@azure/batch.TaskTerminateOptionalParams'
  - uid: '@azure/batch.TaskUpdateOptionalParams'
    name: TaskUpdateOptionalParams
    spec.typeScript:
      - name: TaskUpdateOptionalParams
        fullName: TaskUpdateOptionalParams
        uid: '@azure/batch.TaskUpdateOptionalParams'