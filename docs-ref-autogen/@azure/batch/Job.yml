### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.Job'
    name: Job
    fullName: Job
    children:
      - '@azure/batch.Job.add_2'
      - '@azure/batch.Job.add'
      - '@azure/batch.Job.add_1'
      - '@azure/batch.Job.deleteMethod_2'
      - '@azure/batch.Job.deleteMethod'
      - '@azure/batch.Job.deleteMethod_1'
      - '@azure/batch.Job.disable_2'
      - '@azure/batch.Job.disable'
      - '@azure/batch.Job.disable_1'
      - '@azure/batch.Job.enable_2'
      - '@azure/batch.Job.enable'
      - '@azure/batch.Job.enable_1'
      - '@azure/batch.Job.get_2'
      - '@azure/batch.Job.get'
      - '@azure/batch.Job.get_1'
      - '@azure/batch.Job.getAllLifetimeStatistics_2'
      - '@azure/batch.Job.getAllLifetimeStatistics'
      - '@azure/batch.Job.getAllLifetimeStatistics_1'
      - '@azure/batch.Job.getTaskCounts_2'
      - '@azure/batch.Job.getTaskCounts'
      - '@azure/batch.Job.getTaskCounts_1'
      - '@azure/batch.Job.constructor'
      - '@azure/batch.Job.list_2'
      - '@azure/batch.Job.list'
      - '@azure/batch.Job.list_1'
      - '@azure/batch.Job.listFromJobSchedule_2'
      - '@azure/batch.Job.listFromJobSchedule'
      - '@azure/batch.Job.listFromJobSchedule_1'
      - '@azure/batch.Job.listFromJobScheduleNext_2'
      - '@azure/batch.Job.listFromJobScheduleNext'
      - '@azure/batch.Job.listFromJobScheduleNext_1'
      - '@azure/batch.Job.listNext_2'
      - '@azure/batch.Job.listNext'
      - '@azure/batch.Job.listNext_1'
      - '@azure/batch.Job.listPreparationAndReleaseTaskStatus_2'
      - '@azure/batch.Job.listPreparationAndReleaseTaskStatus'
      - '@azure/batch.Job.listPreparationAndReleaseTaskStatus_1'
      - '@azure/batch.Job.listPreparationAndReleaseTaskStatusNext_2'
      - '@azure/batch.Job.listPreparationAndReleaseTaskStatusNext'
      - '@azure/batch.Job.listPreparationAndReleaseTaskStatusNext_1'
      - '@azure/batch.Job.patch_2'
      - '@azure/batch.Job.patch'
      - '@azure/batch.Job.patch_1'
      - '@azure/batch.Job.terminate_2'
      - '@azure/batch.Job.terminate'
      - '@azure/batch.Job.terminate_1'
      - '@azure/batch.Job.update_2'
      - '@azure/batch.Job.update'
      - '@azure/batch.Job.update_1'
    langs:
      - typeScript
    type: class
    summary: 'Klasse, die einen Auftrag darstellt.'
    package: '@azure/batch'
  - uid: '@azure/batch.Job.add_2'
    name: 'add(JobAddParameter, JobAddOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function add(job: JobAddParameter, options: JobAddOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: job
          type:
            - '@azure/batch.JobAddParameter'
          description: Der Auftrag hinzugefügt werden.
        - id: options
          type:
            - '@azure/batch.JobAddOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.add'
    name: 'add(JobAddParameter, Models.JobAddOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Der Batch-Dienst unterstützt zwei Arten zum Steuern der Arbeit, die als Teil des Auftrags. In der ersten Methode gibt den Benutzer eine Auftrags-Manager-Aufgabe. Der Batch-Dienst startet diese Aufgabe aus, wenn sie bereit zum Starten des Auftrags ist. Die Auftrags-Manager-Aufgabe steuert alle anderen Aufgaben, die unter diesen Auftrag ausgeführt werden soll, mithilfe der Task-APIs. In der zweiten Methode steuert der Benutzer die Ausführung von Aufgaben unter einem aktiven Auftrag, direkt über die Task-APIs. Beachten Sie außerdem: bei der Benennung von Aufträgen zu vermeiden, darunter vertrauliche Daten wie Benutzernamen oder den geheimen Projektnamen. Diese Informationen möglicherweise im telemetrieprotokollen zugegriffen werden kann, um Microsoft-Support-Techniker angezeigt.'
    syntax:
      content: 'function add(job: JobAddParameter, options?: Models.JobAddOptionalParams)'
      parameters:
        - id: job
          type:
            - '@azure/batch.JobAddParameter'
          description: Der Auftrag hinzugefügt werden.
        - id: options
          type:
            - Models.JobAddOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.add_1'
    name: 'add(JobAddParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function add(job: JobAddParameter, callback: ServiceCallback<void>)'
      parameters:
        - id: job
          type:
            - '@azure/batch.JobAddParameter'
          description: Der Auftrag hinzugefügt werden.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.deleteMethod_2'
    name: 'deleteMethod(string, JobDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(jobId: string, options: JobDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu löschen.
        - id: options
          type:
            - '@azure/batch.JobDeleteMethodOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.deleteMethod'
    name: 'deleteMethod(string, Models.JobDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Löschen eines Auftrags werden auch alle Aufgaben, die Teil dieses Auftrags sind, und alle Auftragsstatistik gelöscht. Dies überschreibt auch die Beibehaltungsdauer für den Task-Daten ist. d. h., wenn der Auftrag Aufgaben enthält, die weiterhin auf Compute-Knoten erhalten bleiben sollen, die Batch-Dienste löscht Arbeitsverzeichnisse für diese Aufgaben und alle ihre Inhalte.  Wenn eine Auftrag löschen-Anforderung empfangen wird, wird der Batch-Dienst der Auftrag in den Zustand wird gelöscht. Alle Update-Vorgänge für einen Auftrag, der gelöscht wird schlägt mit Statuscode 409 (Konflikt) fehl, mit zusätzlichen Informationen, der angibt, dass der Auftrag gelöscht wird.'
    syntax:
      content: 'function deleteMethod(jobId: string, options?: Models.JobDeleteMethodOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu löschen.
        - id: options
          type:
            - Models.JobDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(jobId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu löschen.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.disable_2'
    name: 'disable(string, Models.DisableJobOption, JobDisableOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disable(jobId: string, disableTasks: Models.DisableJobOption, options: JobDisableOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu deaktivieren.
        - id: disableTasks
          type:
            - Models.DisableJobOption
          description: 'Vorgehensweise mit aktiven Tasks, die dem Auftrag zugeordnet. Folgende Werte sind möglich: "der wiedereinreihungen in Warteschlange", "terminate", "wait"'
        - id: options
          type:
            - '@azure/batch.JobDisableOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobDisableResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.disable'
    name: 'disable(string, Models.DisableJobOption, Models.JobDisableOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Der Batch-Dienst verschiebt den Auftrag sofort auf den deaktivierten Zustand befinden. Batch verwendet dann den DisableTasks-Parameter, um zu bestimmen, was Sie mit der aktuell ausgeführten Tasks des Auftrags. Der Auftrag verbleibt im Zustand "deaktiviert", bis der Deaktivierungsvorgang abgeschlossen ist, und alle Aufgaben gemäß der Option DisableTasks behandelt wurde müssen; der Auftrag wird dann in den deaktivierten Status verschoben.
      Keine neuen Vorgänge werden unter dem Auftrag gestartet, bis es wieder zu Zustand "aktiv" wechselt. Wenn Sie versuchen, einen Auftrag zu deaktivieren, der in einem anderen Status als aktiv ist, schlägt fehl, deaktivieren oder deaktiviert die Anforderung mit Statuscode 409.
    syntax:
      content: 'function disable(jobId: string, disableTasks: Models.DisableJobOption, options?: Models.JobDisableOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu deaktivieren.
        - id: disableTasks
          type:
            - Models.DisableJobOption
          description: 'Vorgehensweise mit aktiven Tasks, die dem Auftrag zugeordnet. Folgende Werte sind möglich: "der wiedereinreihungen in Warteschlange", "terminate", "wait"'
        - id: options
          type:
            - Models.JobDisableOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobDisableResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.disable_1'
    name: 'disable(string, Models.DisableJobOption, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disable(jobId: string, disableTasks: Models.DisableJobOption, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu deaktivieren.
        - id: disableTasks
          type:
            - Models.DisableJobOption
          description: 'Vorgehensweise mit aktiven Tasks, die dem Auftrag zugeordnet. Folgende Werte sind möglich: "der wiedereinreihungen in Warteschlange", "terminate", "wait"'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobDisableResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.enable_2'
    name: 'enable(string, JobEnableOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enable(jobId: string, options: JobEnableOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu aktivieren.
        - id: options
          type:
            - '@azure/batch.JobEnableOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobEnableResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.enable'
    name: 'enable(string, Models.JobEnableOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Wenn Sie diese API aufrufen, legt der Batch-Dienst ein deaktiviertes Auftrags in den Zustand zu aktivieren. Nachdem dieser Vorgang abgeschlossen ist, geht der Auftrag in den aktiven Status und die Planung neuer Aufgaben unter dem Auftrag Lebensläufen. Der Batch-Dienst lässt sich nicht auf eine Aufgabe im Zustand aktiv bleiben, mehr als 180 Tage lang aus. Aus diesem Grund werden durch Aktivieren ein Auftrags mit der aktiven Aufgaben, die vor mehr als 180 Tagen hinzugefügt wurden, diese Aufgaben nicht ausgeführt.'
    syntax:
      content: 'function enable(jobId: string, options?: Models.JobEnableOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu aktivieren.
        - id: options
          type:
            - Models.JobEnableOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobEnableResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.enable_1'
    name: 'enable(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enable(jobId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags zu aktivieren.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobEnableResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.get_2'
    name: 'get(string, JobGetOptionalParams, ServiceCallback<CloudJob>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(jobId: string, options: JobGetOptionalParams, callback: ServiceCallback<CloudJob>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: options
          type:
            - '@azure/batch.JobGetOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJob>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.get'
    name: 'get(string, Models.JobGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(jobId: string, options?: Models.JobGetOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: options
          type:
            - Models.JobGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.get_1'
    name: 'get(string, ServiceCallback<CloudJob>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(jobId: string, callback: ServiceCallback<CloudJob>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJob>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.getAllLifetimeStatistics_2'
    name: 'getAllLifetimeStatistics(JobGetAllLifetimeStatisticsOptionalParams, ServiceCallback<JobStatistics>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllLifetimeStatistics(options: JobGetAllLifetimeStatisticsOptionalParams, callback: ServiceCallback<JobStatistics>)'
      parameters:
        - id: options
          type:
            - '@azure/batch.JobGetAllLifetimeStatisticsOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.JobStatistics>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobGetAllLifetimeStatisticsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.getAllLifetimeStatistics'
    name: getAllLifetimeStatistics(Models.JobGetAllLifetimeStatisticsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Statistiken werden in allen Aufträgen aggregiert, die jemals im Konto aus der Erstellung des Kontos bis zum letzten Zeitpunkt der Aktualisierung der Statistiken vorhanden sind. Die Statistiken möglicherweise nicht sofort verfügbar. Der Batch-Dienst führt regelmäßig Rollup der Statistiken. Die typische Verzögerung ist ungefähr 30 Minuten.'
    syntax:
      content: 'function getAllLifetimeStatistics(options?: Models.JobGetAllLifetimeStatisticsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.JobGetAllLifetimeStatisticsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobGetAllLifetimeStatisticsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.getAllLifetimeStatistics_1'
    name: getAllLifetimeStatistics(ServiceCallback<JobStatistics>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllLifetimeStatistics(callback: ServiceCallback<JobStatistics>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/batch.JobStatistics>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobGetAllLifetimeStatisticsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.getTaskCounts_2'
    name: 'getTaskCounts(string, JobGetTaskCountsOptionalParams, ServiceCallback<TaskCounts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTaskCounts(jobId: string, options: JobGetTaskCountsOptionalParams, callback: ServiceCallback<TaskCounts>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: options
          type:
            - '@azure/batch.JobGetTaskCountsOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.TaskCounts>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobGetTaskCountsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.getTaskCounts'
    name: 'getTaskCounts(string, Models.JobGetTaskCountsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Taskanzahl bieten eine Anzahl von Aufgaben nach Zustand des aktiven, ausgeführten oder abgeschlossenen Aufgabe und eine Anzahl von Aufgaben, die erfolgreich oder fehlerhaft war. Aufgaben im Zustand "vorbereitet" werden als Ausführung gezählt.'
    syntax:
      content: 'function getTaskCounts(jobId: string, options?: Models.JobGetTaskCountsOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: options
          type:
            - Models.JobGetTaskCountsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobGetTaskCountsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.getTaskCounts_1'
    name: 'getTaskCounts(string, ServiceCallback<TaskCounts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTaskCounts(jobId: string, callback: ServiceCallback<TaskCounts>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.TaskCounts>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobGetTaskCountsResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.constructor'
    name: Job(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Erstellen eines Auftrags.
    syntax:
      content: 'new Job(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            Verweis auf den Dienstclient.
    package: '@azure/batch'
  - uid: '@azure/batch.Job.list_2'
    name: 'list(JobListOptionalParams, ServiceCallback<CloudJobListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: JobListOptionalParams, callback: ServiceCallback<CloudJobListResult>)'
      parameters:
        - id: options
          type:
            - '@azure/batch.JobListOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.list'
    name: list(Models.JobListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options?: Models.JobListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.JobListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.list_1'
    name: list(ServiceCallback<CloudJobListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<CloudJobListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listFromJobSchedule_2'
    name: 'listFromJobSchedule(string, JobListFromJobScheduleOptionalParams, ServiceCallback<CloudJobListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromJobSchedule(jobScheduleId: string, options: JobListFromJobScheduleOptionalParams, callback: ServiceCallback<CloudJobListResult>)'
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: Die ID des Auftragszeitplans aus dem Sie eine Liste der Aufträge abrufen möchten.
        - id: options
          type:
            - '@azure/batch.JobListFromJobScheduleOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListFromJobScheduleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listFromJobSchedule'
    name: 'listFromJobSchedule(string, Models.JobListFromJobScheduleOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromJobSchedule(jobScheduleId: string, options?: Models.JobListFromJobScheduleOptionalParams)'
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: Die ID des Auftragszeitplans aus dem Sie eine Liste der Aufträge abrufen möchten.
        - id: options
          type:
            - Models.JobListFromJobScheduleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobListFromJobScheduleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listFromJobSchedule_1'
    name: 'listFromJobSchedule(string, ServiceCallback<CloudJobListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromJobSchedule(jobScheduleId: string, callback: ServiceCallback<CloudJobListResult>)'
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: Die ID des Auftragszeitplans aus dem Sie eine Liste der Aufträge abrufen möchten.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListFromJobScheduleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listFromJobScheduleNext_2'
    name: 'listFromJobScheduleNext(string, JobListFromJobScheduleNextOptionalParams, ServiceCallback<CloudJobListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromJobScheduleNext(nextPageLink: string, options: JobListFromJobScheduleNextOptionalParams, callback: ServiceCallback<CloudJobListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - '@azure/batch.JobListFromJobScheduleNextOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListFromJobScheduleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listFromJobScheduleNext'
    name: 'listFromJobScheduleNext(string, Models.JobListFromJobScheduleNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromJobScheduleNext(nextPageLink: string, options?: Models.JobListFromJobScheduleNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - Models.JobListFromJobScheduleNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobListFromJobScheduleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listFromJobScheduleNext_1'
    name: 'listFromJobScheduleNext(string, ServiceCallback<CloudJobListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromJobScheduleNext(nextPageLink: string, callback: ServiceCallback<CloudJobListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListFromJobScheduleResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listNext_2'
    name: 'listNext(string, JobListNextOptionalParams, ServiceCallback<CloudJobListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: JobListNextOptionalParams, callback: ServiceCallback<CloudJobListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - '@azure/batch.JobListNextOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listNext'
    name: 'listNext(string, Models.JobListNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Models.JobListNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - Models.JobListNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listNext_1'
    name: 'listNext(string, ServiceCallback<CloudJobListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<CloudJobListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listPreparationAndReleaseTaskStatus_2'
    name: 'listPreparationAndReleaseTaskStatus(string, JobListPreparationAndReleaseTaskStatusOptionalParams, ServiceCallback<CloudJobListPreparationAndReleaseTaskStatusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listPreparationAndReleaseTaskStatus(jobId: string, options: JobListPreparationAndReleaseTaskStatusOptionalParams, callback: ServiceCallback<CloudJobListPreparationAndReleaseTaskStatusResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: options
          type:
            - '@azure/batch.JobListPreparationAndReleaseTaskStatusOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListPreparationAndReleaseTaskStatusResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListPreparationAndReleaseTaskStatusResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listPreparationAndReleaseTaskStatus'
    name: 'listPreparationAndReleaseTaskStatus(string, Models.JobListPreparationAndReleaseTaskStatusOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Diese API gibt den Status der Aufgabe zur Auftragsvorbereitung und Auftragsfreigabe auf allen Computeknoten, die die Auftragsvorbereitung oder Auftragsfreigabe Aufgabe ausgeführt haben. Dies schließt die Knoten, die seit aus dem Pool entfernt wurden. Wenn diese API für einen Auftrag mit keine Auftragsvorbereitung oder Auftragsfreigabe Aufgabe aufgerufen wird, gibt der Batch-Dienst die HTTP-Statuscode 409 (Konflikt) zurück, mit einem Fehlercode von JobPreparationTaskNotSpecified.'
    syntax:
      content: 'function listPreparationAndReleaseTaskStatus(jobId: string, options?: Models.JobListPreparationAndReleaseTaskStatusOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: options
          type:
            - Models.JobListPreparationAndReleaseTaskStatusOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobListPreparationAndReleaseTaskStatusResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listPreparationAndReleaseTaskStatus_1'
    name: 'listPreparationAndReleaseTaskStatus(string, ServiceCallback<CloudJobListPreparationAndReleaseTaskStatusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listPreparationAndReleaseTaskStatus(jobId: string, callback: ServiceCallback<CloudJobListPreparationAndReleaseTaskStatusResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListPreparationAndReleaseTaskStatusResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListPreparationAndReleaseTaskStatusResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listPreparationAndReleaseTaskStatusNext_2'
    name: 'listPreparationAndReleaseTaskStatusNext(string, JobListPreparationAndReleaseTaskStatusNextOptionalParams, ServiceCallback<CloudJobListPreparationAndReleaseTaskStatusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listPreparationAndReleaseTaskStatusNext(nextPageLink: string, options: JobListPreparationAndReleaseTaskStatusNextOptionalParams, callback: ServiceCallback<CloudJobListPreparationAndReleaseTaskStatusResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - '@azure/batch.JobListPreparationAndReleaseTaskStatusNextOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListPreparationAndReleaseTaskStatusResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListPreparationAndReleaseTaskStatusResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listPreparationAndReleaseTaskStatusNext'
    name: 'listPreparationAndReleaseTaskStatusNext(string, Models.JobListPreparationAndReleaseTaskStatusNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Diese API gibt den Status der Aufgabe zur Auftragsvorbereitung und Auftragsfreigabe auf allen Computeknoten, die die Auftragsvorbereitung oder Auftragsfreigabe Aufgabe ausgeführt haben. Dies schließt die Knoten, die seit aus dem Pool entfernt wurden. Wenn diese API für einen Auftrag mit keine Auftragsvorbereitung oder Auftragsfreigabe Aufgabe aufgerufen wird, gibt der Batch-Dienst die HTTP-Statuscode 409 (Konflikt) zurück, mit einem Fehlercode von JobPreparationTaskNotSpecified.'
    syntax:
      content: 'function listPreparationAndReleaseTaskStatusNext(nextPageLink: string, options?: Models.JobListPreparationAndReleaseTaskStatusNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - Models.JobListPreparationAndReleaseTaskStatusNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobListPreparationAndReleaseTaskStatusResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.listPreparationAndReleaseTaskStatusNext_1'
    name: 'listPreparationAndReleaseTaskStatusNext(string, ServiceCallback<CloudJobListPreparationAndReleaseTaskStatusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listPreparationAndReleaseTaskStatusNext(nextPageLink: string, callback: ServiceCallback<CloudJobListPreparationAndReleaseTaskStatusResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudJobListPreparationAndReleaseTaskStatusResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobListPreparationAndReleaseTaskStatusResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.patch_2'
    name: 'patch(string, JobPatchParameter, JobPatchOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function patch(jobId: string, jobPatchParameter: JobPatchParameter, options: JobPatchOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: 'Die ID des Auftrags, dessen Eigenschaften Sie aktualisieren möchten.'
        - id: jobPatchParameter
          type:
            - '@azure/batch.JobPatchParameter'
          description: Die Parameter für die Anforderung.
        - id: options
          type:
            - '@azure/batch.JobPatchOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobPatchResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.patch'
    name: 'patch(string, JobPatchParameter, Models.JobPatchOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Dies ersetzt nur die Auftragseigenschaften, die in der Anforderung angegeben. Beispielsweise behält Wenn weist Einschränkungen auf der Auftrag und eine Anforderung keine Einschränkungen-Element gibt, klicken Sie dann der Auftrag die vorhandenen Einschränkungen.'
    syntax:
      content: 'function patch(jobId: string, jobPatchParameter: JobPatchParameter, options?: Models.JobPatchOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: 'Die ID des Auftrags, dessen Eigenschaften Sie aktualisieren möchten.'
        - id: jobPatchParameter
          type:
            - '@azure/batch.JobPatchParameter'
          description: Die Parameter für die Anforderung.
        - id: options
          type:
            - Models.JobPatchOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobPatchResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.patch_1'
    name: 'patch(string, JobPatchParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function patch(jobId: string, jobPatchParameter: JobPatchParameter, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: 'Die ID des Auftrags, dessen Eigenschaften Sie aktualisieren möchten.'
        - id: jobPatchParameter
          type:
            - '@azure/batch.JobPatchParameter'
          description: Die Parameter für die Anforderung.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobPatchResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.terminate_2'
    name: 'terminate(string, JobTerminateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function terminate(jobId: string, options: JobTerminateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags beendet werden soll.
        - id: options
          type:
            - '@azure/batch.JobTerminateOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.terminate'
    name: 'terminate(string, Models.JobTerminateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Wenn eine Anforderung Beenden eines Auftrags empfangen wird, legt der Batch-Dienst den Auftrag in den abschließenden Zustand fest. Der Batch-Dienst dann beendet alle ausgeführten Tasks, die dem Auftrag zugeordnet und führt alle erforderlichen Auftrag releasetasks. Klicken Sie dann verschiebt den Auftrag in den Status "abgeschlossen" ein. Wenn im aktiven Zustand Aufgaben im Auftrag vorhanden sind, bleiben sie im aktiven Zustand. Nachdem ein Auftrag beendet wird, neue Aufgaben können nicht hinzugefügt werden, sodass alle verbleibenden aktiven Aufgaben nicht geplant werden.'
    syntax:
      content: 'function terminate(jobId: string, options?: Models.JobTerminateOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags beendet werden soll.
        - id: options
          type:
            - Models.JobTerminateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.terminate_1'
    name: 'terminate(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function terminate(jobId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: Die ID des Auftrags beendet werden soll.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.update_2'
    name: 'update(string, JobUpdateParameter, JobUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(jobId: string, jobUpdateParameter: JobUpdateParameter, options: JobUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: 'Die ID des Auftrags, dessen Eigenschaften Sie aktualisieren möchten.'
        - id: jobUpdateParameter
          type:
            - '@azure/batch.JobUpdateParameter'
          description: Die Parameter für die Anforderung.
        - id: options
          type:
            - '@azure/batch.JobUpdateOptionalParams'
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobUpdateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.update'
    name: 'update(string, JobUpdateParameter, Models.JobUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Dadurch wird vollständig ersetzt alle aktualisierbaren Eigenschaften des Auftrags. Z. B. entfernt Wenn der Auftrags-Einschränkungen zugeordnet und Einschränkungen bei dieser Anforderung nicht angegeben ist, klicken Sie dann der Batch-Dienst die vorhandenen Einschränkungen.'
    syntax:
      content: 'function update(jobId: string, jobUpdateParameter: JobUpdateParameter, options?: Models.JobUpdateOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: 'Die ID des Auftrags, dessen Eigenschaften Sie aktualisieren möchten.'
        - id: jobUpdateParameter
          type:
            - '@azure/batch.JobUpdateParameter'
          description: Die Parameter für die Anforderung.
        - id: options
          type:
            - Models.JobUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.JobUpdateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Job.update_1'
    name: 'update(string, JobUpdateParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(jobId: string, jobUpdateParameter: JobUpdateParameter, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: 'Die ID des Auftrags, dessen Eigenschaften Sie aktualisieren möchten.'
        - id: jobUpdateParameter
          type:
            - '@azure/batch.JobUpdateParameter'
          description: Die Parameter für die Anforderung.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.JobUpdateResponse>
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.JobAddParameter'
    name: JobAddParameter
    spec.typeScript:
      - name: JobAddParameter
        fullName: JobAddParameter
        uid: '@azure/batch.JobAddParameter'
  - uid: '@azure/batch.JobAddOptionalParams'
    name: JobAddOptionalParams
    spec.typeScript:
      - name: JobAddOptionalParams
        fullName: JobAddOptionalParams
        uid: '@azure/batch.JobAddOptionalParams'
  - uid: '@azure/batch.JobDeleteMethodOptionalParams'
    name: JobDeleteMethodOptionalParams
    spec.typeScript:
      - name: JobDeleteMethodOptionalParams
        fullName: JobDeleteMethodOptionalParams
        uid: '@azure/batch.JobDeleteMethodOptionalParams'
  - uid: '@azure/batch.JobDisableOptionalParams'
    name: JobDisableOptionalParams
    spec.typeScript:
      - name: JobDisableOptionalParams
        fullName: JobDisableOptionalParams
        uid: '@azure/batch.JobDisableOptionalParams'
  - uid: '@azure/batch.JobEnableOptionalParams'
    name: JobEnableOptionalParams
    spec.typeScript:
      - name: JobEnableOptionalParams
        fullName: JobEnableOptionalParams
        uid: '@azure/batch.JobEnableOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudJob>
    name: CloudJob>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudJob
        fullName: CloudJob
        uid: '@azure/batch.CloudJob'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.JobGetOptionalParams'
    name: JobGetOptionalParams
    spec.typeScript:
      - name: JobGetOptionalParams
        fullName: JobGetOptionalParams
        uid: '@azure/batch.JobGetOptionalParams'
  - uid: ServiceCallback<@azure/batch.JobStatistics>
    name: JobStatistics>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: JobStatistics
        fullName: JobStatistics
        uid: '@azure/batch.JobStatistics'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.JobGetAllLifetimeStatisticsOptionalParams'
    name: JobGetAllLifetimeStatisticsOptionalParams
    spec.typeScript:
      - name: JobGetAllLifetimeStatisticsOptionalParams
        fullName: JobGetAllLifetimeStatisticsOptionalParams
        uid: '@azure/batch.JobGetAllLifetimeStatisticsOptionalParams'
  - uid: ServiceCallback<@azure/batch.TaskCounts>
    name: TaskCounts>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TaskCounts
        fullName: TaskCounts
        uid: '@azure/batch.TaskCounts'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.JobGetTaskCountsOptionalParams'
    name: JobGetTaskCountsOptionalParams
    spec.typeScript:
      - name: JobGetTaskCountsOptionalParams
        fullName: JobGetTaskCountsOptionalParams
        uid: '@azure/batch.JobGetTaskCountsOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudJobListResult>
    name: CloudJobListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudJobListResult
        fullName: CloudJobListResult
        uid: '@azure/batch.CloudJobListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.JobListOptionalParams'
    name: JobListOptionalParams
    spec.typeScript:
      - name: JobListOptionalParams
        fullName: JobListOptionalParams
        uid: '@azure/batch.JobListOptionalParams'
  - uid: '@azure/batch.JobListFromJobScheduleOptionalParams'
    name: JobListFromJobScheduleOptionalParams
    spec.typeScript:
      - name: JobListFromJobScheduleOptionalParams
        fullName: JobListFromJobScheduleOptionalParams
        uid: '@azure/batch.JobListFromJobScheduleOptionalParams'
  - uid: '@azure/batch.JobListFromJobScheduleNextOptionalParams'
    name: JobListFromJobScheduleNextOptionalParams
    spec.typeScript:
      - name: JobListFromJobScheduleNextOptionalParams
        fullName: JobListFromJobScheduleNextOptionalParams
        uid: '@azure/batch.JobListFromJobScheduleNextOptionalParams'
  - uid: '@azure/batch.JobListNextOptionalParams'
    name: JobListNextOptionalParams
    spec.typeScript:
      - name: JobListNextOptionalParams
        fullName: JobListNextOptionalParams
        uid: '@azure/batch.JobListNextOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudJobListPreparationAndReleaseTaskStatusResult>
    name: CloudJobListPreparationAndReleaseTaskStatusResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudJobListPreparationAndReleaseTaskStatusResult
        fullName: CloudJobListPreparationAndReleaseTaskStatusResult
        uid: '@azure/batch.CloudJobListPreparationAndReleaseTaskStatusResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.JobListPreparationAndReleaseTaskStatusOptionalParams'
    name: JobListPreparationAndReleaseTaskStatusOptionalParams
    spec.typeScript:
      - name: JobListPreparationAndReleaseTaskStatusOptionalParams
        fullName: JobListPreparationAndReleaseTaskStatusOptionalParams
        uid: '@azure/batch.JobListPreparationAndReleaseTaskStatusOptionalParams'
  - uid: '@azure/batch.JobListPreparationAndReleaseTaskStatusNextOptionalParams'
    name: JobListPreparationAndReleaseTaskStatusNextOptionalParams
    spec.typeScript:
      - name: JobListPreparationAndReleaseTaskStatusNextOptionalParams
        fullName: JobListPreparationAndReleaseTaskStatusNextOptionalParams
        uid: '@azure/batch.JobListPreparationAndReleaseTaskStatusNextOptionalParams'
  - uid: '@azure/batch.JobPatchParameter'
    name: JobPatchParameter
    spec.typeScript:
      - name: JobPatchParameter
        fullName: JobPatchParameter
        uid: '@azure/batch.JobPatchParameter'
  - uid: '@azure/batch.JobPatchOptionalParams'
    name: JobPatchOptionalParams
    spec.typeScript:
      - name: JobPatchOptionalParams
        fullName: JobPatchOptionalParams
        uid: '@azure/batch.JobPatchOptionalParams'
  - uid: '@azure/batch.JobTerminateOptionalParams'
    name: JobTerminateOptionalParams
    spec.typeScript:
      - name: JobTerminateOptionalParams
        fullName: JobTerminateOptionalParams
        uid: '@azure/batch.JobTerminateOptionalParams'
  - uid: '@azure/batch.JobUpdateParameter'
    name: JobUpdateParameter
    spec.typeScript:
      - name: JobUpdateParameter
        fullName: JobUpdateParameter
        uid: '@azure/batch.JobUpdateParameter'
  - uid: '@azure/batch.JobUpdateOptionalParams'
    name: JobUpdateOptionalParams
    spec.typeScript:
      - name: JobUpdateOptionalParams
        fullName: JobUpdateOptionalParams
        uid: '@azure/batch.JobUpdateOptionalParams'