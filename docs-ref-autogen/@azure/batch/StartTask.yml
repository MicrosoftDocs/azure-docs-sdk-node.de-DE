### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.StartTask'
    name: StartTask
    fullName: StartTask
    children:
      - '@azure/batch.StartTask.commandLine'
      - '@azure/batch.StartTask.containerSettings'
      - '@azure/batch.StartTask.environmentSettings'
      - '@azure/batch.StartTask.maxTaskRetryCount'
      - '@azure/batch.StartTask.resourceFiles'
      - '@azure/batch.StartTask.userIdentity'
      - '@azure/batch.StartTask.waitForSuccess'
    langs:
      - typeScript
    type: interface
    summary: 'Batch wiederholt Tasks aus, wenn ein Wiederherstellungsvorgang auf einem Computeknoten ausgelöst wird. Beispiele für die Recovery-Vorgänge enthalten (aber Sie sind nicht darauf beschränkt) bei einem fehlerhaften Computeknoten neu gestartet wird oder Compute-Knoten aufgrund eines hostfehlers verschwunden. Wiederholungen aufgrund von Recovery-Vorgänge werden unabhängig von, und werden nicht anhand der "maxtaskretrycount" gezählt. Auch wenn der "maxtaskretrycount" auf 0 (null) eine interne Wiederholung aufgrund eines Wiederherstellungsvorgangs auftreten ist. Aus diesem Grund sollten alle Vorgänge Idempotent sein. Dies bedeutet, dass Aufgaben tolerieren kann unterbrochen und neu gestartet, ohne dass Beschädigung oder doppelter Daten. Die am besten für lang andauernde Aufgaben besteht darin, verwenden Sie eine Form von Prüfpunkten zu üben. In einigen Fällen kann die Startaufgabe erneut ausgeführt werden, auch wenn der Knoten nicht neu gestartet wurde. Besondere Sorgfalt, starttasks breakaway Prozess erstellen oder installieren/starten der Dienste aus dem Arbeitsverzeichnis der Start-Task zu vermeiden, wie dies Batch blockiert wird, wird die Startaufgabe erneut ausführen.'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.commandLine'
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Befehlszeile der Startaufgabe. Die Befehlszeile wird nicht unter einer Shell ausgeführt, und daher nicht nutzen Shellfeatures wie die Erweiterung von Umgebungsvariablen. Wenn Sie solche Features nutzen möchten, Sie sollten die Shell Aufrufen in der Befehlszeile, z. B. mit "Cmd/c MyCommand" in Windows oder "/ Bin/sh - C MyCommand" unter Linux. Bezieht sich die Befehlszeile auf Dateipfade, sollten sie einen relativen Pfad (relativ zum Arbeitsverzeichnis Aufgabe), oder verwenden Sie die angegebene Batch-Umgebungsvariable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.containerSettings'
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Einstellungen für den Container an, unter dem die Startaufgabe ausgeführt wird. Wenn dies angegeben ist, werden alle Verzeichnisse rekursiv unter dem AZ_BATCH_NODE_ROOT_DIR (der Stamm der Azure Batch-Verzeichnisse auf dem Knoten) in den Container zugeordnet, werden alle Variablen in den Container zugeordnet und wird von der Befehlszeile des Tasks in den Container ausgeführt.'
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - '@azure/batch.TaskContainerSettings'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.environmentSettings'
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: Eine Liste mit umgebungsvariableneinstellungen für die Startaufgabe auszuführen.
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - '@azure/batch.EnvironmentSetting[]'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.maxTaskRetryCount'
    name: maxTaskRetryCount
    fullName: maxTaskRetryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gibt an, wie oft der Task maximal wiederholt werden kann. Der Batch-Dienst wiederholt einen Task, wenn sein Exitcode ungleich null ist. Beachten Sie, dass dieser Wert die Anzahl der Wiederholungen ausdrücklich steuert. Der Batch-Dienst wiederholt den Task einmal und kann ihn anschließend bis zu diesem Grenzwert wiederholen. Beispielsweise ist die maximale Anzahl von Wiederholungsversuchen 3, Batch versucht den Task bis zu 4 Wiederholungsversuche (ein erster Versuch und 3 Wiederholungen).
      Wenn die maximale Anzahl von Wiederholungsversuchen 0 ist, wird den Task von Batch-Dienst nicht wiederholt. Wenn die maximale Anzahl wiederholen ist-1. das Batch-Dienst führt einen Wiederholungsversuch der Task unbegrenzt.
    optional: true
    syntax:
      content: 'maxTaskRetryCount?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.resourceFiles'
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Eine Liste der Dateien, die der Batch-Dienst auf den Computeknoten heruntergeladen wird, vor dem Ausführen der Befehlszeile aus.  Es ist eine maximale Größe für die Liste der Ressourcendateien. Wenn die maximale Größe überschritten wird, die Anforderung schlägt fehl, und der Fehlercode der Antwort werden RequestEntityTooLarge. In diesem Fall muss die Auflistung der ResourceFiles Größe reduziert werden. Dies kann erreicht werden, mithilfe von ZIP-Dateien, Anwendungspakete oder Docker-Container. Unter diesem Element aufgeführten Dateien befinden sich im Arbeitsverzeichnis des Tasks.'
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - '@azure/batch.ResourceFile[]'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.userIdentity'
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Die Benutzeridentität, unter der die Startaufgabe ausgeführt wird. Wenn nicht angegeben, wird die Aufgabe als eine eindeutige Benutzer ohne Administratorrechte an die Aufgabe ausgeführt.'
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - '@azure/batch.UserIdentity'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.waitForSuccess'
    name: waitForSuccess
    fullName: waitForSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gibt an, ob der Batch-Dienst warten soll, für die Startaufgabe erfolgreich abgeschlossen werden (d. h. mit Exitcode 0 beendet), bevor Sie auf dem Computeknoten Tasks geplant. Wenn "true" und die Startaufgabe ein Fehler auftritt, auf einem Computeknoten, wiederholt der Batch-Dienst die Startaufgabe die maximale Anzahl von Wiederholungsversuchen ("maxtaskretrycount"). Wenn der Vorgang hat immer noch nicht erfolgreich abgeschlossen wurde nach allen Wiederholungsversuchen, und klicken Sie dann auf den Batch-Dienst wird den Compute-Knoten kann nicht verwendet werden und wird nicht Planen von Aufgaben zuzuweisen.
      Diese Bedingung kann erkannt werden, über die Knoten-Status und die Fehler Info-Details. False gibt an, wartet der Batch-Dienst nicht für die Startaufgabe abgeschlossen. In diesem Fall können andere Aufgaben starten, auf dem Computeknoten ausgeführt werden, während die Startaufgabe ausgeführt wird; und selbst wenn die Startaufgabe ein Fehler auftritt, weiterhin neue Vorgänge auf dem Knoten geplant werden. Der Standardwert ist FALSE.
    optional: true
    syntax:
      content: 'waitForSuccess?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/batch'
references:
  - uid: '@azure/batch.TaskContainerSettings'
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: '@azure/batch.TaskContainerSettings'
  - uid: '@azure/batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: '@azure/batch.EnvironmentSetting'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: '@azure/batch.ResourceFile'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.UserIdentity'
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: '@azure/batch.UserIdentity'