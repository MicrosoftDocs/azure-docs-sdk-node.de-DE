### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.File'
    name: File
    fullName: File
    children:
      - '@azure/batch.File.deleteFromComputeNode_2'
      - '@azure/batch.File.deleteFromComputeNode'
      - '@azure/batch.File.deleteFromComputeNode_1'
      - '@azure/batch.File.deleteFromTask_2'
      - '@azure/batch.File.deleteFromTask'
      - '@azure/batch.File.deleteFromTask_1'
      - '@azure/batch.File.constructor'
      - '@azure/batch.File.getFromComputeNode_2'
      - '@azure/batch.File.getFromComputeNode'
      - '@azure/batch.File.getFromComputeNode_1'
      - '@azure/batch.File.getFromTask_2'
      - '@azure/batch.File.getFromTask'
      - '@azure/batch.File.getFromTask_1'
      - '@azure/batch.File.getPropertiesFromComputeNode_2'
      - '@azure/batch.File.getPropertiesFromComputeNode'
      - '@azure/batch.File.getPropertiesFromComputeNode_1'
      - '@azure/batch.File.getPropertiesFromTask_2'
      - '@azure/batch.File.getPropertiesFromTask'
      - '@azure/batch.File.getPropertiesFromTask_1'
      - '@azure/batch.File.listFromComputeNode_2'
      - '@azure/batch.File.listFromComputeNode'
      - '@azure/batch.File.listFromComputeNode_1'
      - '@azure/batch.File.listFromComputeNodeNext_2'
      - '@azure/batch.File.listFromComputeNodeNext'
      - '@azure/batch.File.listFromComputeNodeNext_1'
      - '@azure/batch.File.listFromTask_2'
      - '@azure/batch.File.listFromTask'
      - '@azure/batch.File.listFromTask_1'
      - '@azure/batch.File.listFromTaskNext_2'
      - '@azure/batch.File.listFromTaskNext'
      - '@azure/batch.File.listFromTaskNext_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="1262d-101">Klasse, die eine Datei darstellt.</span><span class="sxs-lookup"><span data-stu-id="1262d-101">Class representing a File.</span></span>'
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode_2'
    name: 'deleteFromComputeNode(string, string, string, FileDeleteFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileDeleteFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-102">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-102">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: '<span data-ttu-id="1262d-103">Die ID der Compute-Knoten, die aus dem die Datei gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1262d-103">The ID of the compute node from which you want to delete the file.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-104">Der Pfad zur Datei oder des Verzeichnisses, das Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-104">The path to the file or directory that you want to delete.</span></span>'
        - id: options
          type:
            - '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
          description: <span data-ttu-id="1262d-105">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-105">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-106">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-106">The callback</span></span>
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode'
    name: 'deleteFromComputeNode(string, string, string, Models.FileDeleteFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileDeleteFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-107">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-107">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: '<span data-ttu-id="1262d-108">Die ID der Compute-Knoten, die aus dem die Datei gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1262d-108">The ID of the compute node from which you want to delete the file.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-109">Der Pfad zur Datei oder des Verzeichnisses, das Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-109">The path to the file or directory that you want to delete.</span></span>'
        - id: options
          type:
            - Models.FileDeleteFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode_1'
    name: 'deleteFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-110">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-110">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: '<span data-ttu-id="1262d-111">Die ID der Compute-Knoten, die aus dem die Datei gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1262d-111">The ID of the compute node from which you want to delete the file.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-112">Der Pfad zur Datei oder des Verzeichnisses, das Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-112">The path to the file or directory that you want to delete.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-113">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-113">The callback</span></span>
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask_2'
    name: 'deleteFromTask(string, string, string, FileDeleteFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, options: FileDeleteFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-114">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-114">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-115">Die ID der Aufgabe, deren Datei, die Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-115">The ID of the task whose file you want to delete.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-116">Der Pfad zu der Aufgabendatei oder das Verzeichnis, das Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-116">The path to the task file or directory that you want to delete.</span></span>'
        - id: options
          type:
            - '@azure/batch.FileDeleteFromTaskOptionalParams'
          description: <span data-ttu-id="1262d-117">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-117">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-118">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-118">The callback</span></span>
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask'
    name: 'deleteFromTask(string, string, string, Models.FileDeleteFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileDeleteFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-119">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-119">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-120">Die ID der Aufgabe, deren Datei, die Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-120">The ID of the task whose file you want to delete.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-121">Der Pfad zu der Aufgabendatei oder das Verzeichnis, das Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-121">The path to the task file or directory that you want to delete.</span></span>'
        - id: options
          type:
            - Models.FileDeleteFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask_1'
    name: 'deleteFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-122">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-122">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-123">Die ID der Aufgabe, deren Datei, die Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-123">The ID of the task whose file you want to delete.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-124">Der Pfad zu der Aufgabendatei oder das Verzeichnis, das Sie löschen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-124">The path to the task file or directory that you want to delete.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-125">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-125">The callback</span></span>
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.constructor'
    name: File(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="1262d-126">Erstellen Sie eine Datei.</span><span class="sxs-lookup"><span data-stu-id="1262d-126">Create a File.</span></span>
    syntax:
      content: 'new File(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            <span data-ttu-id="1262d-127">Verweis auf den Dienstclient.</span><span class="sxs-lookup"><span data-stu-id="1262d-127">Reference to the service client.</span></span>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode_2'
    name: 'getFromComputeNode(string, string, string, FileGetFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileGetFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-128">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-128">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="1262d-129">Die ID der Compute-Knoten mit der Datei.</span><span class="sxs-lookup"><span data-stu-id="1262d-129">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-130">Der Pfad zu den Compute-Knoten-Datei, der den Inhalt der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-130">The path to the compute node file that you want to get the content of.</span></span>'
        - id: options
          type:
            - '@azure/batch.FileGetFromComputeNodeOptionalParams'
          description: <span data-ttu-id="1262d-131">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-131">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-132">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-132">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode'
    name: 'getFromComputeNode(string, string, string, Models.FileGetFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1262d-133">Gibt den Inhalt der angegebenen Compute-Knoten-Datei zurück.</span><span class="sxs-lookup"><span data-stu-id="1262d-133">Returns the content of the specified compute node file.</span></span>
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-134">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-134">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="1262d-135">Die ID der Compute-Knoten mit der Datei.</span><span class="sxs-lookup"><span data-stu-id="1262d-135">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-136">Der Pfad zu den Compute-Knoten-Datei, der den Inhalt der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-136">The path to the compute node file that you want to get the content of.</span></span>'
        - id: options
          type:
            - Models.FileGetFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode_1'
    name: 'getFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-137">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-137">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="1262d-138">Die ID der Compute-Knoten mit der Datei.</span><span class="sxs-lookup"><span data-stu-id="1262d-138">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-139">Der Pfad zu den Compute-Knoten-Datei, der den Inhalt der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-139">The path to the compute node file that you want to get the content of.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-140">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-140">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask_2'
    name: 'getFromTask(string, string, string, FileGetFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, options: FileGetFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-141">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-141">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-142">Die ID der Aufgabe, deren Datei, die Sie abrufen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-142">The ID of the task whose file you want to retrieve.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-143">Der Pfad zu der Aufgabendatei, die den Inhalt der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-143">The path to the task file that you want to get the content of.</span></span>'
        - id: options
          type:
            - '@azure/batch.FileGetFromTaskOptionalParams'
          description: <span data-ttu-id="1262d-144">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-144">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-145">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-145">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask'
    name: 'getFromTask(string, string, string, Models.FileGetFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1262d-146">Gibt den Inhalt der angegebenen Aufgabendatei zurück.</span><span class="sxs-lookup"><span data-stu-id="1262d-146">Returns the content of the specified task file.</span></span>
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileGetFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-147">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-147">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-148">Die ID der Aufgabe, deren Datei, die Sie abrufen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-148">The ID of the task whose file you want to retrieve.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-149">Der Pfad zu der Aufgabendatei, die den Inhalt der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-149">The path to the task file that you want to get the content of.</span></span>'
        - id: options
          type:
            - Models.FileGetFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask_1'
    name: 'getFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-150">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-150">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-151">Die ID der Aufgabe, deren Datei, die Sie abrufen möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-151">The ID of the task whose file you want to retrieve.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-152">Der Pfad zu der Aufgabendatei, die den Inhalt der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-152">The path to the task file that you want to get the content of.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-153">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-153">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode_2'
    name: 'getPropertiesFromComputeNode(string, string, string, FileGetPropertiesFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileGetPropertiesFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-154">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-154">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="1262d-155">Die ID der Compute-Knoten mit der Datei.</span><span class="sxs-lookup"><span data-stu-id="1262d-155">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-156">Der Pfad zu der Datei der Compute-Knoten, der die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-156">The path to the compute node file that you want to get the properties of.</span></span>'
        - id: options
          type:
            - '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
          description: <span data-ttu-id="1262d-157">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-157">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-158">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-158">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode'
    name: 'getPropertiesFromComputeNode(string, string, string, Models.FileGetPropertiesFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1262d-159">Ruft die Eigenschaften der angegebenen Compute-Knoten-Datei ab.</span><span class="sxs-lookup"><span data-stu-id="1262d-159">Gets the properties of the specified compute node file.</span></span>
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetPropertiesFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-160">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-160">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="1262d-161">Die ID der Compute-Knoten mit der Datei.</span><span class="sxs-lookup"><span data-stu-id="1262d-161">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-162">Der Pfad zu der Datei der Compute-Knoten, der die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-162">The path to the compute node file that you want to get the properties of.</span></span>'
        - id: options
          type:
            - Models.FileGetPropertiesFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode_1'
    name: 'getPropertiesFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-163">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-163">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="1262d-164">Die ID der Compute-Knoten mit der Datei.</span><span class="sxs-lookup"><span data-stu-id="1262d-164">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-165">Der Pfad zu der Datei der Compute-Knoten, der die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-165">The path to the compute node file that you want to get the properties of.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-166">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-166">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask_2'
    name: 'getPropertiesFromTask(string, string, string, FileGetPropertiesFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options: FileGetPropertiesFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-167">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-167">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-168">Die ID der Aufgabe, deren Datei, die die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-168">The ID of the task whose file you want to get the properties of.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-169">Der Pfad zu der Aufgabendatei, die die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-169">The path to the task file that you want to get the properties of.</span></span>'
        - id: options
          type:
            - '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
          description: <span data-ttu-id="1262d-170">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-170">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-171">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-171">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask'
    name: 'getPropertiesFromTask(string, string, string, Models.FileGetPropertiesFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1262d-172">Ruft die Eigenschaften der angegebenen Aufgabendatei ab.</span><span class="sxs-lookup"><span data-stu-id="1262d-172">Gets the properties of the specified task file.</span></span>
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileGetPropertiesFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-173">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-173">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-174">Die ID der Aufgabe, deren Datei, die die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-174">The ID of the task whose file you want to get the properties of.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-175">Der Pfad zu der Aufgabendatei, die die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-175">The path to the task file that you want to get the properties of.</span></span>'
        - id: options
          type:
            - Models.FileGetPropertiesFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask_1'
    name: 'getPropertiesFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-176">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-176">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-177">Die ID der Aufgabe, deren Datei, die die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-177">The ID of the task whose file you want to get the properties of.</span></span>'
        - id: filePath
          type:
            - string
          description: '<span data-ttu-id="1262d-178">Der Pfad zu der Aufgabendatei, die die Eigenschaften abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="1262d-178">The path to the task file that you want to get the properties of.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1262d-179">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-179">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode_2'
    name: 'listFromComputeNode(string, string, FileListFromComputeNodeOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, options: FileListFromComputeNodeOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-180">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-180">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: '<span data-ttu-id="1262d-181">Die ID des den Compute-Knoten, deren Dateien, die Sie auflisten möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-181">The ID of the compute node whose files you want to list.</span></span>'
        - id: options
          type:
            - '@azure/batch.FileListFromComputeNodeOptionalParams'
          description: <span data-ttu-id="1262d-182">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-182">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="1262d-183">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-183">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode'
    name: 'listFromComputeNode(string, string, Models.FileListFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, options?: Models.FileListFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-184">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-184">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: '<span data-ttu-id="1262d-185">Die ID des den Compute-Knoten, deren Dateien, die Sie auflisten möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-185">The ID of the compute node whose files you want to list.</span></span>'
        - id: options
          type:
            - Models.FileListFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode_1'
    name: 'listFromComputeNode(string, string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: '<span data-ttu-id="1262d-186">Die ID des Pools, den Compute-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-186">The ID of the pool that contains the compute node.</span></span>'
        - id: nodeId
          type:
            - string
          description: '<span data-ttu-id="1262d-187">Die ID des den Compute-Knoten, deren Dateien, die Sie auflisten möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-187">The ID of the compute node whose files you want to list.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="1262d-188">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-188">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext_2'
    name: 'listFromComputeNodeNext(string, FileListFromComputeNodeNextOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, options: FileListFromComputeNodeNextOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="1262d-189">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="1262d-189">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - '@azure/batch.FileListFromComputeNodeNextOptionalParams'
          description: <span data-ttu-id="1262d-190">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-190">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="1262d-191">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-191">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext'
    name: 'listFromComputeNodeNext(string, Models.FileListFromComputeNodeNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, options?: Models.FileListFromComputeNodeNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="1262d-192">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="1262d-192">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Models.FileListFromComputeNodeNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext_1'
    name: 'listFromComputeNodeNext(string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="1262d-193">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="1262d-193">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="1262d-194">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-194">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask_2'
    name: 'listFromTask(string, string, FileListFromTaskOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, options: FileListFromTaskOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-195">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-195">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-196">Die ID der Aufgabe, deren Dateien, die Sie auflisten möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-196">The ID of the task whose files you want to list.</span></span>'
        - id: options
          type:
            - '@azure/batch.FileListFromTaskOptionalParams'
          description: <span data-ttu-id="1262d-197">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-197">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="1262d-198">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-198">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask'
    name: 'listFromTask(string, string, Models.FileListFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, options?: Models.FileListFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-199">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-199">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-200">Die ID der Aufgabe, deren Dateien, die Sie auflisten möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-200">The ID of the task whose files you want to list.</span></span>'
        - id: options
          type:
            - Models.FileListFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask_1'
    name: 'listFromTask(string, string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="1262d-201">Die ID des Auftrags, der den Task enthält.</span><span class="sxs-lookup"><span data-stu-id="1262d-201">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="1262d-202">Die ID der Aufgabe, deren Dateien, die Sie auflisten möchten.</span><span class="sxs-lookup"><span data-stu-id="1262d-202">The ID of the task whose files you want to list.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="1262d-203">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-203">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext_2'
    name: 'listFromTaskNext(string, FileListFromTaskNextOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, options: FileListFromTaskNextOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="1262d-204">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="1262d-204">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - '@azure/batch.FileListFromTaskNextOptionalParams'
          description: <span data-ttu-id="1262d-205">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="1262d-205">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="1262d-206">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-206">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext'
    name: 'listFromTaskNext(string, Models.FileListFromTaskNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, options?: Models.FileListFromTaskNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="1262d-207">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="1262d-207">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Models.FileListFromTaskNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext_1'
    name: 'listFromTaskNext(string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="1262d-208">Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="1262d-208">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="1262d-209">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="1262d-209">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
    name: FileDeleteFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileDeleteFromComputeNodeOptionalParams
        fullName: FileDeleteFromComputeNodeOptionalParams
        uid: '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileDeleteFromTaskOptionalParams'
    name: FileDeleteFromTaskOptionalParams
    spec.typeScript:
      - name: FileDeleteFromTaskOptionalParams
        fullName: FileDeleteFromTaskOptionalParams
        uid: '@azure/batch.FileDeleteFromTaskOptionalParams'
  - uid: '@azure/batch.FileGetFromComputeNodeOptionalParams'
    name: FileGetFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileGetFromComputeNodeOptionalParams
        fullName: FileGetFromComputeNodeOptionalParams
        uid: '@azure/batch.FileGetFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileGetFromTaskOptionalParams'
    name: FileGetFromTaskOptionalParams
    spec.typeScript:
      - name: FileGetFromTaskOptionalParams
        fullName: FileGetFromTaskOptionalParams
        uid: '@azure/batch.FileGetFromTaskOptionalParams'
  - uid: '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
    name: FileGetPropertiesFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileGetPropertiesFromComputeNodeOptionalParams
        fullName: FileGetPropertiesFromComputeNodeOptionalParams
        uid: '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
    name: FileGetPropertiesFromTaskOptionalParams
    spec.typeScript:
      - name: FileGetPropertiesFromTaskOptionalParams
        fullName: FileGetPropertiesFromTaskOptionalParams
        uid: '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
  - uid: ServiceCallback<@azure/batch.NodeFileListResult>
    name: NodeFileListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeFileListResult
        fullName: NodeFileListResult
        uid: '@azure/batch.NodeFileListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams'
    name: FileListFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileListFromComputeNodeOptionalParams
        fullName: FileListFromComputeNodeOptionalParams
        uid: '@azure/batch.FileListFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileListFromComputeNodeNextOptionalParams'
    name: FileListFromComputeNodeNextOptionalParams
    spec.typeScript:
      - name: FileListFromComputeNodeNextOptionalParams
        fullName: FileListFromComputeNodeNextOptionalParams
        uid: '@azure/batch.FileListFromComputeNodeNextOptionalParams'
  - uid: '@azure/batch.FileListFromTaskOptionalParams'
    name: FileListFromTaskOptionalParams
    spec.typeScript:
      - name: FileListFromTaskOptionalParams
        fullName: FileListFromTaskOptionalParams
        uid: '@azure/batch.FileListFromTaskOptionalParams'
  - uid: '@azure/batch.FileListFromTaskNextOptionalParams'
    name: FileListFromTaskNextOptionalParams
    spec.typeScript:
      - name: FileListFromTaskNextOptionalParams
        fullName: FileListFromTaskNextOptionalParams
        uid: '@azure/batch.FileListFromTaskNextOptionalParams'