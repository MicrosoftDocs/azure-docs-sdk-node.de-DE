### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-monitor.ActivityLogsListOptionalParams'
    name: ActivityLogsListOptionalParams
    fullName: ActivityLogsListOptionalParams
    children:
      - '@azure/arm-monitor.ActivityLogsListOptionalParams.abortSignal'
      - '@azure/arm-monitor.ActivityLogsListOptionalParams.customHeaders'
      - '@azure/arm-monitor.ActivityLogsListOptionalParams.filter'
      - '@azure/arm-monitor.ActivityLogsListOptionalParams.onDownloadProgress'
      - '@azure/arm-monitor.ActivityLogsListOptionalParams.onUploadProgress'
      - '@azure/arm-monitor.ActivityLogsListOptionalParams.select'
      - '@azure/arm-monitor.ActivityLogsListOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: Optionale Parameter.
    extends:
      name: RequestOptionsBase
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.ActivityLogsListOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: Das Signal der Abbruch von Anforderungen verwendet werden kann.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.ActivityLogsListOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Object} [CustomHeaders] Benutzerdefinierte benutzerdefinierten-Anforderungsheadern, die angewendet werden, bevor die Anforderung gesendet wird.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.ActivityLogsListOptionalParams.filter'
    name: filter
    fullName: filter
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Verringert die Menge der gesammelten Daten.<br>Die **$filter** Argument ist sehr begrenzt und können nur die folgenden Muster.<br>- *Auflisten von Ereignissen für eine Ressourcengruppe*: $filter = EventTimestamp ge "2014-07-16T04:36:37.6407898Z" und EventTimestamp le "2014-07-20T04:36:37.6407898Z" und ResourceGroupName-Eq "ResourceGroupName".<br>- *List events for resource*: $filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z'' and resourceUri eq ''resourceURI''.<br>- *List events for a subscription in a time range*: $filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z''.<br>- *Auflisten von Ereignissen für einen Ressourcenanbieter*: $filter = EventTimestamp ge "2014-07-16T04:36:37.6407898Z" und EventTimestamp le "2014-07-20T04:36:37.6407898Z" und ResourceProvider-Eq ''der resourceprovidername darf''.<br>- *List events for a correlation Id*: $filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z'' and correlationId eq ''correlationID''.<br><br>**HINWEIS**: Andere Syntax ist nicht zulässig.'
    optional: true
    syntax:
      content: 'filter?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.ActivityLogsListOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Rückruf, das auf den Fortschritt des Downloads ausgelöst wird.'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.ActivityLogsListOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Rückruf, das ausgelöst, auf den Fortschritt des Dateiuploads wird.'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.ActivityLogsListOptionalParams.select'
    name: select
    fullName: select
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Wird verwendet, um Ereignisse mit nur den angegebenen Eigenschaften abzurufen.<br>Die **$select** Argument ist eine durch Trennzeichen getrennte Liste von Eigenschaftennamen, die zurückgegeben werden. Mögliche Werte sind: *Autorisierung*, *Ansprüche*, *CorrelationId*, *Beschreibung*, *EventDataId*, *EventName*, *EventTimestamp*, *HttpRequest*, *Ebene*, *"operationId"*, *OperationName*, *Eigenschaften*, *ResourceGroupName*, *der resourceprovidername darf*, * ResourceId*, *Status*, *SubmissionTimestamp*, *Unterstatus*, *SubscriptionId*'
    optional: true
    syntax:
      content: 'select?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.ActivityLogsListOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Bevor Sie automatisch beendet wird, ist die Anzahl der Millisekunden, die eine Anforderung dauert.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-monitor'