### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-rediscache.Redis'
    name: Redis
    fullName: Redis
    children:
      - '@azure/arm-rediscache.Redis.beginCreate'
      - '@azure/arm-rediscache.Redis.beginDeleteMethod'
      - '@azure/arm-rediscache.Redis.beginExportData'
      - '@azure/arm-rediscache.Redis.beginImportData'
      - '@azure/arm-rediscache.Redis.checkNameAvailability'
      - '@azure/arm-rediscache.Redis.checkNameAvailability_2'
      - '@azure/arm-rediscache.Redis.checkNameAvailability_1'
      - '@azure/arm-rediscache.Redis.create'
      - '@azure/arm-rediscache.Redis.deleteMethod'
      - '@azure/arm-rediscache.Redis.exportData'
      - '@azure/arm-rediscache.Redis.forceReboot'
      - '@azure/arm-rediscache.Redis.forceReboot_2'
      - '@azure/arm-rediscache.Redis.forceReboot_1'
      - '@azure/arm-rediscache.Redis.get'
      - '@azure/arm-rediscache.Redis.get_2'
      - '@azure/arm-rediscache.Redis.get_1'
      - '@azure/arm-rediscache.Redis.importData'
      - '@azure/arm-rediscache.Redis.list'
      - '@azure/arm-rediscache.Redis.list_2'
      - '@azure/arm-rediscache.Redis.list_1'
      - '@azure/arm-rediscache.Redis.listByResourceGroup'
      - '@azure/arm-rediscache.Redis.listByResourceGroup_2'
      - '@azure/arm-rediscache.Redis.listByResourceGroup_1'
      - '@azure/arm-rediscache.Redis.listByResourceGroupNext'
      - '@azure/arm-rediscache.Redis.listByResourceGroupNext_2'
      - '@azure/arm-rediscache.Redis.listByResourceGroupNext_1'
      - '@azure/arm-rediscache.Redis.listKeys'
      - '@azure/arm-rediscache.Redis.listKeys_2'
      - '@azure/arm-rediscache.Redis.listKeys_1'
      - '@azure/arm-rediscache.Redis.listNext'
      - '@azure/arm-rediscache.Redis.listNext_2'
      - '@azure/arm-rediscache.Redis.listNext_1'
      - '@azure/arm-rediscache.Redis.listUpgradeNotifications'
      - '@azure/arm-rediscache.Redis.listUpgradeNotifications_2'
      - '@azure/arm-rediscache.Redis.listUpgradeNotifications_1'
      - '@azure/arm-rediscache.Redis.constructor'
      - '@azure/arm-rediscache.Redis.regenerateKey'
      - '@azure/arm-rediscache.Redis.regenerateKey_2'
      - '@azure/arm-rediscache.Redis.regenerateKey_1'
      - '@azure/arm-rediscache.Redis.update'
      - '@azure/arm-rediscache.Redis.update_2'
      - '@azure/arm-rediscache.Redis.update_1'
    langs:
      - typeScript
    type: class
    summary: 'Klasse, die einen Redis darstellt.'
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.beginCreate'
    name: 'beginCreate(string, string, RedisCreateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Erstellen Sie, oder Ersetzen Sie (überschreiben/neu erstellen, mit potenziellen Ausfallzeiten) eines vorhandenen Redis-Caches.'
    syntax:
      content: 'function beginCreate(resourceGroupName: string, name: string, parameters: RedisCreateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.RedisCreateParameters'
          description: Parameter für das Erstellen von Redis zur Verfügung gestellt.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht einen Redis-Cache.
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.beginExportData'
    name: 'beginExportData(string, string, ExportRDBParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Exportieren von Daten aus dem Redis-Cache auf Blobs in einem Container.
    syntax:
      content: 'function beginExportData(resourceGroupName: string, name: string, parameters: ExportRDBParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.ExportRDBParameters'
          description: Parameter für Redis-Export-Vorgangs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.beginImportData'
    name: 'beginImportData(string, string, ImportRDBParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Importieren von Daten in Redis-Cache.
    syntax:
      content: 'function beginImportData(resourceGroupName: string, name: string, parameters: ImportRDBParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.ImportRDBParameters'
          description: Parameter für Redis-Importvorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.checkNameAvailability'
    name: 'checkNameAvailability(CheckNameAvailabilityParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Überprüft, ob der Name der Redis-Cache ist gültig und wird nicht bereits verwendet.'
    syntax:
      content: 'function checkNameAvailability(parameters: CheckNameAvailabilityParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: parameters
          type:
            - '@azure/arm-rediscache.CheckNameAvailabilityParameters'
          description: 'Parameter für die Redis-CheckNameAvailability zur Verfügung gestellt. Der einzige unterstützte Ressourcentyp ist ": Microsoft.Cache/redis"'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.checkNameAvailability_2'
    name: 'checkNameAvailability(CheckNameAvailabilityParameters, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(parameters: CheckNameAvailabilityParameters, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: parameters
          type:
            - '@azure/arm-rediscache.CheckNameAvailabilityParameters'
          description: 'Parameter für die Redis-CheckNameAvailability zur Verfügung gestellt. Der einzige unterstützte Ressourcentyp ist ": Microsoft.Cache/redis"'
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.checkNameAvailability_1'
    name: 'checkNameAvailability(CheckNameAvailabilityParameters, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(parameters: CheckNameAvailabilityParameters, callback: ServiceCallback<void>)'
      parameters:
        - id: parameters
          type:
            - '@azure/arm-rediscache.CheckNameAvailabilityParameters'
          description: 'Parameter für die Redis-CheckNameAvailability zur Verfügung gestellt. Der einzige unterstützte Ressourcentyp ist ": Microsoft.Cache/redis"'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.create'
    name: 'create(string, string, RedisCreateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Erstellen Sie, oder Ersetzen Sie (überschreiben/neu erstellen, mit potenziellen Ausfallzeiten) eines vorhandenen Redis-Caches.'
    syntax:
      content: 'function create(resourceGroupName: string, name: string, parameters: RedisCreateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.RedisCreateParameters'
          description: Parameter für das Erstellen von Redis zur Verfügung gestellt.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisCreateResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Löscht einen Redis-Cache.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.exportData'
    name: 'exportData(string, string, ExportRDBParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Exportieren von Daten aus dem Redis-Cache auf Blobs in einem Container.
    syntax:
      content: 'function exportData(resourceGroupName: string, name: string, parameters: ExportRDBParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.ExportRDBParameters'
          description: Parameter für Redis-Export-Vorgangs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.forceReboot'
    name: 'forceReboot(string, string, RedisRebootParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Starten Sie neu angegebene Redis-Knoten. Diesen Vorgang muss über die Schreibberechtigung für die Cache-Ressource.
      Möglicherweise Daten verloren gehen können vorhanden sein.
    syntax:
      content: 'function forceReboot(resourceGroupName: string, name: string, parameters: RedisRebootParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.RedisRebootParameters'
          description: 'Gibt an, die Redis-Knoten neu starten.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisForceRebootResponse2>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.forceReboot_2'
    name: 'forceReboot(string, string, RedisRebootParameters, RequestOptionsBase, ServiceCallback<RedisForceRebootResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceReboot(resourceGroupName: string, name: string, parameters: RedisRebootParameters, options: RequestOptionsBase, callback: ServiceCallback<RedisForceRebootResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.RedisRebootParameters'
          description: 'Gibt an, die Redis-Knoten neu starten.'
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisForceRebootResponse>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisForceRebootResponse2>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.forceReboot_1'
    name: 'forceReboot(string, string, RedisRebootParameters, ServiceCallback<RedisForceRebootResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceReboot(resourceGroupName: string, name: string, parameters: RedisRebootParameters, callback: ServiceCallback<RedisForceRebootResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.RedisRebootParameters'
          description: 'Gibt an, die Redis-Knoten neu starten.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisForceRebootResponse>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisForceRebootResponse2>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ruft ab einen Redis-Cache (Beschreibungen).
    syntax:
      content: 'function get(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisGetResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<RedisResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, name: string, options: RequestOptionsBase, callback: ServiceCallback<RedisResource>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisResource>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisGetResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.get_1'
    name: 'get(string, string, ServiceCallback<RedisResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, name: string, callback: ServiceCallback<RedisResource>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisResource>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisGetResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.importData'
    name: 'importData(string, string, ImportRDBParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Importieren von Daten in Redis-Cache.
    syntax:
      content: 'function importData(resourceGroupName: string, name: string, parameters: ImportRDBParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.ImportRDBParameters'
          description: Parameter für Redis-Importvorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Ruft alle Redis-Caches in das angegebene Abonnement ab.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisListResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<RedisListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.list_1'
    name: list(ServiceCallback<RedisListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet alle Redis-Caches in einer Ressourcengruppe.
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisListByResourceGroupResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listByResourceGroup_2'
    name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<RedisListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListByResourceGroupResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<RedisListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListByResourceGroupResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Listet alle Redis-Caches in einer Ressourcengruppe.
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisListByResourceGroupNextResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listByResourceGroupNext_2'
    name: 'listByResourceGroupNext(string, RequestOptionsBase, ServiceCallback<RedisListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListByResourceGroupNextResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<RedisListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListByResourceGroupNextResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listKeys'
    name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Rufen Sie einen Redis-Cache-Zugriffsschlüssel an. Diesen Vorgang muss über die Schreibberechtigung für die Cache-Ressource.
    syntax:
      content: 'function listKeys(resourceGroupName: string, name: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisListKeysResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listKeys_2'
    name: 'listKeys(string, string, RequestOptionsBase, ServiceCallback<RedisAccessKeys>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, name: string, options: RequestOptionsBase, callback: ServiceCallback<RedisAccessKeys>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisAccessKeys>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListKeysResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listKeys_1'
    name: 'listKeys(string, string, ServiceCallback<RedisAccessKeys>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, name: string, callback: ServiceCallback<RedisAccessKeys>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisAccessKeys>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListKeysResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ruft alle Redis-Caches in das angegebene Abonnement ab.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisListNextResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<RedisListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListNextResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listNext_1'
    name: 'listNext(string, ServiceCallback<RedisListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<RedisListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Der NextLink aus dem vorherigen erfolgreichen Aufruf von List-Vorgang.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisListResult>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListNextResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listUpgradeNotifications'
    name: 'listUpgradeNotifications(string, string, number, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ruft alle Upgrade Benachrichtigungen für einen Redis Cache ab.
    syntax:
      content: 'function listUpgradeNotifications(resourceGroupName: string, name: string, history: number, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: history
          type:
            - number
          description: wie viele Minuten in der Vergangenheit nach Upgrade Benachrichtigungen gesucht werden soll
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisListUpgradeNotificationsResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listUpgradeNotifications_2'
    name: 'listUpgradeNotifications(string, string, number, RequestOptionsBase, ServiceCallback<NotificationListResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUpgradeNotifications(resourceGroupName: string, name: string, history: number, options: RequestOptionsBase, callback: ServiceCallback<NotificationListResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: history
          type:
            - number
          description: wie viele Minuten in der Vergangenheit nach Upgrade Benachrichtigungen gesucht werden soll
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.NotificationListResponse>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListUpgradeNotificationsResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.listUpgradeNotifications_1'
    name: 'listUpgradeNotifications(string, string, number, ServiceCallback<NotificationListResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUpgradeNotifications(resourceGroupName: string, name: string, history: number, callback: ServiceCallback<NotificationListResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: history
          type:
            - number
          description: wie viele Minuten in der Vergangenheit nach Upgrade Benachrichtigungen gesucht werden soll
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.NotificationListResponse>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisListUpgradeNotificationsResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.constructor'
    name: Redis(RedisManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Erstellen eines Redis an.
    syntax:
      content: 'new Redis(client: RedisManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-rediscache.RedisManagementClientContext'
          description: |
            Verweis auf den Dienstclient.
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.regenerateKey'
    name: 'regenerateKey(string, string, Models.RedisKeyType, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Zugriffsschlüssel für Redis-Cache. Diesen Vorgang muss über die Schreibberechtigung für die Cache-Ressource.
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, name: string, keyType: Models.RedisKeyType, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: keyType
          type:
            - Models.RedisKeyType
          description: 'Der Redis-Zugriffsschlüssel neu generieren. Mögliche Werte sind: ''Primary'', ''Secondary'''
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisRegenerateKeyResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.regenerateKey_2'
    name: 'regenerateKey(string, string, Models.RedisKeyType, RequestOptionsBase, ServiceCallback<RedisAccessKeys>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, name: string, keyType: Models.RedisKeyType, options: RequestOptionsBase, callback: ServiceCallback<RedisAccessKeys>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: keyType
          type:
            - Models.RedisKeyType
          description: 'Der Redis-Zugriffsschlüssel neu generieren. Mögliche Werte sind: ''Primary'', ''Secondary'''
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisAccessKeys>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisRegenerateKeyResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.regenerateKey_1'
    name: 'regenerateKey(string, string, Models.RedisKeyType, ServiceCallback<RedisAccessKeys>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, name: string, keyType: Models.RedisKeyType, callback: ServiceCallback<RedisAccessKeys>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: keyType
          type:
            - Models.RedisKeyType
          description: 'Der Redis-Zugriffsschlüssel neu generieren. Mögliche Werte sind: ''Primary'', ''Secondary'''
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisAccessKeys>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisRegenerateKeyResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.update'
    name: 'update(string, string, RedisUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Aktualisieren eines vorhandenen Redis-Caches.
    syntax:
      content: 'function update(resourceGroupName: string, name: string, parameters: RedisUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.RedisUpdateParameters'
          description: Parameter für die Redis-Update zur Verfügung gestellt.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RedisUpdateResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.update_2'
    name: 'update(string, string, RedisUpdateParameters, RequestOptionsBase, ServiceCallback<RedisResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, name: string, parameters: RedisUpdateParameters, options: RequestOptionsBase, callback: ServiceCallback<RedisResource>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.RedisUpdateParameters'
          description: Parameter für die Redis-Update zur Verfügung gestellt.
        - id: options
          type:
            - RequestOptionsBase
          description: Die optionalen Parameter
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisResource>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisUpdateResponse>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Redis.update_1'
    name: 'update(string, string, RedisUpdateParameters, ServiceCallback<RedisResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, name: string, parameters: RedisUpdateParameters, callback: ServiceCallback<RedisResource>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Der Name der Ressourcengruppe.
        - id: name
          type:
            - string
          description: Der Name des Redis-Cache.
        - id: parameters
          type:
            - '@azure/arm-rediscache.RedisUpdateParameters'
          description: Parameter für die Redis-Update zur Verfügung gestellt.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-rediscache.RedisResource>
          description: |
            Der Rückruf
      return:
        type:
          - Promise<Models.RedisUpdateResponse>
    package: '@azure/arm-rediscache'
references:
  - uid: '@azure/arm-rediscache.RedisManagementClientContext'
    name: RedisManagementClientContext
    spec.typeScript:
      - name: RedisManagementClientContext
        fullName: RedisManagementClientContext
        uid: '@azure/arm-rediscache.RedisManagementClientContext'
  - uid: '@azure/arm-rediscache.RedisCreateParameters'
    name: RedisCreateParameters
    spec.typeScript:
      - name: RedisCreateParameters
        fullName: RedisCreateParameters
        uid: '@azure/arm-rediscache.RedisCreateParameters'
  - uid: '@azure/arm-rediscache.ExportRDBParameters'
    name: ExportRDBParameters
    spec.typeScript:
      - name: ExportRDBParameters
        fullName: ExportRDBParameters
        uid: '@azure/arm-rediscache.ExportRDBParameters'
  - uid: '@azure/arm-rediscache.ImportRDBParameters'
    name: ImportRDBParameters
    spec.typeScript:
      - name: ImportRDBParameters
        fullName: ImportRDBParameters
        uid: '@azure/arm-rediscache.ImportRDBParameters'
  - uid: '@azure/arm-rediscache.CheckNameAvailabilityParameters'
    name: CheckNameAvailabilityParameters
    spec.typeScript:
      - name: CheckNameAvailabilityParameters
        fullName: CheckNameAvailabilityParameters
        uid: '@azure/arm-rediscache.CheckNameAvailabilityParameters'
  - uid: '@azure/arm-rediscache.RedisRebootParameters'
    name: RedisRebootParameters
    spec.typeScript:
      - name: RedisRebootParameters
        fullName: RedisRebootParameters
        uid: '@azure/arm-rediscache.RedisRebootParameters'
  - uid: ServiceCallback<@azure/arm-rediscache.RedisForceRebootResponse>
    name: RedisForceRebootResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RedisForceRebootResponse
        fullName: RedisForceRebootResponse
        uid: '@azure/arm-rediscache.RedisForceRebootResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-rediscache.RedisResource>
    name: RedisResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RedisResource
        fullName: RedisResource
        uid: '@azure/arm-rediscache.RedisResource'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-rediscache.RedisListResult>
    name: RedisListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RedisListResult
        fullName: RedisListResult
        uid: '@azure/arm-rediscache.RedisListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-rediscache.RedisAccessKeys>
    name: RedisAccessKeys>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RedisAccessKeys
        fullName: RedisAccessKeys
        uid: '@azure/arm-rediscache.RedisAccessKeys'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-rediscache.NotificationListResponse>
    name: NotificationListResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NotificationListResponse
        fullName: NotificationListResponse
        uid: '@azure/arm-rediscache.NotificationListResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-rediscache.RedisUpdateParameters'
    name: RedisUpdateParameters
    spec.typeScript:
      - name: RedisUpdateParameters
        fullName: RedisUpdateParameters
        uid: '@azure/arm-rediscache.RedisUpdateParameters'