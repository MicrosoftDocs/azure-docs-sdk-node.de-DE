### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration'
    name: TextModeration
    fullName: TextModeration
    children:
      - '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_2'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_1'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.screenText'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_1'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_2'
      - '@azure/cognitiveservices-contentmoderator.TextModeration.constructor'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="eae9b-101">Klasse, die eine TextModeration darstellt.</span><span class="sxs-lookup"><span data-stu-id="eae9b-101">Class representing a TextModeration.</span></span>'
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage'
    name: 'detectLanguage(Models.TextContentType1, msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="eae9b-102">Dieser Vorgang erkennt die Sprache des eingegebenen Inhalt zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="eae9b-102">This operation will detect the language of given input content.</span></span> <span data-ttu-id="eae9b-103">Gibt die <a
      href="http://www-01.sil.org/iso639-3/codes.asp">Code nach ISO 639-3-</a> für die vorherrschende Sprache, die mit den gesendeten Text.</span><span class="sxs-lookup"><span data-stu-id="eae9b-103">Returns the <a
      href="http://www-01.sil.org/iso639-3/codes.asp">ISO 639-3 code</a> for the predominant language comprising the submitted text.</span></span> <span data-ttu-id="eae9b-104">Mehr als 110 unterstützten Sprachen.</span><span class="sxs-lookup"><span data-stu-id="eae9b-104">Over 110 languages supported.</span></span>
    syntax:
      content: 'function detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType1
          description: '<span data-ttu-id="eae9b-105">Der Inhaltstyp.</span><span class="sxs-lookup"><span data-stu-id="eae9b-105">The content type.</span></span> <span data-ttu-id="eae9b-106">Folgende Werte sind möglich: "Text/Plain", "Text/html", "Text/Xml", "Text/Markdown"</span><span class="sxs-lookup"><span data-stu-id="eae9b-106">Possible values include: ''text/plain'', ''text/html'', ''text/xml'', ''text/markdown''</span></span>'
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="eae9b-107">Die Inhalte der Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="eae9b-107">Content to screen.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TextModerationDetectLanguageResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_2'
    name: 'detectLanguage(Models.TextContentType1, msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<DetectedLanguage>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<DetectedLanguage>)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType1
          description: '<span data-ttu-id="eae9b-108">Der Inhaltstyp.</span><span class="sxs-lookup"><span data-stu-id="eae9b-108">The content type.</span></span> <span data-ttu-id="eae9b-109">Folgende Werte sind möglich: "Text/Plain", "Text/html", "Text/Xml", "Text/Markdown"</span><span class="sxs-lookup"><span data-stu-id="eae9b-109">Possible values include: ''text/plain'', ''text/html'', ''text/xml'', ''text/markdown''</span></span>'
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="eae9b-110">Die Inhalte der Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="eae9b-110">Content to screen.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="eae9b-111">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="eae9b-111">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.DetectedLanguage>
          description: |
            <span data-ttu-id="eae9b-112">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="eae9b-112">The callback</span></span>
      return:
        type:
          - Promise<Models.TextModerationDetectLanguageResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_1'
    name: 'detectLanguage(Models.TextContentType1, msRest.HttpRequestBody, ServiceCallback<DetectedLanguage>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, callback: ServiceCallback<DetectedLanguage>)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType1
          description: '<span data-ttu-id="eae9b-113">Der Inhaltstyp.</span><span class="sxs-lookup"><span data-stu-id="eae9b-113">The content type.</span></span> <span data-ttu-id="eae9b-114">Folgende Werte sind möglich: "Text/Plain", "Text/html", "Text/Xml", "Text/Markdown"</span><span class="sxs-lookup"><span data-stu-id="eae9b-114">Possible values include: ''text/plain'', ''text/html'', ''text/xml'', ''text/markdown''</span></span>'
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="eae9b-115">Die Inhalte der Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="eae9b-115">Content to screen.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.DetectedLanguage>
          description: |
            <span data-ttu-id="eae9b-116">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="eae9b-116">The callback</span></span>
      return:
        type:
          - Promise<Models.TextModerationDetectLanguageResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText'
    name: 'screenText(Models.TextContentType, msRest.HttpRequestBody, Models.TextModerationScreenTextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="eae9b-117">Erkennt anstößige Ausdrücke in mehr als 100 Sprachen und Übereinstimmung mit benutzerdefinierten und freigegebenen Blacklists.</span><span class="sxs-lookup"><span data-stu-id="eae9b-117">Detects profanity in more than 100 languages and match against custom and shared blacklists.</span></span>
    syntax:
      content: 'function screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, options?: Models.TextModerationScreenTextOptionalParams)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType
          description: '<span data-ttu-id="eae9b-118">Der Inhaltstyp.</span><span class="sxs-lookup"><span data-stu-id="eae9b-118">The content type.</span></span> <span data-ttu-id="eae9b-119">Folgende Werte sind möglich: "Text/Plain", "Text/html", "Text/Xml", "Text/Markdown"</span><span class="sxs-lookup"><span data-stu-id="eae9b-119">Possible values include: ''text/plain'', ''text/html'', ''text/xml'', ''text/markdown''</span></span>'
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="eae9b-120">Die Inhalte der Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="eae9b-120">Content to screen.</span></span>
        - id: options
          type:
            - Models.TextModerationScreenTextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TextModerationScreenTextResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_1'
    name: 'screenText(Models.TextContentType, msRest.HttpRequestBody, ServiceCallback<Screen>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, callback: ServiceCallback<Screen>)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType
          description: '<span data-ttu-id="eae9b-121">Der Inhaltstyp.</span><span class="sxs-lookup"><span data-stu-id="eae9b-121">The content type.</span></span> <span data-ttu-id="eae9b-122">Folgende Werte sind möglich: "Text/Plain", "Text/html", "Text/Xml", "Text/Markdown"</span><span class="sxs-lookup"><span data-stu-id="eae9b-122">Possible values include: ''text/plain'', ''text/html'', ''text/xml'', ''text/markdown''</span></span>'
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="eae9b-123">Die Inhalte der Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="eae9b-123">Content to screen.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Screen>
          description: |
            <span data-ttu-id="eae9b-124">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="eae9b-124">The callback</span></span>
      return:
        type:
          - Promise<Models.TextModerationScreenTextResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_2'
    name: 'screenText(Models.TextContentType, msRest.HttpRequestBody, TextModerationScreenTextOptionalParams, ServiceCallback<Screen>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, options: TextModerationScreenTextOptionalParams, callback: ServiceCallback<Screen>)'
      parameters:
        - id: textContentType
          type:
            - Models.TextContentType
          description: '<span data-ttu-id="eae9b-125">Der Inhaltstyp.</span><span class="sxs-lookup"><span data-stu-id="eae9b-125">The content type.</span></span> <span data-ttu-id="eae9b-126">Folgende Werte sind möglich: "Text/Plain", "Text/html", "Text/Xml", "Text/Markdown"</span><span class="sxs-lookup"><span data-stu-id="eae9b-126">Possible values include: ''text/plain'', ''text/html'', ''text/xml'', ''text/markdown''</span></span>'
        - id: textContent
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="eae9b-127">Die Inhalte der Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="eae9b-127">Content to screen.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.TextModerationScreenTextOptionalParams'
          description: <span data-ttu-id="eae9b-128">Die optionalen Parameter</span><span class="sxs-lookup"><span data-stu-id="eae9b-128">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Screen>
          description: |
            <span data-ttu-id="eae9b-129">Der Rückruf</span><span class="sxs-lookup"><span data-stu-id="eae9b-129">The callback</span></span>
      return:
        type:
          - Promise<Models.TextModerationScreenTextResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModeration.constructor'
    name: TextModeration(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="eae9b-130">Erstellen Sie eine TextModeration.</span><span class="sxs-lookup"><span data-stu-id="eae9b-130">Create a TextModeration.</span></span>
    syntax:
      content: 'new TextModeration(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            <span data-ttu-id="eae9b-131">Verweis auf den Dienstclient.</span><span class="sxs-lookup"><span data-stu-id="eae9b-131">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.DetectedLanguage>
    name: DetectedLanguage>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectedLanguage
        fullName: DetectedLanguage
        uid: '@azure/cognitiveservices-contentmoderator.DetectedLanguage'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Screen>
    name: Screen>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Screen
        fullName: Screen
        uid: '@azure/cognitiveservices-contentmoderator.Screen'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.TextModerationScreenTextOptionalParams'
    name: TextModerationScreenTextOptionalParams
    spec.typeScript:
      - name: TextModerationScreenTextOptionalParams
        fullName: TextModerationScreenTextOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.TextModerationScreenTextOptionalParams'