### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-network.PatchRouteFilter'
    name: PatchRouteFilter
    fullName: PatchRouteFilter
    children:
      - '@azure/arm-network.PatchRouteFilter.etag'
      - '@azure/arm-network.PatchRouteFilter.id'
      - '@azure/arm-network.PatchRouteFilter.ipv6Peerings'
      - '@azure/arm-network.PatchRouteFilter.name'
      - '@azure/arm-network.PatchRouteFilter.peerings'
      - '@azure/arm-network.PatchRouteFilter.provisioningState'
      - '@azure/arm-network.PatchRouteFilter.rules'
      - '@azure/arm-network.PatchRouteFilter.tags'
      - '@azure/arm-network.PatchRouteFilter.type'
    langs:
      - typeScript
    type: interface
    summary: Die Routenfilterressource.
    extends:
      name: '@azure/arm-network.SubResource'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Eine eindeutige schreibgeschützte Zeichenfolge, die sich ändern, wenn die Ressource aktualisiert wird.
      **HINWEIS: Diese Eigenschaft wird nicht serialisiert werden. Es kann nur vom Server aufgefüllt werden.**
    optional: true
    syntax:
      content: 'etag?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Ressourcen-ID
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.ipv6Peerings'
    name: ipv6Peerings
    fullName: ipv6Peerings
    children: []
    langs:
      - typeScript
    type: property
    summary: Eine Auflistung von Verweisen auf express Route-verbindungspeerings ipv6.
    optional: true
    syntax:
      content: 'ipv6Peerings?: ExpressRouteCircuitPeering[]'
      return:
        type:
          - '@azure/arm-network.ExpressRouteCircuitPeering[]'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Der Name der Ressource, die innerhalb einer Ressourcengruppe eindeutig ist. Dieser Name kann verwendet werden, auf die Ressource zuzugreifen.
      **HINWEIS: Diese Eigenschaft wird nicht serialisiert werden. Es kann nur vom Server aufgefüllt werden.**
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.peerings'
    name: peerings
    fullName: peerings
    children: []
    langs:
      - typeScript
    type: property
    summary: Eine Auflistung von Verweisen auf express Route-verbindungspeerings.
    optional: true
    syntax:
      content: 'peerings?: ExpressRouteCircuitPeering[]'
      return:
        type:
          - '@azure/arm-network.ExpressRouteCircuitPeering[]'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.provisioningState'
    name: provisioningState
    fullName: provisioningState
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Der Bereitstellungsstatus der Ressource. Dabei sind folgende Werte möglich: "Aktualisieren", "Löschen", "Erfolgreich" und "Failed".
      **HINWEIS: Diese Eigenschaft wird nicht serialisiert werden. Es kann nur vom Server aufgefüllt werden.**
    optional: true
    syntax:
      content: 'provisioningState?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.rules'
    name: rules
    fullName: rules
    children: []
    langs:
      - typeScript
    type: property
    summary: Die Auflistung von RouteFilterRules in einen Routenfilter enthalten sind.
    optional: true
    syntax:
      content: 'rules?: RouteFilterRule[]'
      return:
        type:
          - '@azure/arm-network.RouteFilterRule[]'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Ressourcentags.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-network'
  - uid: '@azure/arm-network.PatchRouteFilter.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Der Ressourcentyp.
      **HINWEIS: Diese Eigenschaft wird nicht serialisiert werden. Es kann nur vom Server aufgefüllt werden.**
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-network'
references:
  - uid: '@azure/arm-network.SubResource'
    name: SubResource
    spec.typeScript:
      - name: SubResource
        fullName: SubResource
        uid: '@azure/arm-network.SubResource'
  - uid: '@azure/arm-network.ExpressRouteCircuitPeering[]'
    name: 'ExpressRouteCircuitPeering[]'
    spec.typeScript:
      - name: ExpressRouteCircuitPeering
        fullName: ExpressRouteCircuitPeering
        uid: '@azure/arm-network.ExpressRouteCircuitPeering'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-network.RouteFilterRule[]'
    name: 'RouteFilterRule[]'
    spec.typeScript:
      - name: RouteFilterRule
        fullName: RouteFilterRule
        uid: '@azure/arm-network.RouteFilterRule'
      - name: '[]'
        fullName: '[]'