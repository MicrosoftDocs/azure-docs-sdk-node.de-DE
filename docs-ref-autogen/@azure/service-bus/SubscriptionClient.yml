### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.SubscriptionClient'
    name: SubscriptionClient
    fullName: SubscriptionClient
    children:
      - '@azure/service-bus.SubscriptionClient.addRule'
      - '@azure/service-bus.SubscriptionClient.close'
      - '@azure/service-bus.SubscriptionClient.createReceiver'
      - '@azure/service-bus.SubscriptionClient.createReceiver_1'
      - '@azure/service-bus.SubscriptionClient.defaultRuleName'
      - '@azure/service-bus.SubscriptionClient.entityPath'
      - '@azure/service-bus.SubscriptionClient.getRules'
      - '@azure/service-bus.SubscriptionClient.id'
      - '@azure/service-bus.SubscriptionClient.peek'
      - '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
      - '@azure/service-bus.SubscriptionClient.removeRule'
      - '@azure/service-bus.SubscriptionClient.subscriptionName'
      - '@azure/service-bus.SubscriptionClient.topicName'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="7a091-101">Beschreibt den Client, der ermöglicht die Interaktion mit einem Service Bus-Abonnement an.</span><span class="sxs-lookup"><span data-stu-id="7a091-101">Describes the client that allows interacting with a Service Bus Subscription.</span></span>
      <span data-ttu-id="7a091-102">Verwenden der `createSubscriptionClient` hängt das ServiceBusClient-Objekt, das eine SubscriptionClient instanziieren</span><span class="sxs-lookup"><span data-stu-id="7a091-102">Use the `createSubscriptionClient` function on the ServiceBusClient object to instantiate a SubscriptionClient</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.addRule'
    name: 'addRule(string, boolean | string | CorrelationFilter, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a091-103">Fügt eine Regel für das Abonnement an, wie der angegebene Regelname, Filter und die Aktion definiert.</span><span class="sxs-lookup"><span data-stu-id="7a091-103">Adds a rule on the subscription as defined by the given rule name, filter and action.</span></span>
      <span data-ttu-id="7a091-104">**Hinweis**: Entfernen Sie den Standardfilter "true" für das Abonnement vor dem Hinzufügen einer Regel an.</span><span class="sxs-lookup"><span data-stu-id="7a091-104">**Note**: Remove the default true filter on the subscription before adding a rule.</span></span>
      <span data-ttu-id="7a091-105">Die Regel hinzugefügte wird, andernfalls keine Auswirkungen haben, wie der Filter "true" immer im Abonnement empfangen aller Nachrichten führt.</span><span class="sxs-lookup"><span data-stu-id="7a091-105">Otherwise, the added rule will have no affect as the true filter will always result in the subscription receiving all messages.</span></span>
    syntax:
      content: 'function addRule(ruleName: string, filter: boolean | string | CorrelationFilter, sqlRuleActionExpression?: undefined | string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: <span data-ttu-id="7a091-106">Name der Regel</span><span class="sxs-lookup"><span data-stu-id="7a091-106">Name of the rule</span></span>
        - id: filter
          type:
            - boolean | string | @azure/service-bus.CorrelationFilter
          description: '<span data-ttu-id="7a091-107">Ein boolescher Wert, SQL-Ausdruck oder einen Correlation-Filter.</span><span class="sxs-lookup"><span data-stu-id="7a091-107">A Boolean, SQL expression or a Correlation filter.</span></span> <span data-ttu-id="7a091-108">SQL-Filter-Syntax finden Sie unter [SQLFilter-Syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).</span><span class="sxs-lookup"><span data-stu-id="7a091-108">For SQL Filter syntax, see [SQLFilter syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).</span></span>'
        - id: sqlRuleActionExpression
          type:
            - undefined | string
          description: |
            <span data-ttu-id="7a091-109">Aktion ausführen, wenn die Nachricht dem Filterausdruck entspricht.</span><span class="sxs-lookup"><span data-stu-id="7a091-109">Action to perform if the message satisfies the filtering expression.</span></span> <span data-ttu-id="7a091-110">SQL-Rule-Action-Syntax finden Sie unter [SQLRuleAction-Syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).</span><span class="sxs-lookup"><span data-stu-id="7a091-110">For SQL Rule Action syntax, see [SQLRuleAction syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).</span></span>
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a091-111">Schließt den AMQP-Link für die Empfänger, die von diesem Client erstellt.</span><span class="sxs-lookup"><span data-stu-id="7a091-111">Closes the AMQP link for the receivers created by this client.</span></span>
      <span data-ttu-id="7a091-112">Sobald geschlossen ist, können weder die SubscriptionClient als auch dessen Empfängern für weitere Vorgänge verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7a091-112">Once closed, neither the SubscriptionClient nor its receivers can be used for any further operations.</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a091-113">Erstellt einen Empfänger für den Empfang von Nachrichten aus einem Abonnement keine Sitzungen aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="7a091-113">Creates a Receiver for receiving messages from a Subscription which does not have sessions enabled.</span></span>
      - <span data-ttu-id="7a091-114">Löst Fehler aus, wenn ein open-Empfänger für diese SubscriptionClient bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="7a091-114">Throws error if an open receiver already exists for this SubscriptionClient.</span></span>
      - <span data-ttu-id="7a091-115">Löst `InvalidOperationError` , wenn das Abonnement mit aktivierten Sitzungen enthält (in diesem Fall verwenden Sie die Überladung dieser Methode die akzeptiert `sessionOptions` Argument)</span><span class="sxs-lookup"><span data-stu-id="7a091-115">Throws `InvalidOperationError` if the Subscription has sessions enabled (in which case, use the overload of this method which takes `sessionOptions` argument)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            <span data-ttu-id="7a091-116">Eine Enumeration, der angibt, des Modus, in dem Nachrichten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="7a091-116">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="7a091-117">Dabei sind folgende Werte möglich:</span><span class="sxs-lookup"><span data-stu-id="7a091-117">Possible values are:</span></span>
            - <span data-ttu-id="7a091-118">`ReceiveMode.peekLock`: Sobald eine Nachricht in diesem Modus empfangen wird, hat der Empfänger eine Sperre für die Nachricht für einen bestimmten Zeitraum an.</span><span class="sxs-lookup"><span data-stu-id="7a091-118">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="7a091-119">Wird die Nachricht zu diesem Zeitpunkt nicht ausgeglichen, gelangt er auf Service Bus durch das nächste abgerufen werden receive-Methode.</span><span class="sxs-lookup"><span data-stu-id="7a091-119">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="7a091-120">`ReceiveMode.receiveAndDelete`: In diesem Modus empfangene Nachrichten abrufen von Service Bus automatisch entfernt.</span><span class="sxs-lookup"><span data-stu-id="7a091-120">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a091-121">Erstellt einen Empfänger an, für das Abonnement empfangen von Nachrichten aus einer Sitzung aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="7a091-121">Creates a Receiver for receiving messages from a session enabled Subscription.</span></span> <span data-ttu-id="7a091-122">Wenn keine SessionId übergeben wird, wird eine zufällige Sitzung zwischen den verfügbaren Sitzungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="7a091-122">When no sessionId is given, a random session among the available sessions is used.</span></span>
      - <span data-ttu-id="7a091-123">Löst Fehler aus, wenn ein open-Empfänger für die angegebene SessionId vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="7a091-123">Throws error if an open receiver already exists for given sessionId.</span></span>
      - <span data-ttu-id="7a091-124">Löst `SessionCannotBeLockedError` verfügt das Abonnement nicht aktivierten Sitzungen (übergeben Sie in diesem Fall nicht die `sessionOptions` Argument) oder Service Bus nicht in der Sitzung (in der Groß-/Kleinschreibung versuchen Sie es später noch Mal) eine Sperre erhalten werden kann</span><span class="sxs-lookup"><span data-stu-id="7a091-124">Throws `SessionCannotBeLockedError` if the Subscription does not have sessions enabled (in which case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on the session (in which case try again after some time)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            <span data-ttu-id="7a091-125">Eine Enumeration, der angibt, des Modus, in dem Nachrichten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="7a091-125">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="7a091-126">Dabei sind folgende Werte möglich:</span><span class="sxs-lookup"><span data-stu-id="7a091-126">Possible values are:</span></span>
            - <span data-ttu-id="7a091-127">`ReceiveMode.peekLock`: Sobald eine Nachricht in diesem Modus empfangen wird, hat der Empfänger eine Sperre für die Nachricht für einen bestimmten Zeitraum an.</span><span class="sxs-lookup"><span data-stu-id="7a091-127">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="7a091-128">Wird die Nachricht zu diesem Zeitpunkt nicht ausgeglichen, gelangt er auf Service Bus durch das nächste abgerufen werden receive-Methode.</span><span class="sxs-lookup"><span data-stu-id="7a091-128">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="7a091-129">`ReceiveMode.receiveAndDelete`: In diesem Modus empfangene Nachrichten abrufen von Service Bus automatisch entfernt.</span><span class="sxs-lookup"><span data-stu-id="7a091-129">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            <span data-ttu-id="7a091-130">Optionen, die "SessionId" und die Dauer der Sperre der automatischen Verlängerung für sitzungsempfänger bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="7a091-130">Options to provide sessionId and duration of automatic lock renewal for the session receiver.</span></span>
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.defaultRuleName'
    name: defaultRuleName
    fullName: defaultRuleName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="7a091-131">Der Name der Standardregel für das Abonnement.</span><span class="sxs-lookup"><span data-stu-id="7a091-131">The name of the default rule on the subscription.</span></span>
    syntax:
      content: 'defaultRuleName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7a091-132">Der Pfad für die Service Bus-Abonnements, die für die dieser Client erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="7a091-132">The path for the Service Bus Subscription for which this client is created.</span></span>'
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.getRules'
    name: getRules()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a091-133">Ruft alle Regeln, die dem Abonnement zugeordneten</span><span class="sxs-lookup"><span data-stu-id="7a091-133">Gets all rules associated with the subscription</span></span>'
    syntax:
      content: function getRules()
      parameters: []
      return:
        type:
          - 'Promise<@azure/service-bus.RuleDescription[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="7a091-134">Ein eindeutiger Bezeichner für diesen Client.</span><span class="sxs-lookup"><span data-stu-id="7a091-134">A unique identifier for this client.</span></span>
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a091-135">Ruft das nächste Batch von aktiven Nachrichten (einschließlich aber nicht unzustellbaren Nachrichten verzögert).</span><span class="sxs-lookup"><span data-stu-id="7a091-135">Fetches the next batch of active messages (including deferred but not deadlettered messages).</span></span>
      - <span data-ttu-id="7a091-136">Der erste Aufruf `peek()` abruft, die erste aktive Nachricht.</span><span class="sxs-lookup"><span data-stu-id="7a091-136">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="7a091-137">Jeder nachfolgender Aufruf ruft die nachfolgende Meldung ab.</span><span class="sxs-lookup"><span data-stu-id="7a091-137">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="7a091-138">Im Gegensatz zu einem `received` Nachricht `peeked` Nachricht ist eine schreibgeschützte Version der Nachricht.</span><span class="sxs-lookup"><span data-stu-id="7a091-138">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="7a091-139">Ist nicht möglich `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="7a091-139">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="7a091-140">Die Sperre kann nicht verlängert werden.</span><span class="sxs-lookup"><span data-stu-id="7a091-140">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a091-141">Stellt eine Einsicht in die gewünschte Anzahl von aktiven Nachrichten (einschließlich aber nicht unzustellbaren Nachrichten verzögert) aus der angegebenen Sequenznummer.</span><span class="sxs-lookup"><span data-stu-id="7a091-141">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number.</span></span>
      - <span data-ttu-id="7a091-142">Im Gegensatz zu einem `received` Nachricht `peeked` Nachricht ist eine schreibgeschützte Version der Nachricht.</span><span class="sxs-lookup"><span data-stu-id="7a091-142">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="7a091-143">Ist nicht möglich `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="7a091-143">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="7a091-144">Die Sperre kann nicht verlängert werden.</span><span class="sxs-lookup"><span data-stu-id="7a091-144">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: '<span data-ttu-id="7a091-145">Die Sequenznummer, aus denen die Nachricht gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7a091-145">The sequence number from where to read the message.</span></span>'
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.removeRule'
    name: removeRule(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a091-146">Entfernt die Regel für das Abonnement, das durch den Regelnamen der angegebenen identifiziert.</span><span class="sxs-lookup"><span data-stu-id="7a091-146">Removes the rule on the subscription identified by the given rule name.</span></span>
      <span data-ttu-id="7a091-147">**Vorsicht**: Wenn alle Regeln für ein Abonnement entfernt werden, erhält das Abonnement keine weiteren Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="7a091-147">**Caution**: If all rules on a subscription are removed, then the subscription will not receive any more messages.</span></span>
    syntax:
      content: 'function removeRule(ruleName: string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: |+

      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.subscriptionName'
    name: subscriptionName
    fullName: subscriptionName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7a091-148">Der Name des der Service Bus-Abonnements, die für die dieser Client erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="7a091-148">The name of the Service Bus Subscription for which this client is created.</span></span>'
    syntax:
      content: 'subscriptionName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.topicName'
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7a091-149">Der Name der Service Bus-Thema, dessen Abonnements, wird dieser Client erstellt.</span><span class="sxs-lookup"><span data-stu-id="7a091-149">The name of the Service Bus Topic for whose Subscription, this client is created.</span></span>'
    syntax:
      content: 'topicName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
references:
  - uid: boolean | string | @azure/service-bus.CorrelationFilter
    name: CorrelationFilter
    spec.typeScript:
      - name: 'boolean | string | '
        fullName: 'boolean | string | '
      - name: CorrelationFilter
        fullName: CorrelationFilter
        uid: '@azure/service-bus.CorrelationFilter'
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: 'Promise<@azure/service-bus.RuleDescription[]>'
    name: 'RuleDescription[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RuleDescription
        fullName: RuleDescription
        uid: '@azure/service-bus.RuleDescription'
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'