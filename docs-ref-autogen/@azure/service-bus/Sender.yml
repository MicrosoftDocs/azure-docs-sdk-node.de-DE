### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Sender'
    name: Sender
    fullName: Sender
    children:
      - '@azure/service-bus.Sender.cancelScheduledMessage'
      - '@azure/service-bus.Sender.cancelScheduledMessages'
      - '@azure/service-bus.Sender.close'
      - '@azure/service-bus.Sender.isClosed'
      - '@azure/service-bus.Sender.scheduleMessage'
      - '@azure/service-bus.Sender.scheduleMessages'
      - '@azure/service-bus.Sender.send'
      - '@azure/service-bus.Sender.sendBatch'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="40f72-101">Die Absender-Klasse kann verwendet werden, zum Senden von Nachrichten, planen die Nachrichten, die zu einem späteren Zeitpunkt gesendet werden, und solche geplanten Nachrichten abgebrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="40f72-101">The Sender class can be used to send messages, schedule messages to be sent at a later time and cancel such scheduled messages.</span></span>
      <span data-ttu-id="40f72-102">Verwenden der `createSender` Funktion für die QueueClient oder TopicClient, um einen Sender zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="40f72-102">Use the `createSender` function on the QueueClient or TopicClient to instantiate a Sender.</span></span>
      <span data-ttu-id="40f72-103">Die Absender-Klasse ist eine Abstraktion über die zugrunde liegenden AMQP-Sender-Verbindung.</span><span class="sxs-lookup"><span data-stu-id="40f72-103">The Sender class is an abstraction over the underlying AMQP sender link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessage'
    name: cancelScheduledMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="40f72-104">Bricht eine Nachricht, die geplant wurde, auf eine Service Bus-Warteschlange oder ein Abonnement angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="40f72-104">Cancels a message that was scheduled to appear on a ServiceBus Queue/Subscription.</span></span>'
    syntax:
      content: 'function cancelScheduledMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: '<span data-ttu-id="40f72-105">Die Sequenznummer der Nachricht, die abgebrochen werden.</span><span class="sxs-lookup"><span data-stu-id="40f72-105">The sequence number of the message to be cancelled.</span></span>'
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessages'
    name: 'cancelScheduledMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="40f72-106">Bricht die mehrere Nachrichten, die laut auf eine Service Bus-Warteschlange oder ein Abonnement angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="40f72-106">Cancels multiple messages that were scheduled to appear on a ServiceBus Queue/Subscription.</span></span>'
    syntax:
      content: 'function cancelScheduledMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: '<span data-ttu-id="40f72-107">Ein Array von Sequenznummern der Nachrichten, die abgebrochen werden.</span><span class="sxs-lookup"><span data-stu-id="40f72-107">An Array of sequence numbers of the messages to be cancelled.</span></span>'
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="40f72-108">Schließt den zugrunde liegenden AMQP-Sender-Link.</span><span class="sxs-lookup"><span data-stu-id="40f72-108">Closes the underlying AMQP sender link.</span></span>
      <span data-ttu-id="40f72-109">Sobald geschlossen, kann der Absender für weitere Vorgänge verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="40f72-109">Once closed, the sender cannot be used for any further operations.</span></span>
      <span data-ttu-id="40f72-110">Verwenden der `createSender` Funktion für die QueueClient oder TopicClient, instanziieren Sie einen neuen Absender</span><span class="sxs-lookup"><span data-stu-id="40f72-110">Use the `createSender` function on the QueueClient or TopicClient to instantiate a new Sender</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="40f72-111">Gibt `true` Wenn entweder der Absender oder der Client, der es erstellt geschlossen wurde</span><span class="sxs-lookup"><span data-stu-id="40f72-111">Returns `true` if either the sender or the client that created it has been closed</span></span>'
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessage'
    name: 'scheduleMessage(Date, SendableMessageInfo)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="40f72-112">Zeitpläne, die angegebenen Meldung, die auf Service Bus-Warteschlange/Abonnement zu einem späteren Zeitpunkt angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="40f72-112">Schedules given message to appear on Service Bus Queue/Subscription at a later time.</span></span>'
    syntax:
      content: 'function scheduleMessage(scheduledEnqueueTimeUtc: Date, message: SendableMessageInfo)'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: '<span data-ttu-id="40f72-113">Die UTC-Zeit, an der die Meldung in die Warteschlange eingereiht werden soll.</span><span class="sxs-lookup"><span data-stu-id="40f72-113">The UTC time at which the message should be enqueued.</span></span>'
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: '<span data-ttu-id="40f72-114">Die Meldung, die geplant werden muss.</span><span class="sxs-lookup"><span data-stu-id="40f72-114">The message that needs to be scheduled.</span></span>'
      return:
        type:
          - Promise<Long>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessages'
    name: 'scheduleMessages(Date, SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="40f72-115">Zeitpläne erhält Nachrichten für Service Bus-Warteschlange/Abonnement zu einem späteren Zeitpunkt angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="40f72-115">Schedules given messages to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessages(scheduledEnqueueTimeUtc: Date, messages: SendableMessageInfo[])'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: '<span data-ttu-id="40f72-116">Die UTC-Zeit, an der die Nachrichten in die Warteschlange eingereiht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="40f72-116">The UTC time at which the messages should be enqueued.</span></span>'
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: '<span data-ttu-id="40f72-117">Array von Meldungen, die durchgeführt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="40f72-117">Array of Messages that need to be scheduled.</span></span>'
      return:
        type:
          - 'Promise<Long[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.send'
    name: send(SendableMessageInfo)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="40f72-118">Sendet die angegebene Meldung an, nach dem Erstellen einer AMQP-senderlink, sofern er noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="40f72-118">Sends the given message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      <span data-ttu-id="40f72-119">Zum Senden einer Nachricht an eine `session` und/oder `partition` aktiviert "oder" Topic, Festlegen der `sessionId` und/oder `partitionKey` bzw. Eigenschaften der Nachricht.</span><span class="sxs-lookup"><span data-stu-id="40f72-119">To send a message to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the message.</span></span>
    syntax:
      content: 'function send(message: SendableMessageInfo)'
      parameters:
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="40f72-120">Zu sendende Nachricht.</span><span class="sxs-lookup"><span data-stu-id="40f72-120">Message to send.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.sendBatch'
    name: 'sendBatch(SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="40f72-121">Die bestimmten Nachrichten in einem einzelnen Batch also in eine einzelne AMQP-Nachricht gesendet, nachdem eine AMQP-senderlink erstellen, sofern er noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="40f72-121">Sends the given messages in a single batch i.e. in a single AMQP message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      - <span data-ttu-id="40f72-122">Zum Senden von Nachrichten an eine `session` und/oder `partition` aktiviert "oder" Topic, Festlegen der `sessionId` und/oder `partitionKey` Eigenschaften bzw. in den Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="40f72-122">To send messages to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the messages.</span></span>
      - <span data-ttu-id="40f72-123">Dabei sollten alle Nachrichten im Batch weist den gleichen `sessionId` (bei Verwendung von Sitzungen) und demselben `parititionKey` (bei Verwendung von Partitionen).</span><span class="sxs-lookup"><span data-stu-id="40f72-123">When doing so, all messages in the batch should have the same `sessionId` (if using sessions) and the same `parititionKey` (if using paritions).</span></span>
    syntax:
      content: 'function sendBatch(messages: SendableMessageInfo[])'
      parameters:
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: '<span data-ttu-id="40f72-124">Ein Array von SendableMessageInfo-Objekten, die in einer Meldung gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="40f72-124">An array of SendableMessageInfo objects to be sent in a Batch message.</span></span>'
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SendableMessageInfo'
    name: SendableMessageInfo
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
  - uid: '@azure/service-bus.SendableMessageInfo[]'
    name: 'SendableMessageInfo[]'
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
      - name: '[]'
        fullName: '[]'