### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.QueueClient'
    name: QueueClient
    fullName: QueueClient
    children:
      - '@azure/service-bus.QueueClient.close'
      - '@azure/service-bus.QueueClient.createReceiver'
      - '@azure/service-bus.QueueClient.createReceiver_1'
      - '@azure/service-bus.QueueClient.createSender'
      - '@azure/service-bus.QueueClient.entityPath'
      - '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
      - '@azure/service-bus.QueueClient.id'
      - '@azure/service-bus.QueueClient.peek'
      - '@azure/service-bus.QueueClient.peekBySequenceNumber'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="184bd-101">Beschreibt den Client, der ermöglicht die Interaktion mit Service Bus-Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="184bd-101">Describes the client that allows interacting with a Service Bus Queue.</span></span>
      <span data-ttu-id="184bd-102">Verwenden der `createQueueClient` Funktion für das ServiceBusClient-Objekt, um einen QueueClient zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="184bd-102">Use the `createQueueClient` function on the ServiceBusClient object to instantiate a QueueClient</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="184bd-103">Schließt den AMQP-Links für Absender/Empfänger, die von diesem Client erstellt.</span><span class="sxs-lookup"><span data-stu-id="184bd-103">Closes all the AMQP links for sender/receivers created by this client.</span></span>
      <span data-ttu-id="184bd-104">Sobald geschlossen ist, können weder die QueueClient als auch der Sender/Empfänger für weitere Vorgänge verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="184bd-104">Once closed, neither the QueueClient nor its sender/receivers can be used for any further operations.</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="184bd-105">Erstellt einen Empfänger für den Empfang von Nachrichten aus einer Warteschlange, die keine Sitzungen aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="184bd-105">Creates a Receiver for receiving messages from a Queue which does not have sessions enabled.</span></span>
      - <span data-ttu-id="184bd-106">Löst Fehler aus, wenn ein open-Empfänger für diese QueueClient bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="184bd-106">Throws error if an open receiver already exists for this QueueClient.</span></span>
      - <span data-ttu-id="184bd-107">Löst `InvalidOperationError` , wenn die Warteschlange Sitzungen aktiviert wurde (in diesem Fall verwenden Sie die Überladung dieser Methode die akzeptiert `sessionOptions` Argument)</span><span class="sxs-lookup"><span data-stu-id="184bd-107">Throws `InvalidOperationError` if the Queue has sessions enabled (in which case, use the overload of this method which takes `sessionOptions` argument)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            <span data-ttu-id="184bd-108">Eine Enumeration, der angibt, des Modus, in dem Nachrichten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="184bd-108">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="184bd-109">Dabei sind folgende Werte möglich:</span><span class="sxs-lookup"><span data-stu-id="184bd-109">Possible values are:</span></span>
            - <span data-ttu-id="184bd-110">`ReceiveMode.peekLock`: Sobald eine Nachricht in diesem Modus empfangen wird, hat der Empfänger eine Sperre für die Nachricht für einen bestimmten Zeitraum an.</span><span class="sxs-lookup"><span data-stu-id="184bd-110">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="184bd-111">Wird die Nachricht zu diesem Zeitpunkt nicht ausgeglichen, gelangt er auf Service Bus durch das nächste abgerufen werden receive-Methode.</span><span class="sxs-lookup"><span data-stu-id="184bd-111">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="184bd-112">`ReceiveMode.receiveAndDelete`: In diesem Modus empfangene Nachrichten abrufen von Service Bus automatisch entfernt.</span><span class="sxs-lookup"><span data-stu-id="184bd-112">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="184bd-113">Erstellt einen Empfänger an, für die Warteschlange empfangen von Nachrichten aus einer Sitzung aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="184bd-113">Creates a Receiver for receiving messages from a session enabled Queue.</span></span> <span data-ttu-id="184bd-114">Wenn keine SessionId übergeben wird, wird eine zufällige Sitzung zwischen den verfügbaren Sitzungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="184bd-114">When no sessionId is given, a random session among the available sessions is used.</span></span>
      - <span data-ttu-id="184bd-115">Löst Fehler aus, wenn ein open-Empfänger für die angegebene SessionId vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="184bd-115">Throws error if an open receiver already exists for given sessionId.</span></span>
      - <span data-ttu-id="184bd-116">Löst `SessionCannotBeLockedError` , wenn die Warteschlange keine Sitzungen aktiviert (übergeben Sie in diesem Fall nicht die `sessionOptions` Argument) oder Service Bus nicht in der Sitzung (in der Groß-/Kleinschreibung versuchen Sie es später noch Mal) eine Sperre erhalten werden kann</span><span class="sxs-lookup"><span data-stu-id="184bd-116">Throws `SessionCannotBeLockedError` if the Queue does not have sessions enabled (in which case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on the session (in which case try again after some time)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            <span data-ttu-id="184bd-117">Eine Enumeration, der angibt, des Modus, in dem Nachrichten empfangen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="184bd-117">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="184bd-118">Dabei sind folgende Werte möglich:</span><span class="sxs-lookup"><span data-stu-id="184bd-118">Possible values are:</span></span>
            - <span data-ttu-id="184bd-119">`ReceiveMode.peekLock`: Sobald eine Nachricht in diesem Modus empfangen wird, hat der Empfänger eine Sperre für die Nachricht für einen bestimmten Zeitraum an.</span><span class="sxs-lookup"><span data-stu-id="184bd-119">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="184bd-120">Wird die Nachricht zu diesem Zeitpunkt nicht ausgeglichen, gelangt er auf Service Bus durch das nächste abgerufen werden receive-Methode.</span><span class="sxs-lookup"><span data-stu-id="184bd-120">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="184bd-121">`ReceiveMode.receiveAndDelete`: In diesem Modus empfangene Nachrichten abrufen von Service Bus automatisch entfernt.</span><span class="sxs-lookup"><span data-stu-id="184bd-121">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            <span data-ttu-id="184bd-122">Optionen, die "SessionId" und die Dauer der Sperre der automatischen Verlängerung für sitzungsempfänger bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="184bd-122">Options to provide sessionId and duration of automatic lock renewal for the session receiver.</span></span>
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createSender'
    name: createSender()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="184bd-123">Erstellt einen Sender zum Senden von Nachrichten, das Nachrichten senden, zu einem späteren Zeitpunkt planen und diese geplante Nachrichten abgebrochen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="184bd-123">Creates a Sender to be used for sending messages, scheduling messages to be sent at a later time and cancelling such scheduled messages.</span></span>
      - <span data-ttu-id="184bd-124">Löst Fehler aus, wenn es sich bei ein geöffneter Absender für diese QueueClient bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="184bd-124">Throws error if an open sender already exists for this QueueClient.</span></span>
    syntax:
      content: function createSender()
      parameters: []
      return:
        type:
          - '@azure/service-bus.Sender'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="184bd-125">Der Pfad für die Service Bus-Warteschlange, die für die dieser Client erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="184bd-125">The path for the Service Bus Queue for which this client is created.</span></span>'
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
    name: getDeadLetterQueuePath(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="184bd-126">Gibt zurück, der entsprechenden Dead-Letter-Warteschlangenname für die Warteschlange mit dem angegebenen Namen dargestellt.</span><span class="sxs-lookup"><span data-stu-id="184bd-126">Returns the corresponding dead letter queue name for the queue represented by the given name.</span></span>
      <span data-ttu-id="184bd-127">Verwenden Sie diese in die `createQueueClient` funktionieren auf die `ServiceBusClient` Instanz zum Empfangen von Nachrichten aus einer Warteschlange für unzustellbare Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="184bd-127">Use this in the `createQueueClient` function on the `ServiceBusClient` instance to receive messages from a dead letter queue.</span></span>
    syntax:
      content: 'static function getDeadLetterQueuePath(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |
            <span data-ttu-id="184bd-128">Der Name der Warteschlange, deren Dead-Letter-Entsprechung Name abgerufen werden</span><span class="sxs-lookup"><span data-stu-id="184bd-128">Name of the queue whose dead letter counterpart's name is being fetched</span></span>
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="184bd-129">Ein eindeutiger Bezeichner für diesen Client.</span><span class="sxs-lookup"><span data-stu-id="184bd-129">A unique identifier for this client.</span></span>
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="184bd-130">Ruft das nächste Batch von aktiven Nachrichten (einschließlich aber nicht unzustellbaren Nachrichten verzögert).</span><span class="sxs-lookup"><span data-stu-id="184bd-130">Fetches the next batch of active messages (including deferred but not deadlettered messages).</span></span>
      - <span data-ttu-id="184bd-131">Der erste Aufruf `peek()` abruft, die erste aktive Nachricht.</span><span class="sxs-lookup"><span data-stu-id="184bd-131">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="184bd-132">Jeder nachfolgender Aufruf ruft die nachfolgende Meldung ab.</span><span class="sxs-lookup"><span data-stu-id="184bd-132">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="184bd-133">Im Gegensatz zu einem `received` Nachricht `peeked` Nachricht ist eine schreibgeschützte Version der Nachricht.</span><span class="sxs-lookup"><span data-stu-id="184bd-133">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="184bd-134">Ist nicht möglich `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="184bd-134">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="184bd-135">Die Sperre kann nicht verlängert werden.</span><span class="sxs-lookup"><span data-stu-id="184bd-135">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="184bd-136">Stellt eine Einsicht in die gewünschte Anzahl von aktiven Nachrichten (einschließlich aber nicht unzustellbaren Nachrichten verzögert) aus der angegebenen Sequenznummer.</span><span class="sxs-lookup"><span data-stu-id="184bd-136">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number.</span></span>
      - <span data-ttu-id="184bd-137">Im Gegensatz zu einem `received` Nachricht `peeked` Nachricht ist eine schreibgeschützte Version der Nachricht.</span><span class="sxs-lookup"><span data-stu-id="184bd-137">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="184bd-138">Ist nicht möglich `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="184bd-138">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="184bd-139">Die Sperre kann nicht verlängert werden.</span><span class="sxs-lookup"><span data-stu-id="184bd-139">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: '<span data-ttu-id="184bd-140">Die Sequenznummer, aus denen die Nachricht gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="184bd-140">The sequence number from where to read the message.</span></span>'
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: '@azure/service-bus.Sender'
    name: Sender
    spec.typeScript:
      - name: Sender
        fullName: Sender
        uid: '@azure/service-bus.Sender'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'