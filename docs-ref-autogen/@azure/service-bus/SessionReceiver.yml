### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    fullName: SessionReceiver
    children:
      - '@azure/service-bus.SessionReceiver.close'
      - '@azure/service-bus.SessionReceiver.getMessageIterator'
      - '@azure/service-bus.SessionReceiver.getState'
      - '@azure/service-bus.SessionReceiver.isClosed'
      - '@azure/service-bus.SessionReceiver.isReceivingMessages'
      - '@azure/service-bus.SessionReceiver.peek'
      - '@azure/service-bus.SessionReceiver.peekBySequenceNumber'
      - '@azure/service-bus.SessionReceiver.receiveDeferredMessage'
      - '@azure/service-bus.SessionReceiver.receiveDeferredMessages'
      - '@azure/service-bus.SessionReceiver.receiveMessages'
      - '@azure/service-bus.SessionReceiver.receiveMode'
      - '@azure/service-bus.SessionReceiver.registerMessageHandler'
      - '@azure/service-bus.SessionReceiver.renewSessionLock'
      - '@azure/service-bus.SessionReceiver.sessionId'
      - '@azure/service-bus.SessionReceiver.sessionLockedUntilUtc'
      - '@azure/service-bus.SessionReceiver.setState'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="8aa14-101">Die SessionReceiver-Klasse kann verwendet werden, zum Empfangen von Nachrichten aus einer Sitzung aktiviert Warteschlange oder einem Abonnement in einem Batch oder durch das Registrieren von Handlern.</span><span class="sxs-lookup"><span data-stu-id="8aa14-101">The SessionReceiver class can be used to receive messages from a session enabled Queue or Subscription in a batch or by registering handlers.</span></span>
      <span data-ttu-id="8aa14-102">Verwenden der `createReceiver` Funktion auf die QueueClient und SubscriptionClient eine SessionReceiver instanziieren.</span><span class="sxs-lookup"><span data-stu-id="8aa14-102">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a SessionReceiver.</span></span>
      <span data-ttu-id="8aa14-103">Die SessionReceiver-Klasse ist eine Abstraktion der zugrunde liegenden AMQP-Empfänger-Link.</span><span class="sxs-lookup"><span data-stu-id="8aa14-103">The SessionReceiver class is an abstraction over the underlying AMQP receiver link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8aa14-104">Schließt den zugrunde liegenden AMQP-empfängerlink an.</span><span class="sxs-lookup"><span data-stu-id="8aa14-104">Closes the underlying AMQP receiver link.</span></span>
      <span data-ttu-id="8aa14-105">Sobald geschlossen, kann der Empfänger für weitere Vorgänge verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8aa14-105">Once closed, the receiver cannot be used for any further operations.</span></span>
      <span data-ttu-id="8aa14-106">Verwenden der `createReceiver` Funktion auf die QueueClient und SubscriptionClient instanziieren Sie einen neuen Empfänger</span><span class="sxs-lookup"><span data-stu-id="8aa14-106">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a new Receiver</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.getMessageIterator'
    name: getMessageIterator()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="8aa14-107">Ruft eine Async-Iterator über Nachrichten vom Empfänger ab.</span><span class="sxs-lookup"><span data-stu-id="8aa14-107">Gets an async iterator over messages from the receiver.</span></span>
      <span data-ttu-id="8aa14-108">Löst einen Fehler an, wenn es einer anderen receive-Vorgang wird ausgeführt, auf dem gleichen Empfänger.</span><span class="sxs-lookup"><span data-stu-id="8aa14-108">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="8aa14-109">Wenn Sie nicht sicher sind prüfen, ob vorhanden ist, einen anderen Vorgang ausgeführt wird empfangen, die `isReceivingMessages` Eigenschaft für den Empfänger.</span><span class="sxs-lookup"><span data-stu-id="8aa14-109">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>

      <span data-ttu-id="8aa14-110">Wenn der Iterator nicht über eine Minute, eine neue Nachricht im abzurufenden kann `undefined` zurückgegeben werden</span><span class="sxs-lookup"><span data-stu-id="8aa14-110">If the iterator is not able to fetch a new message in over a minute, `undefined` will be returned</span></span>
    syntax:
      content: function getMessageIterator()
      parameters: []
      return:
        type:
          - AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.getState'
    name: getState()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="8aa14-111">Ruft den Status der Sitzung ab.</span><span class="sxs-lookup"><span data-stu-id="8aa14-111">Gets the state of the Session.</span></span> <span data-ttu-id="8aa14-112">Weitere Informationen zum Sitzungsstatus finden Sie unter [Sitzungszustand](https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state)</span><span class="sxs-lookup"><span data-stu-id="8aa14-112">For more on session states, see [Session State](https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state)</span></span>'
    syntax:
      content: function getState()
      parameters: []
      return:
        type:
          - Promise<any>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="8aa14-113">Gibt `true` , wenn der Empfänger geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="8aa14-113">Returns `true` if the receiver is closed.</span></span> <span data-ttu-id="8aa14-114">Dies kann auftreten, entweder weil der Empfänger selbst wurde geschlossen oder der Client erstellt, die es geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="8aa14-114">This can happen either because the receiver itself has been closed or the client that created it has been closed.</span></span>'
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.isReceivingMessages'
    name: isReceivingMessages()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8aa14-115">Gibt an, ob der Empfänger derzeit Nachrichten davon empfängt.</span><span class="sxs-lookup"><span data-stu-id="8aa14-115">Indicates whether the receiver is currently receiving messages or not.</span></span>
      <span data-ttu-id="8aa14-116">Wenn wahr wird zurückgegeben, neue `registerMessageHandler()` oder `receiveMessages()` Aufrufe können nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="8aa14-116">When this returns true, new `registerMessageHandler()` or `receiveMessages()` calls cannot be made.</span></span>
    syntax:
      content: function isReceivingMessages()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8aa14-117">Ruft das nächste Batch von aktiven Nachrichten (einschließlich aber nicht unzustellbaren Nachrichten verzögert) in der aktuellen Sitzung.</span><span class="sxs-lookup"><span data-stu-id="8aa14-117">Fetches the next batch of active messages (including deferred but not deadlettered messages) in the current session.</span></span>
      - <span data-ttu-id="8aa14-118">Der erste Aufruf `peek()` abruft, die erste aktive Nachricht.</span><span class="sxs-lookup"><span data-stu-id="8aa14-118">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="8aa14-119">Jeder nachfolgender Aufruf ruft die nachfolgende Meldung ab.</span><span class="sxs-lookup"><span data-stu-id="8aa14-119">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="8aa14-120">Im Gegensatz zu einem `received` Nachricht `peeked` Nachricht ist eine schreibgeschützte Version der Nachricht.</span><span class="sxs-lookup"><span data-stu-id="8aa14-120">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="8aa14-121">Ist nicht möglich `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="8aa14-121">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="8aa14-122">Die Sperre kann nicht verlängert werden.</span><span class="sxs-lookup"><span data-stu-id="8aa14-122">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: <span data-ttu-id="8aa14-123">Die maximale Anzahl von einsehbaren Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="8aa14-123">The maximum number of messages to peek.</span></span> <span data-ttu-id="8aa14-124">Standardwert `1`.</span><span class="sxs-lookup"><span data-stu-id="8aa14-124">Default value `1`.</span></span>
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8aa14-125">Stellt eine Einsicht in die gewünschte Anzahl von aktiven Nachrichten (einschließlich aber nicht unzustellbaren Nachrichten verzögert) aus der angegebenen Sequenznummer in der aktuellen Sitzung.</span><span class="sxs-lookup"><span data-stu-id="8aa14-125">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number in the current session.</span></span>
      - <span data-ttu-id="8aa14-126">Im Gegensatz zu einem `received` Nachricht `peeked` Nachricht ist eine schreibgeschützte Version der Nachricht.</span><span class="sxs-lookup"><span data-stu-id="8aa14-126">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="8aa14-127">Ist nicht möglich `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="8aa14-127">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="8aa14-128">Die Sperre kann nicht verlängert werden.</span><span class="sxs-lookup"><span data-stu-id="8aa14-128">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: '<span data-ttu-id="8aa14-129">Die Sequenznummer, aus denen die Nachricht gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8aa14-129">The sequence number from where to read the message.</span></span>'
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.receiveDeferredMessage'
    name: receiveDeferredMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="8aa14-130">Gibt eine Zusicherung, die zu einer verzögerten Nachricht identifizierte führt den angegebenen `sequenceNumber`.</span><span class="sxs-lookup"><span data-stu-id="8aa14-130">Returns a promise that resolves to a deferred message identified by the given `sequenceNumber`.</span></span>'
    syntax:
      content: 'function receiveDeferredMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: '<span data-ttu-id="8aa14-131">Die Sequenznummer der Nachricht, die empfangen werden muss.</span><span class="sxs-lookup"><span data-stu-id="8aa14-131">The sequence number of the message that needs to be received.</span></span>'
      return:
        type:
          - Promise<@azure/service-bus.ServiceBusMessage | undefined>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.receiveDeferredMessages'
    name: 'receiveDeferredMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="8aa14-132">Gibt eine Zusicherung, die in ein Array von verzögerte Nachrichten identifiziert aufgelöst wird vom `sequenceNumbers`.</span><span class="sxs-lookup"><span data-stu-id="8aa14-132">Returns a promise that resolves to an array of deferred messages identified by given `sequenceNumbers`.</span></span>'
    syntax:
      content: 'function receiveDeferredMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: '<span data-ttu-id="8aa14-133">Ein Array von Sequenznummern für Nachrichten, die empfangen werden müssen.</span><span class="sxs-lookup"><span data-stu-id="8aa14-133">An array of sequence numbers for the messages that need to be received.</span></span>'
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.receiveMessages'
    name: 'receiveMessages(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="8aa14-134">Gibt eine Zusicherung, die in ein Array der Nachrichten aufgelöst wird aufgrund der Anzahl und Timeout über eine AMQP-Empfänger anhand aus einer Warteschlange/Abonnement verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="8aa14-134">Returns a promise that resolves to an array of messages based on given count and timeout over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="8aa14-135">Löst einen Fehler an, wenn es einer anderen receive-Vorgang wird ausgeführt, auf dem gleichen Empfänger.</span><span class="sxs-lookup"><span data-stu-id="8aa14-135">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="8aa14-136">Wenn Sie nicht sicher sind prüfen, ob vorhanden ist, einen anderen Vorgang ausgeführt wird empfangen, die `isReceivingMessages` Eigenschaft für den Empfänger.</span><span class="sxs-lookup"><span data-stu-id="8aa14-136">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function receiveMessages(maxMessageCount: number, maxWaitTimeInSeconds?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - number
          description: <span data-ttu-id="8aa14-137">Die maximale Anzahl von Nachrichten zum Empfangen von Warteschlange/Abonnement.</span><span class="sxs-lookup"><span data-stu-id="8aa14-137">The maximum number of messages to receive from Queue/Subscription.</span></span>
        - id: maxWaitTimeInSeconds
          type:
            - undefined | number
          description: |-
            <span data-ttu-id="8aa14-138">Die maximale Wartezeit in Sekunden, die für die der Empfänger warten soll, um die erste Nachricht zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="8aa14-138">The maximum wait time in seconds for which the Receiver should wait to receive the first message.</span></span> <span data-ttu-id="8aa14-139">Wenn zu diesem Zeitpunkt keine Meldung empfangen wird, ruft die zurückgegebene Zusage aufgelöst, auf ein leeres Array ab.</span><span class="sxs-lookup"><span data-stu-id="8aa14-139">If no message is received by this time, the returned promise gets resolved to an empty array.</span></span>
            - <span data-ttu-id="8aa14-140">**Standard**: `60` Sekunden.</span><span class="sxs-lookup"><span data-stu-id="8aa14-140">**Default**: `60` seconds.</span></span>
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.receiveMode'
    name: receiveMode
    fullName: receiveMode
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="8aa14-141">Gibt die ReceiveMode dieser Empfänger an.</span><span class="sxs-lookup"><span data-stu-id="8aa14-141">Denotes receiveMode of this receiver.</span></span>
    syntax:
      content: 'receiveMode: ReceiveMode'
      return:
        type:
          - '@azure/service-bus.ReceiveMode'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.registerMessageHandler'
    name: 'registerMessageHandler(OnMessage, OnError, SessionMessageHandlerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="8aa14-142">Registriert Ereignishandler für den Umgang mit den eingehenden Datenstrom von Nachrichten über eine AMQP-empfängerlink aus einer Warteschlange/Abonnement.</span><span class="sxs-lookup"><span data-stu-id="8aa14-142">Registers handlers to deal with the incoming stream of messages over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="8aa14-143">Rufen Sie zum Empfangen von Nachrichten zu beenden, `close()` auf die SessionReceiver.</span><span class="sxs-lookup"><span data-stu-id="8aa14-143">To stop receiving messages, call `close()` on the SessionReceiver.</span></span>
      <span data-ttu-id="8aa14-144">Löst einen Fehler an, wenn es einer anderen receive-Vorgang wird ausgeführt, auf dem gleichen Empfänger.</span><span class="sxs-lookup"><span data-stu-id="8aa14-144">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="8aa14-145">Wenn Sie nicht sicher sind prüfen, ob vorhanden ist, einen anderen Vorgang ausgeführt wird empfangen, die `isReceivingMessages` Eigenschaft für den Empfänger.</span><span class="sxs-lookup"><span data-stu-id="8aa14-145">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function registerMessageHandler(onMessage: OnMessage, onError: OnError, options?: SessionMessageHandlerOptions)'
      parameters:
        - id: onMessage
          type:
            - '@azure/service-bus.OnMessage'
          description: <span data-ttu-id="8aa14-146">Handler für jede eingehende Nachricht zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8aa14-146">Handler for processing each incoming message.</span></span>
        - id: onError
          type:
            - '@azure/service-bus.OnError'
          description: '<span data-ttu-id="8aa14-147">Handler für alle Fehler, die beim empfangen oder Verarbeiten von Nachrichten auftritt.</span><span class="sxs-lookup"><span data-stu-id="8aa14-147">Handler for any error that occurs while receiving or processing messages.</span></span>'
        - id: options
          type:
            - '@azure/service-bus.SessionMessageHandlerOptions'
          description: |
            <span data-ttu-id="8aa14-148">Optionen, die steuern, ob Nachrichten automatisch vervollständigt werden soll oder wenn die Sperre für die Sitzung automatisch erneuert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8aa14-148">Options to control whether messages should be automatically completed or if the lock on the session should be automatically renewed.</span></span> <span data-ttu-id="8aa14-149">Sie können die maximale Anzahl von Nachrichten steuern, die gleichzeitig verarbeitet werden soll.</span><span class="sxs-lookup"><span data-stu-id="8aa14-149">You can control the maximum number of messages that should be concurrently processed.</span></span> <span data-ttu-id="8aa14-150">Sie können auch einen Timeout in Sekunden, um anzugeben, die Menge an Wartezeit für eine neue Nachricht vor dem Schließen des Empfängers angeben.</span><span class="sxs-lookup"><span data-stu-id="8aa14-150">You can also provide a timeout in seconds to denote the amount of time to wait for a new message before closing the receiver.</span></span>
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.renewSessionLock'
    name: renewSessionLock()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8aa14-151">Erneuert die Sperre für die Sitzung für die Dauer angegeben, während der Erstellung der Warteschlange/Abonnement.</span><span class="sxs-lookup"><span data-stu-id="8aa14-151">Renews the lock on the session for the duration as specified during the Queue/Subscription creation.</span></span>
      - <span data-ttu-id="8aa14-152">Überprüfen Sie die `sessionLockedUntilUtc` Eigenschaft für die SessionReceiver für die Zeit, wenn die Sperre abläuft.</span><span class="sxs-lookup"><span data-stu-id="8aa14-152">Check the `sessionLockedUntilUtc` property on the SessionReceiver for the time when the lock expires.</span></span>
      - <span data-ttu-id="8aa14-153">Wenn die Sperre für die Sitzung abläuft</span><span class="sxs-lookup"><span data-stu-id="8aa14-153">When the lock on the session expires</span></span>
          - <span data-ttu-id="8aa14-154">Keine weiteren Nachrichten können mit dieser Empfänger empfangen werden</span><span class="sxs-lookup"><span data-stu-id="8aa14-154">No more messages can be received using this receiver</span></span>
          - <span data-ttu-id="8aa14-155">Wenn eine Nachricht nicht ausgeglichen ist (entweder `complete()`, `defer()` oder `deadletter()`, bevor die Sitzung die Sperre abläuft, und dann die Nachricht gelangt zurück in die Warteschlange oder ein Abonnement für die nächsten Empfangsvorgang.</span><span class="sxs-lookup"><span data-stu-id="8aa14-155">If a message is not settled (using either `complete()`, `defer()` or `deadletter()`, before the session lock expires, then the message lands back in the Queue/Subscription for the next receive operation.</span></span>
    syntax:
      content: function renewSessionLock()
      parameters: []
      return:
        type:
          - Promise<Date>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.sessionId'
    name: sessionId
    fullName: sessionId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="8aa14-156">Die Id der Sitzung aus der dieser Empfänger Nachrichten empfängt.</span><span class="sxs-lookup"><span data-stu-id="8aa14-156">The id of the session from which this receiver will receive messages.</span></span>
      <span data-ttu-id="8aa14-157">Gibt undefined zurück, bis eine AMQP-empfängerlink erfolgreich für die Sitzung eingerichtet wurde.</span><span class="sxs-lookup"><span data-stu-id="8aa14-157">Will return undefined until a AMQP receiver link has been successfully set up for the session.</span></span>
    syntax:
      content: 'sessionId: string | undefined'
      return:
        type:
          - string | undefined
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.sessionLockedUntilUtc'
    name: sessionLockedUntilUtc
    fullName: sessionLockedUntilUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="8aa14-158">Die Zeit in UTC bis zu dem die Sitzung gesperrt ist.</span><span class="sxs-lookup"><span data-stu-id="8aa14-158">The time in UTC until which the session is locked.</span></span>
      <span data-ttu-id="8aa14-159">Bei jedem `renewSessionLock()` wird aufgerufen, diesmal auf aktuelle Zeit plus der Dauer der nachrichtensperre gemäß während der Erstellung der Warteschlange/Abonnement aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="8aa14-159">Everytime `renewSessionLock()` is called, this time gets updated to current time plus the lock duration as specified during the Queue/Subscription creation.</span></span>

      <span data-ttu-id="8aa14-160">Gibt undefined zurück, bis eine AMQP-empfängerlink erfolgreich für die Sitzung eingerichtet wurde.</span><span class="sxs-lookup"><span data-stu-id="8aa14-160">Will return undefined until a AMQP receiver link has been successfully set up for the session.</span></span>
    syntax:
      content: 'sessionLockedUntilUtc: Date | undefined'
      return:
        type:
          - Date | undefined
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.setState'
    name: setState(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="8aa14-161">Legt den Zustand für die Sitzung fest.</span><span class="sxs-lookup"><span data-stu-id="8aa14-161">Sets the state on the Session.</span></span> <span data-ttu-id="8aa14-162">Weitere Informationen zum Sitzungsstatus finden Sie unter [Sitzungszustand](https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state)</span><span class="sxs-lookup"><span data-stu-id="8aa14-162">For more on session states, see [Session State](https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state)</span></span>'
    syntax:
      content: 'function setState(state: any)'
      parameters:
        - id: state
          type:
            - any
          description: |
            <span data-ttu-id="8aa14-163">Der Zustand, der festgelegt werden muss.</span><span class="sxs-lookup"><span data-stu-id="8aa14-163">The state that needs to be set.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    name: ServiceBusMessage>
    spec.typeScript:
      - name: AsyncIterableIterator<
        fullName: AsyncIterableIterator<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '>'
        fullName: '>'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<@azure/service-bus.ServiceBusMessage | undefined>
    name: ServiceBusMessage | undefined>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: ' | undefined>'
        fullName: ' | undefined>'
  - uid: 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    name: 'ServiceBusMessage[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/service-bus.OnMessage'
    name: OnMessage
    spec.typeScript:
      - name: OnMessage
        fullName: OnMessage
        uid: '@azure/service-bus.OnMessage'
  - uid: '@azure/service-bus.OnError'
    name: OnError
    spec.typeScript:
      - name: OnError
        fullName: OnError
        uid: '@azure/service-bus.OnError'
  - uid: '@azure/service-bus.SessionMessageHandlerOptions'
    name: SessionMessageHandlerOptions
    spec.typeScript:
      - name: SessionMessageHandlerOptions
        fullName: SessionMessageHandlerOptions
        uid: '@azure/service-bus.SessionMessageHandlerOptions'