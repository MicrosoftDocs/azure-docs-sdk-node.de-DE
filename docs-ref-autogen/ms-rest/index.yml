### YamlMime:UniversalReference
ms.openlocfilehash: b4e03fb52861a9bc6680bace6ed9e9af650863db
ms.sourcegitcommit: f774f8ce6b26593f73a5893bfa47f9c510fc51a7
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 06/21/2018
ms.locfileid: "40057139"
items:
- uid: ms-rest
  name: ms-rest
  langs:
  - js
  type: package
  summary: ''
  children:
  - ms-rest.WebResource
  - ms-rest.ServiceClient
  - ms-rest.HttpOperationResponse
  - ms-rest.SystemErrorRetryPolicyFilter
  - ms-rest.ExponentialRetryPolicyFilter
  - ms-rest.TokenCredentials
  - ms-rest.BasicAuthenticationCredentials
  - ms-rest.ApiKeyCredentials
  - ms-rest.create
  - ms-rest.setAgent
  - ms-rest.checkRPNotRegisteredError
  - ms-rest.extractSubscriptionUrl
  - ms-rest.registerRP
  - ms-rest.getRegistrationStatus
  - ms-rest.createWithSink
  - ms-rest.createCompositeFilter
  - ms-rest.interimStream
  - ms-rest.serializeObject
  - ms-rest.serialize
  - ms-rest.deserialize
  - ms-rest.urlIsHTTPS
  - ms-rest.objectIsNull
  - ms-rest.encodeUri
  - ms-rest.stripResponse
  - ms-rest.stripRequest
  - ms-rest.isValidUuid
  - ms-rest.objectValues
  - ms-rest.generateUuid
  - ms-rest.homeDir
- uid: ms-rest.create
  id: ms-rest.create
  name: create()
  summary: FormDataFilter - wird dieser Filter Resposnsible für die Formulareigenschaft für das Anforderungsobjekt festlegen, wenn der Content-Type-Header "Application/X-www-form-urlencoded" ist
  fullName: ms-rest.create()
  type: Function
  syntax:
    content: function create()
  langs:
  - js
- uid: ms-rest.setAgent
  id: ms-rest.setAgent
  name: setAgent(resouce, proxy)
  summary: Der Agent für die Anforderung Ergebnis abhängig Proxyeinstellungen und das Protokoll
  fullName: ms-rest.setAgent(resouce, proxy)
  type: Function
  syntax:
    parameters:
    - id: resouce
      type:
      - object
      description: Optionen für die Anforderung für Anforderung.
    - id: proxy
      type:
      - object
      description: analysierten Url für den Proxy.
    content: function setAgent(resouce, proxy)
  langs:
  - js
- uid: ms-rest.checkRPNotRegisteredError
  id: ms-rest.checkRPNotRegisteredError
  name: checkRPNotRegisteredError(body)
  summary: Überprüft den Fehlercode und den Statuscode 409 Antwort zugeordnete Meldung. Wenn er mit der vertrauenden Seite, die nicht registriert übereinstimmt wird zurückgegeben, dass der Name der Anwendung der vertrauenden Seite else undefiniert zurückgibt.
  fullName: ms-rest.checkRPNotRegisteredError(body)
  type: Function
  syntax:
    parameters:
    - id: body
      type:
      - string
      description: Der Antworttext, der nach dem Herstellen der ursprünglichen Anforderung empfangen wird.
    return:
      type:
      - string
      description: Führen Sie den Namen der Anwendung der vertrauenden Seite aus, wenn die Bedingung erfüllt ist andernfalls nicht definiert.
    content: function checkRPNotRegisteredError(body)
  langs:
  - js
- uid: ms-rest.extractSubscriptionUrl
  id: ms-rest.extractSubscriptionUrl
  name: extractSubscriptionUrl(url)
  summary: 'Extrahiert den ersten Teil der URL, nach dem Abonnement an: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/'
  fullName: ms-rest.extractSubscriptionUrl(url)
  type: Function
  syntax:
    parameters:
    - id: url
      type:
      - string
      description: Die ursprüngliche Anforderungs-url
    return:
      type:
      - string
      description: UrlPrefix das Url-Präfix, wie oben beschrieben.
    content: function extractSubscriptionUrl(url)
  langs:
  - js
- uid: ms-rest.registerRP
  id: ms-rest.registerRP
  name: registerRP(urlPrefix, provider, originalRequest, callback)
  summary: Registriert den angegebenen Anbieter.
  fullName: ms-rest.registerRP(urlPrefix, provider, originalRequest, callback)
  type: Function
  syntax:
    parameters:
    - id: urlPrefix
      type:
      - string
      description: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/
    - id: provider
      type:
      - string
      description: Der Name des Anbieters registriert werden.
    - id: originalRequest
      type:
      - object
      description: Die ursprüngliche Anforderung gesendet werden, indem der Benutzer, der zurückgegeben wird ein 409-Antwort mit einer Meldung, dass der Anbieter nicht registriert ist.
    - id: callback
      type:
      - ms-rest.registrationCallback
      description: Der Rückruf, der die Registrierung für den Ressourcenanbieter behandelt
    content: function registerRP(urlPrefix, provider, originalRequest, callback)
  langs:
  - js
- uid: ms-rest.getRegistrationStatus
  id: ms-rest.getRegistrationStatus
  name: getRegistrationStatus(url, originalRequest, callback)
  summary: >-
    Fragt ab, den Registrierungsstatus des Anbieters, der registriert wurde. Abruf erfolgt in einem Intervall von 30 Sekunden.

    Abfrage wird ausgeführt, bis die RegistrationState-Eigenschaft des Antworttexts "registriert".
  fullName: ms-rest.getRegistrationStatus(url, originalRequest, callback)
  type: Function
  syntax:
    parameters:
    - id: url
      type:
      - string
      description: Die Anforderung der Url für den Abruf
    - id: originalRequest
      type:
      - object
      description: Die ursprüngliche Anforderung gesendet werden, indem der Benutzer, der zurückgegeben wird ein 409-Antwort mit einer Meldung, dass der Anbieter nicht registriert ist.
    - id: callback
      type:
      - ms-rest.registrationCallback
      description: Der Rückruf, der die Registrierung für den Ressourcenanbieter behandelt.
    content: function getRegistrationStatus(url, originalRequest, callback)
  langs:
  - js
- uid: ms-rest.createWithSink
  id: ms-rest.createWithSink
  name: createWithSink()
  summary: Erstellen Sie eine neue http-Client-Pipeline, die durch einen Aufruf der Request-Bibliothek, die mit der angegebenen Senke-Funktion tatsächlich die http-Anforderung endet.
  fullName: ms-rest.createWithSink()
  type: Function
  syntax:
    return:
      description: (Anforderung, Rückruf) - Funktion zum anfordern.
    content: function createWithSink()
  langs:
  - js
- uid: ms-rest.createCompositeFilter
  id: ms-rest.createCompositeFilter
  name: createCompositeFilter(filters)
  summary: Erstellen Sie einen neuen Filter, der eine Kombination aller Filter in der Argumentliste angegeben wird.
  fullName: ms-rest.createCompositeFilter(filters)
  type: Function
  syntax:
    parameters:
    - id: filters
      type:
      - ms-rest.varargs
      description: 'zum Ausführen. Erste Filter in der Liste der Senke am nächsten ist dies der Fall ist letzten, der vor der Anforderung, um auf die Antwort ausführen ausgeführt: genau, wenn Sie pipeline.add aufgerufen oder die pipeline.create, die die Liste an.'
    return:
      description: der neue Filter.
    content: function createCompositeFilter(filters)
  langs:
  - js
- uid: ms-rest.interimStream
  id: ms-rest.interimStream
  name: interimStream(setPipe)
  summary: Erstellt eine vorläufige Datenstroms, der synchron an den Aufrufer zurückgegeben werden kann, so, dass asynchrone Vorgänge immer noch um das streaming von Ausgaben danach einbinden können. Verwendet, wenn der Filter benötigen, um asynchrone Arbeit zu erledigen, bevor sie den Rest der Pipeline aufgerufen werden können.
  fullName: ms-rest.interimStream(setPipe)
  type: Function
  syntax:
    parameters:
    - id: setPipe
      description: >-
        Funktion (Eingabe, Ausgabe) diese Funktion wird synchron aufgerufen, um die zwei zugrunde liegenden Streams übergeben. Eingabe sollte auf das Ergebnis den nächsten Filter übergeben werden. Das Ergebnis des nächsten weitergeleitet werden sollte, Ausgabe.

        Es ist üblich, halten den Eingabedatenstrom, um Datenverluste zu vermeiden, bevor tatsächlich der echten Stream zum Einbinden zurückgegeben.
    return:
      description: ein Duplexvertrag Stream, der in den Eingabestream geschrieben und werden Daten aus dem Ausgabestream erstellt.
    content: function interimStream(setPipe)
  langs:
  - js
- uid: ms-rest.serializeObject
  id: ms-rest.serializeObject
  name: serializeObject(toSerialize)
  summary: Serialisiert das Jsonobjekt. Pufferobjekt, "base64"-codierte Zeichenfolge und ein Datumsobjekt in eine Zeichenfolge, die kompatibel mit ISO8601-Format serialisiert.
  fullName: ms-rest.serializeObject(toSerialize)
  type: Function
  syntax:
    parameters:
    - id: toSerialize
      type:
      - Object
      description: ''
    return:
      type:
      - Object
      description: serializedObject
    content: function serializeObject(toSerialize)
  langs:
  - js
- uid: ms-rest.serialize
  id: ms-rest.serialize
  name: serialize(mapper, object, objectName)
  summary: Serialisiert das angegebene Objekt auf der Grundlage der Metadaten, die im BizTalk-Mapper definiert
  fullName: ms-rest.serialize(mapper, object, objectName)
  type: Function
  syntax:
    parameters:
    - id: mapper
      type:
      - object
      description: Der Mapper, der die Metadaten des serialisierbaren Objekts definiert.
    - id: object
      type:
      - object
      - string
      - Array
      - number
      - boolean
      - Date
      - ms-rest.stream
      description: Ein gültiger Javascript-Objekt serialisiert werden soll
    - id: objectName
      type:
      - string
      description: Name des serialisierten Objekts
    return:
      type:
      - object
      - string
      - Array
      - number
      - boolean
      - Date
      - ms-rest.stream
      description: Ein gültiges serialisiertes Javascript-Objekt
    content: function serialize(mapper, object, objectName)
  langs:
  - js
- uid: ms-rest.deserialize
  id: ms-rest.deserialize
  name: deserialize(mapper, responseBody, objectName)
  summary: Deserialisiert das angegebene Objekt auf der Grundlage der Metadaten, die im BizTalk-Mapper definiert
  fullName: ms-rest.deserialize(mapper, responseBody, objectName)
  type: Function
  syntax:
    parameters:
    - id: mapper
      type:
      - object
      description: Der Mapper, der die Metadaten des serialisierbaren Objekts definiert.
    - id: responseBody
      type:
      - object
      - string
      - Array
      - number
      - boolean
      - Date
      - ms-rest.stream
      description: Eine gültige Javascript-Entität, die deserialisiert werden
    - id: objectName
      type:
      - string
      description: Name des deserialisierten Objekts
    return:
      type:
      - object
      - string
      - Array
      - number
      - boolean
      - Date
      - ms-rest.stream
      description: Ein gültiges deserialisierten Javascript-Objekt
    content: function deserialize(mapper, responseBody, objectName)
  langs:
  - js
- uid: ms-rest.urlIsHTTPS
  id: ms-rest.urlIsHTTPS
  name: urlIsHTTPS(urlToCheck)
  summary: Überprüft, ob eine analysierte URL HTTPS ist.
  fullName: ms-rest.urlIsHTTPS(urlToCheck)
  type: Function
  syntax:
    parameters:
    - id: urlToCheck
      type:
      - object
      description: Die zu überprüfende url
    return:
      type:
      - ms-rest.bool
      description: True, wenn die URL HTTPS ist. "false" andernfalls.
    content: function urlIsHTTPS(urlToCheck)
  langs:
  - js
- uid: ms-rest.objectIsNull
  id: ms-rest.objectIsNull
  name: objectIsNull(value)
  summary: Überprüft, ob ein Wert null oder undefiniert sein.
  fullName: ms-rest.objectIsNull(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: Der Wert zu suchende mit null oder undefiniert sein.
    return:
      type:
      - ms-rest.bool
      description: True, wenn der Wert null oder nicht definiert, andernfalls false ist.
    content: function objectIsNull(value)
  langs:
  - js
- uid: ms-rest.encodeUri
  id: ms-rest.encodeUri
  name: encodeUri(uri)
  summary: Codiert einen URI an.
  fullName: ms-rest.encodeUri(uri)
  type: Function
  syntax:
    parameters:
    - id: uri
      type:
      - string
      description: Der URI codiert werden.
    return:
      type:
      - string
      description: Den codierten URI.
    content: function encodeUri(uri)
  langs:
  - js
- uid: ms-rest.stripResponse
  id: ms-rest.stripResponse
  name: stripResponse(response)
  summary: Gibt eine bereinigte Version der Http-Antwort enthält nur Text, Header und den StatusCode zurück.
  fullName: ms-rest.stripResponse(response)
  type: Function
  syntax:
    parameters:
    - id: response
      type:
      - ms-rest.stream
      description: Die Http-Antwort
    return:
      type:
      - object
      description: StrippedResponse - die bereinigte Version der Http-Antwort.
    content: function stripResponse(response)
  langs:
  - js
- uid: ms-rest.stripRequest
  id: ms-rest.stripRequest
  name: stripRequest(request)
  summary: Gibt eine bereinigte Version der Http-Anforderung, die nicht den Authorization-Header enthält.
  fullName: ms-rest.stripRequest(request)
  type: Function
  syntax:
    parameters:
    - id: request
      type:
      - object
      description: Das HTTP-Request-Objekt
    return:
      type:
      - object
      description: StrippedRequest - die bereinigte Version der Http-Anforderung.
    content: function stripRequest(request)
  langs:
  - js
- uid: ms-rest.isValidUuid
  id: ms-rest.isValidUuid
  name: isValidUuid(uuid)
  summary: Überprüft die angegebene Uuid als Zeichenfolge
  fullName: ms-rest.isValidUuid(uuid)
  type: Function
  syntax:
    parameters:
    - id: uuid
      type:
      - string
      description: Die Uuid als eine Zeichenfolge, die zu überprüfenden
    return:
      type:
      - boolean
      description: 'Ergebnis: "true", wenn die Uuid gültig ist; "false" andernfalls.'
    content: function isValidUuid(uuid)
  langs:
  - js
- uid: ms-rest.objectValues
  id: ms-rest.objectValues
  name: objectValues(obj)
  summary: "Stellt ein Array von Werten eines Objekts bereit. Für ein bestimmtes Objekt z. B. {\"a\": \"Foo\", 'b': 'Bar'}, die Methode gibt [\"Foo\", 'Bar']."
  fullName: ms-rest.objectValues(obj)
  type: Function
  syntax:
    parameters:
    - id: obj
      type:
      - object
      description: Ein Objekt, dessen Eigenschaften müssen aufgelistet werden, sodass Werte, kann als Bytearray angegeben werden
    return:
      type:
      - array
      description: Das Ergebnis – ein Array von Werten des angegebenen Objekts.
    content: function objectValues(obj)
  langs:
  - js
- uid: ms-rest.generateUuid
  id: ms-rest.generateUuid
  name: generateUuid()
  summary: Generierte UUID
  fullName: ms-rest.generateUuid()
  type: Function
  syntax:
    return:
      type:
      - string
      description: RFC4122 v4-UUID.
    content: function generateUuid()
  langs:
  - js
- uid: ms-rest.homeDir
  id: ms-rest.homeDir
  name: homeDir()
  summary: Bietet Pfad zum Basisverzeichnis.
  fullName: ms-rest.homeDir()
  type: Function
  syntax:
    content: function homeDir()
  langs:
  - js
references:
- uid: ms-rest.WebResource
  name: WebResource
- uid: ms-rest.ServiceClient
  name: ServiceClient
- uid: ms-rest.HttpOperationResponse
  name: HttpOperationResponse
- uid: ms-rest.SystemErrorRetryPolicyFilter
  name: SystemErrorRetryPolicyFilter
- uid: ms-rest.ExponentialRetryPolicyFilter
  name: ExponentialRetryPolicyFilter
- uid: ms-rest.TokenCredentials
  name: TokenCredentials
- uid: ms-rest.BasicAuthenticationCredentials
  name: BasicAuthenticationCredentials
- uid: ms-rest.ApiKeyCredentials
  name: ApiKeyCredentials
