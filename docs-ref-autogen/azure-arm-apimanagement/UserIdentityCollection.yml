### YamlMime:UniversalReference
items:
  - uid: azure-arm-apimanagement.UserIdentityCollection
    name: UserIdentityCollection
    fullName: UserIdentityCollection
    children:
      - azure-arm-apimanagement.UserIdentityCollection.Array
      - azure-arm-apimanagement.UserIdentityCollection.concat
      - azure-arm-apimanagement.UserIdentityCollection.concat_1
      - azure-arm-apimanagement.UserIdentityCollection.every
      - azure-arm-apimanagement.UserIdentityCollection.filter_1
      - azure-arm-apimanagement.UserIdentityCollection.filter
      - azure-arm-apimanagement.UserIdentityCollection.forEach
      - azure-arm-apimanagement.UserIdentityCollection.indexOf
      - azure-arm-apimanagement.UserIdentityCollection.join
      - azure-arm-apimanagement.UserIdentityCollection.lastIndexOf
      - azure-arm-apimanagement.UserIdentityCollection.length
      - azure-arm-apimanagement.UserIdentityCollection.map
      - azure-arm-apimanagement.UserIdentityCollection.nextLink
      - azure-arm-apimanagement.UserIdentityCollection.pop
      - azure-arm-apimanagement.UserIdentityCollection.push
      - azure-arm-apimanagement.UserIdentityCollection.reduce_2
      - azure-arm-apimanagement.UserIdentityCollection.reduce
      - azure-arm-apimanagement.UserIdentityCollection.reduce_1
      - azure-arm-apimanagement.UserIdentityCollection.reduceRight_2
      - azure-arm-apimanagement.UserIdentityCollection.reduceRight
      - azure-arm-apimanagement.UserIdentityCollection.reduceRight_1
      - azure-arm-apimanagement.UserIdentityCollection.reverse
      - azure-arm-apimanagement.UserIdentityCollection.shift
      - azure-arm-apimanagement.UserIdentityCollection.slice
      - azure-arm-apimanagement.UserIdentityCollection.some
      - azure-arm-apimanagement.UserIdentityCollection.sort
      - azure-arm-apimanagement.UserIdentityCollection.splice
      - azure-arm-apimanagement.UserIdentityCollection.splice_1
      - azure-arm-apimanagement.UserIdentityCollection.toLocaleString
      - azure-arm-apimanagement.UserIdentityCollection.toString
      - azure-arm-apimanagement.UserIdentityCollection.unshift
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="28774-101">Liste der Benutzer identitätsdarstellung-Liste.</span><span class="sxs-lookup"><span data-stu-id="28774-101">List of Users Identity list representation.</span></span>
    extends:
      name: Array<azure-arm-apimanagement.UserIdentityContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.concat
    name: 'concat(ConcatArray<UserIdentityContract>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-102">Kombiniert zwei oder mehr Arrays.</span><span class="sxs-lookup"><span data-stu-id="28774-102">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<UserIdentityContract>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-apimanagement.UserIdentityContract>[]'
          description: |
            <span data-ttu-id="28774-103">Zusätzliche Elemente, die am Ende von array1 hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="28774-103">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-apimanagement.UserIdentityContract[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-104">Kombiniert zwei oder mehr Arrays.</span><span class="sxs-lookup"><span data-stu-id="28774-104">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="28774-105">Zusätzliche Elemente, die am Ende von array1 hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="28774-105">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-apimanagement.UserIdentityContract[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.every
    name: 'every((value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-106">Bestimmt, ob alle Elemente eines Arrays mit den angegebenen Test erfüllen.</span><span class="sxs-lookup"><span data-stu-id="28774-106">Determines whether all the members of an array satisfy the specified test.</span></span>'
    syntax:
      content: 'function every(callbackfn: (value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean'
          description: '<span data-ttu-id="28774-107">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-107">A function that accepts up to three arguments.</span></span> <span data-ttu-id="28774-108">Der every-Methode ruft die Listenwerts-Funktion für jedes Element im Matrix1, bis die Listenwerts "false" zurückgibt oder bis zum Ende des Arrays.</span><span class="sxs-lookup"><span data-stu-id="28774-108">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="28774-109">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="28774-109">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="28774-110">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="28774-110">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.filter_1
    name: 'filter((value: UserIdentityContract, index: number, array: UserIdentityContract[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-111">Gibt zurück, die Elemente eines Arrays, die in einer Rückruffunktion angegebene Bedingung erfüllen.</span><span class="sxs-lookup"><span data-stu-id="28774-111">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter(callbackfn: (value: UserIdentityContract, index: number, array: UserIdentityContract[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: UserIdentityContract, index: number, array: UserIdentityContract[]) => any'
          description: '<span data-ttu-id="28774-112">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="28774-113">Die Filter-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-113">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="28774-114">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="28774-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="28774-115">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="28774-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-apimanagement.UserIdentityContract[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.filter
    name: 'filter((value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-116">Gibt zurück, die Elemente eines Arrays, die in einer Rückruffunktion angegebene Bedingung erfüllen.</span><span class="sxs-lookup"><span data-stu-id="28774-116">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter<S>(callbackfn: (value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean'
          description: '<span data-ttu-id="28774-117">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-117">A function that accepts up to three arguments.</span></span> <span data-ttu-id="28774-118">Die Filter-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-118">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="28774-119">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="28774-119">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="28774-120">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="28774-120">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.forEach
    name: 'forEach((value: UserIdentityContract, index: number, array: UserIdentityContract[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-121">Führt die angegebene Aktion für jedes Element in einem Array.</span><span class="sxs-lookup"><span data-stu-id="28774-121">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: UserIdentityContract, index: number, array: UserIdentityContract[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: UserIdentityContract, index: number, array: UserIdentityContract[]) => void'
          description: '<span data-ttu-id="28774-122">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-122">A function that accepts up to three arguments.</span></span> <span data-ttu-id="28774-123">ForEach, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-123">forEach calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="28774-124">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="28774-124">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="28774-125">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="28774-125">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.indexOf
    name: 'indexOf(UserIdentityContract, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-126">Gibt den Index des ersten Vorkommens eines Werts in einem Array zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-126">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: UserIdentityContract, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-apimanagement.UserIdentityContract
          description: '<span data-ttu-id="28774-127">Der Wert, der in das Array gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="28774-127">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="28774-128">Der Arrayindex, an dem die Suche zu starten.</span><span class="sxs-lookup"><span data-stu-id="28774-128">The array index at which to begin the search.</span></span> <span data-ttu-id="28774-129">Wenn FromIndex weggelassen wird, beginnt die Suche, bei Index 0.</span><span class="sxs-lookup"><span data-stu-id="28774-129">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-130">Fügt alle Elemente eines Arrays durch die angegebene aus Trennzeichen bestehende Zeichenfolge getrennt.</span><span class="sxs-lookup"><span data-stu-id="28774-130">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="28774-131">Eine Zeichenfolge, die zum Trennen der ein Element eines Arrays von der nächsten in der Ergebniszeichenfolge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="28774-131">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="28774-132">Wenn nicht angegeben, werden die Elemente des Arrays durch ein Komma getrennt.</span><span class="sxs-lookup"><span data-stu-id="28774-132">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.lastIndexOf
    name: 'lastIndexOf(UserIdentityContract, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-133">Gibt den Index des letzten Vorkommens eines angegebenen Werts in einem Array zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-133">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: UserIdentityContract, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-apimanagement.UserIdentityContract
          description: '<span data-ttu-id="28774-134">Der Wert, der in das Array gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="28774-134">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="28774-135">Der Arrayindex, an dem die Suche zu starten.</span><span class="sxs-lookup"><span data-stu-id="28774-135">The array index at which to begin the search.</span></span> <span data-ttu-id="28774-136">Wenn FromIndex weggelassen wird, beginnt die Suche, am letzten Index im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-136">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="28774-137">Übernimmt oder bestimmt die Länge des Arrays.</span><span class="sxs-lookup"><span data-stu-id="28774-137">Gets or sets the length of the array.</span></span> <span data-ttu-id="28774-138">Dies ist eine Nummer eins höher ist als das höchste der in einem Array definierten Elemente.</span><span class="sxs-lookup"><span data-stu-id="28774-138">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.map
    name: 'map((value: UserIdentityContract, index: number, array: UserIdentityContract[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-139">Ruft eine definierte Rückruffunktion für jedes Element eines Arrays und gibt ein Array mit den Ergebnissen zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-139">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: UserIdentityContract, index: number, array: UserIdentityContract[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: UserIdentityContract, index: number, array: UserIdentityContract[]) => U'
          description: '<span data-ttu-id="28774-140">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-140">A function that accepts up to three arguments.</span></span> <span data-ttu-id="28774-141">Die Map-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-141">The map method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="28774-142">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="28774-142">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="28774-143">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="28774-143">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="28774-144">Nächste Seitenlink, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="28774-144">Next page link if any.</span></span>'
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-145">Entfernt das letzte Element aus einem Array und gibt sie zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-145">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-apimanagement.UserIdentityContract | undefined
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.push
    name: 'push(UserIdentityContract[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-146">Fügt neue Elemente in ein Array und gibt die neue Länge des Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-146">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: UserIdentityContract[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-apimanagement.UserIdentityContract[]'
          description: |
            <span data-ttu-id="28774-147">Neue Elemente des Arrays.</span><span class="sxs-lookup"><span data-stu-id="28774-147">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.reduce_2
    name: 'reduce((previousValue: U, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-148">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="28774-148">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="28774-149">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="28774-149">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => U'
          description: '<span data-ttu-id="28774-150">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-150">A function that accepts up to four arguments.</span></span> <span data-ttu-id="28774-151">Die Reduce-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-151">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="28774-152">Wenn "InitialValue" angegeben ist, wird es als Anfangswert verwendet, die Ansammlung beginnt.</span><span class="sxs-lookup"><span data-stu-id="28774-152">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="28774-153">Der erste Aufruf an die Funktion Listenwerts stellt dieser Wert als Argument anstelle eines Arraywerts.</span><span class="sxs-lookup"><span data-stu-id="28774-153">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.reduce
    name: 'reduce((previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-154">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="28774-154">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="28774-155">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="28774-155">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract'
          description: '<span data-ttu-id="28774-156">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-156">A function that accepts up to four arguments.</span></span> <span data-ttu-id="28774-157">Die Reduce-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-157">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - azure-arm-apimanagement.UserIdentityContract
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.reduce_1
    name: 'reduce((previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract, UserIdentityContract)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-158">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="28774-158">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="28774-159">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="28774-159">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract, initialValue: UserIdentityContract)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract'
          description: ''
        - id: initialValue
          type:
            - azure-arm-apimanagement.UserIdentityContract
          description: ''
      return:
        type:
          - azure-arm-apimanagement.UserIdentityContract
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-160">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="28774-160">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="28774-161">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="28774-161">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => U'
          description: '<span data-ttu-id="28774-162">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-162">A function that accepts up to four arguments.</span></span> <span data-ttu-id="28774-163">ReduceRight-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-163">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="28774-164">Wenn "InitialValue" angegeben ist, wird es als Anfangswert verwendet, die Ansammlung beginnt.</span><span class="sxs-lookup"><span data-stu-id="28774-164">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="28774-165">Der erste Aufruf an die Funktion Listenwerts stellt dieser Wert als Argument anstelle eines Arraywerts.</span><span class="sxs-lookup"><span data-stu-id="28774-165">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.reduceRight
    name: 'reduceRight((previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-166">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="28774-166">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="28774-167">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="28774-167">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract'
          description: '<span data-ttu-id="28774-168">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-168">A function that accepts up to four arguments.</span></span> <span data-ttu-id="28774-169">ReduceRight-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="28774-169">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - azure-arm-apimanagement.UserIdentityContract
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.reduceRight_1
    name: 'reduceRight((previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract, UserIdentityContract)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-170">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="28774-170">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="28774-171">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="28774-171">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract, initialValue: UserIdentityContract)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: UserIdentityContract, currentValue: UserIdentityContract, currentIndex: number, array: UserIdentityContract[]) => UserIdentityContract'
          description: ''
        - id: initialValue
          type:
            - azure-arm-apimanagement.UserIdentityContract
          description: ''
      return:
        type:
          - azure-arm-apimanagement.UserIdentityContract
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-172">Kehrt die Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="28774-172">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-apimanagement.UserIdentityContract[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-173">Entfernt das erste Element aus einem Array und gibt sie zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-173">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-apimanagement.UserIdentityContract | undefined
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-174">Gibt einen Abschnitt eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-174">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="28774-175">Der Anfang des angegebenen Abschnitts des Arrays.</span><span class="sxs-lookup"><span data-stu-id="28774-175">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="28774-176">Das Ende der angegebenen Teil des Arrays.</span><span class="sxs-lookup"><span data-stu-id="28774-176">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-apimanagement.UserIdentityContract[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.some
    name: 'some((value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-177">Bestimmt, ob die angegebene Rückruffunktion für jedes Element eines Arrays "true" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="28774-177">Determines whether the specified callback function returns true for any element of an array.</span></span>'
    syntax:
      content: 'function some(callbackfn: (value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: UserIdentityContract, index: number, array: UserIdentityContract[]) => boolean'
          description: '<span data-ttu-id="28774-178">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="28774-178">A function that accepts up to three arguments.</span></span> <span data-ttu-id="28774-179">Die eine Methode ruft die Listenwerts-Funktion für jedes Element im Matrix1, bis die Listenwerts "true" zurückgibt oder bis zum Ende des Arrays.</span><span class="sxs-lookup"><span data-stu-id="28774-179">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="28774-180">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="28774-180">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="28774-181">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="28774-181">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.sort
    name: 'sort((a: UserIdentityContract, b: UserIdentityContract) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-182">Ein Array sortiert.</span><span class="sxs-lookup"><span data-stu-id="28774-182">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: UserIdentityContract, b: UserIdentityContract) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: UserIdentityContract, b: UserIdentityContract) => number'
          description: |
            <span data-ttu-id="28774-183">Der Name der Funktion verwendet, um die Reihenfolge der Elemente zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="28774-183">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="28774-184">Wenn nicht angegeben, werden die Elemente sortiert, aufsteigend in ASCII-Zeichen sortiert.</span><span class="sxs-lookup"><span data-stu-id="28774-184">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-185">Entfernt Elemente aus einem Array und bei Bedarf fügt neue Elemente ein an ihre Stelle ein, wobei die gelöschten Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="28774-185">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="28774-186">Die nullbasierte Position im Array ab dem mit dem Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="28774-186">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="28774-187">Die Anzahl der zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="28774-187">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-apimanagement.UserIdentityContract[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.splice_1
    name: 'splice(number, number, UserIdentityContract[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-188">Entfernt Elemente aus einem Array und bei Bedarf fügt neue Elemente ein an ihre Stelle ein, wobei die gelöschten Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="28774-188">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: UserIdentityContract[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="28774-189">Die nullbasierte Position im Array ab dem mit dem Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="28774-189">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="28774-190">Die Anzahl der zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="28774-190">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-arm-apimanagement.UserIdentityContract[]'
          description: |
            <span data-ttu-id="28774-191">Elemente, die in das Array anstelle der gelöschten Elemente eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="28774-191">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-arm-apimanagement.UserIdentityContract[]'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="28774-192">Gibt eine Zeichenfolgendarstellung eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-192">Returns a string representation of an array.</span></span> <span data-ttu-id="28774-193">Die Elemente werden in eine Zeichenfolge, die mit den entsprechenden-Methoden ToLocalString konvertiert.</span><span class="sxs-lookup"><span data-stu-id="28774-193">The elements are converted to string using their toLocalString methods.</span></span>'
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-194">Gibt eine Zeichenfolgendarstellung eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="28774-194">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.UserIdentityCollection.unshift
    name: 'unshift(UserIdentityContract[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="28774-195">Fügt neue Elemente zu Beginn eines Arrays an.</span><span class="sxs-lookup"><span data-stu-id="28774-195">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: UserIdentityContract[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-apimanagement.UserIdentityContract[]'
          description: |
            <span data-ttu-id="28774-196">Am Anfang das Array einzufügenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="28774-196">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-apimanagement
references:
  - uid: Array<azure-arm-apimanagement.UserIdentityContract>
    name: UserIdentityContract>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: UserIdentityContract
        fullName: UserIdentityContract
        uid: azure-arm-apimanagement.UserIdentityContract
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-apimanagement.UserIdentityContract>[]'
    name: 'UserIdentityContract>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: UserIdentityContract
        fullName: UserIdentityContract
        uid: azure-arm-apimanagement.UserIdentityContract
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-apimanagement.UserIdentityContract[]'
    name: 'UserIdentityContract[]'
    spec.typeScript:
      - name: UserIdentityContract
        fullName: UserIdentityContract
        uid: azure-arm-apimanagement.UserIdentityContract
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-apimanagement.UserIdentityContract
    name: UserIdentityContract
    spec.typeScript:
      - name: UserIdentityContract
        fullName: UserIdentityContract
        uid: azure-arm-apimanagement.UserIdentityContract
  - uid: azure-arm-apimanagement.UserIdentityContract | undefined
    name: UserIdentityContract | undefined
    spec.typeScript:
      - name: UserIdentityContract
        fullName: UserIdentityContract
        uid: azure-arm-apimanagement.UserIdentityContract
      - name: ' | undefined'
        fullName: ' | undefined'