### YamlMime:UniversalReference
ms.openlocfilehash: 051668180977efad82270f671a6fb69557e2d712
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 12/13/2018
ms.locfileid: "52044985"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="267d3-101">Verwendet für die Seriennummer in die angegebene Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="267d3-101">Used for serial appends to the specified file.</span></span><span data-ttu-id="267d3-102"> HINWEIS:  Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-102"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="267d3-103">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-104">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-105">Der Data Lake Store-Pfad (beginnend mit '/') der Datei, die dem angefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="267d3-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="267d3-106">Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="267d3-106">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="267d3-107">Die maximale Größe des Inhalte ist 4MB.</span><span class="sxs-lookup"><span data-stu-id="267d3-107">The maximum content size is 4MB.</span></span>  <span data-ttu-id="267d3-108">Für Inhalte, die größer als 4MB, müssen Sie den Inhalt in Blöcken von 4 MB anfügen.</span><span class="sxs-lookup"><span data-stu-id="267d3-108">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="267d3-109">Verwendet für die Seriennummer in die angegebene Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="267d3-109">Used for serial appends to the specified file.</span></span><span data-ttu-id="267d3-110"> HINWEIS:  Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-110"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="267d3-111">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-111">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="267d3-112">Verwendet für die Seriennummer in die angegebene Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="267d3-112">Used for serial appends to the specified file.</span></span><span data-ttu-id="267d3-113"> HINWEIS:  Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-113"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="267d3-114">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-114">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="267d3-115">Verwendet für die Seriennummer in die angegebene Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="267d3-115">Used for serial appends to the specified file.</span></span><span data-ttu-id="267d3-116"> HINWEIS:  Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-116"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="267d3-117">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-117">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-118">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-118">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-119">Der Data Lake Store-Pfad (beginnend mit '/') der Datei, die dem angefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="267d3-119">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="267d3-120">Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="267d3-120">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="267d3-121">Die maximale Größe des Inhalte ist 4MB.</span><span class="sxs-lookup"><span data-stu-id="267d3-121">The maximum content size is 4MB.</span></span>  <span data-ttu-id="267d3-122">Für Inhalte, die größer als 4MB, müssen Sie den Inhalt in Blöcken von 4 MB anfügen.</span><span class="sxs-lookup"><span data-stu-id="267d3-122">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-123">Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="267d3-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-124">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-124">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-125">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den Zugriff zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="267d3-125">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="267d3-126">In Form einer Zeichenfolge, Regex-Muster übereinstimmende Datei System Vorgang Lesen/Schreiben/Ausführen "[Rwx-]{3}"</span><span class="sxs-lookup"><span data-stu-id="267d3-126">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-127">Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="267d3-127">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-128">Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="267d3-128">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-129">Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="267d3-129">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-130">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-130">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-131">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den Zugriff zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="267d3-131">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="267d3-132">In Form einer Zeichenfolge, Regex-Muster übereinstimmende Datei System Vorgang Lesen/Schreiben/Ausführen "[Rwx-]{3}"</span><span class="sxs-lookup"><span data-stu-id="267d3-132">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-133">Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.</span><span class="sxs-lookup"><span data-stu-id="267d3-133">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-134">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-134">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-135">Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.</span><span class="sxs-lookup"><span data-stu-id="267d3-135">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="267d3-136">Eine Liste von durch Trennzeichen getrennt, Data Lake Store-Pfade (beginnend mit '/') der Dateien, die in der Reihenfolge verkettet, in dem sie verkettet werden soll.</span><span class="sxs-lookup"><span data-stu-id="267d3-136">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat(string, string, string[], Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-137">Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.</span><span class="sxs-lookup"><span data-stu-id="267d3-137">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat(string, string, string[], ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-138">Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.</span><span class="sxs-lookup"><span data-stu-id="267d3-138">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-139">Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.</span><span class="sxs-lookup"><span data-stu-id="267d3-139">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-140">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-140">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-141">Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.</span><span class="sxs-lookup"><span data-stu-id="267d3-141">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="267d3-142">Eine Liste von durch Trennzeichen getrennt, Data Lake Store-Pfade (beginnend mit '/') der Dateien, die in der Reihenfolge verkettet, in dem sie verkettet werden soll.</span><span class="sxs-lookup"><span data-stu-id="267d3-142">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="267d3-143">Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="267d3-143">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="267d3-144">Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="267d3-144">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="267d3-145">HINWEIS:  Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-145">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="267d3-146">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-146">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="267d3-147">ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.</span><span class="sxs-lookup"><span data-stu-id="267d3-147">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-148">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-148">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-149">Der Data Lake Store-Pfad (beginnend mit '/') der Datei an, fügen Sie mithilfe von gleichzeitiger angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="267d3-149">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="267d3-150">Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="267d3-150">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="267d3-151">Die maximale Größe des Inhalte ist 4MB.</span><span class="sxs-lookup"><span data-stu-id="267d3-151">The maximum content size is 4MB.</span></span>  <span data-ttu-id="267d3-152">Für Inhalte, die größer als 4MB, müssen Sie den Inhalt in Blöcken von 4 MB anfügen.</span><span class="sxs-lookup"><span data-stu-id="267d3-152">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="267d3-153">Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="267d3-153">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="267d3-154">Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="267d3-154">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="267d3-155">HINWEIS:  Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-155">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="267d3-156">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-156">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="267d3-157">ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.</span><span class="sxs-lookup"><span data-stu-id="267d3-157">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="267d3-158">Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="267d3-158">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="267d3-159">Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="267d3-159">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="267d3-160">HINWEIS:  Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-160">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="267d3-161">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-161">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="267d3-162">ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.</span><span class="sxs-lookup"><span data-stu-id="267d3-162">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="267d3-163">Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="267d3-163">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="267d3-164">Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="267d3-164">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="267d3-165">HINWEIS:  Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-165">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="267d3-166">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-166">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="267d3-167">ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.</span><span class="sxs-lookup"><span data-stu-id="267d3-167">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-168">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-168">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-169">Der Data Lake Store-Pfad (beginnend mit '/') der Datei an, fügen Sie mithilfe von gleichzeitiger angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="267d3-169">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="267d3-170">Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="267d3-170">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="267d3-171">Die maximale Größe des Inhalte ist 4MB.</span><span class="sxs-lookup"><span data-stu-id="267d3-171">The maximum content size is 4MB.</span></span>  <span data-ttu-id="267d3-172">Für Inhalte, die größer als 4MB, müssen Sie den Inhalt in Blöcken von 4 MB anfügen.</span><span class="sxs-lookup"><span data-stu-id="267d3-172">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="267d3-173">Erstellt eine Datei mit optional angegebenen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="267d3-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="267d3-174">HINWEIS:  Wenn der Inhalt bereitgestellt wird, kann die resultierende Datei ConcurrentAppend mit geändert werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-175">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-176">Der Data Lake Store-Pfad (beginnend mit '/') der zu erstellenden Datei.</span><span class="sxs-lookup"><span data-stu-id="267d3-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="267d3-177">Erstellt eine Datei mit optional angegebenen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="267d3-177">Creates a file with optionally specified content.</span></span> <span data-ttu-id="267d3-178">HINWEIS:  Wenn der Inhalt bereitgestellt wird, kann die resultierende Datei ConcurrentAppend mit geändert werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-178">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="267d3-179">Erstellt eine Datei mit optional angegebenen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="267d3-179">Creates a file with optionally specified content.</span></span> <span data-ttu-id="267d3-180">HINWEIS:  Wenn der Inhalt bereitgestellt wird, kann die resultierende Datei ConcurrentAppend mit geändert werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-180">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="267d3-181">Erstellt eine Datei mit optional angegebenen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="267d3-181">Creates a file with optionally specified content.</span></span> <span data-ttu-id="267d3-182">HINWEIS:  Wenn der Inhalt bereitgestellt wird, kann die resultierende Datei ConcurrentAppend mit geändert werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-182">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-183">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-184">Der Data Lake Store-Pfad (beginnend mit '/') der zu erstellenden Datei.</span><span class="sxs-lookup"><span data-stu-id="267d3-184">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-185">Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.</span><span class="sxs-lookup"><span data-stu-id="267d3-185">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-186">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-186">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-187">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses zu löschen.</span><span class="sxs-lookup"><span data-stu-id="267d3-187">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-188">Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.</span><span class="sxs-lookup"><span data-stu-id="267d3-188">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-189">Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.</span><span class="sxs-lookup"><span data-stu-id="267d3-189">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-190">Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.</span><span class="sxs-lookup"><span data-stu-id="267d3-190">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-191">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-192">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses zu löschen.</span><span class="sxs-lookup"><span data-stu-id="267d3-192">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-193">Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="267d3-193">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-194">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-195">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die ACL abgerufen.</span><span class="sxs-lookup"><span data-stu-id="267d3-195">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus(string, string, Object, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-196">Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="267d3-196">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus(string, string, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-197">Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="267d3-197">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-198">Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="267d3-198">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-199">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-200">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die ACL abgerufen.</span><span class="sxs-lookup"><span data-stu-id="267d3-200">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-201">Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.</span><span class="sxs-lookup"><span data-stu-id="267d3-201">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-202">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-203">Der Data Lake Store-Pfad (beginnend mit '/') der Datei für die Zusammenfassung des abzurufen.</span><span class="sxs-lookup"><span data-stu-id="267d3-203">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary(string, string, Object, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-204">Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.</span><span class="sxs-lookup"><span data-stu-id="267d3-204">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: Object, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary(string, string, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-205">Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.</span><span class="sxs-lookup"><span data-stu-id="267d3-205">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-206">Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.</span><span class="sxs-lookup"><span data-stu-id="267d3-206">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-207">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-208">Der Data Lake Store-Pfad (beginnend mit '/') der Datei für die Zusammenfassung des abzurufen.</span><span class="sxs-lookup"><span data-stu-id="267d3-208">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-209">Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-209">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-210">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-210">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-211">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für das Abrufen des Status.</span><span class="sxs-lookup"><span data-stu-id="267d3-211">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus(string, string, Object, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-212">Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-212">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus(string, string, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-213">Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-213">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-214">Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="267d3-214">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-215">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-216">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für das Abrufen des Status.</span><span class="sxs-lookup"><span data-stu-id="267d3-216">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-217">Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status</span><span class="sxs-lookup"><span data-stu-id="267d3-217">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-218">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-219">Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, das Liste.</span><span class="sxs-lookup"><span data-stu-id="267d3-219">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus(string, string, Object, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-220">Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status</span><span class="sxs-lookup"><span data-stu-id="267d3-220">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus(string, string, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-221">Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status</span><span class="sxs-lookup"><span data-stu-id="267d3-221">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-222">Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status</span><span class="sxs-lookup"><span data-stu-id="267d3-222">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-223">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-224">Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, das Liste.</span><span class="sxs-lookup"><span data-stu-id="267d3-224">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-225">Erstellt ein Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="267d3-225">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-226">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-227">Der Data Lake Store-Pfad (beginnend mit '/') der das zu erstellende Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="267d3-227">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-228">Erstellt ein Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="267d3-228">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-229">Erstellt ein Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="267d3-229">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-230">Erstellt ein Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="267d3-230">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-231">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-231">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-232">Der Data Lake Store-Pfad (beginnend mit '/') der das zu erstellende Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="267d3-232">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-233">Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="267d3-233">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-234">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-234">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-235">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL, die geändert wird.</span><span class="sxs-lookup"><span data-stu-id="267d3-235">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="267d3-236">Die ACL-Spezifikation enthalten in der ACL Änderungsvorgänge im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"</span><span class="sxs-lookup"><span data-stu-id="267d3-236">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-237">Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="267d3-237">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-238">Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="267d3-238">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-239">Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="267d3-239">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-240">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-240">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-241">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL, die geändert wird.</span><span class="sxs-lookup"><span data-stu-id="267d3-241">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="267d3-242">Die ACL-Spezifikation enthalten in der ACL Änderungsvorgänge im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"</span><span class="sxs-lookup"><span data-stu-id="267d3-242">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-243">Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an.</span><span class="sxs-lookup"><span data-stu-id="267d3-243">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="267d3-244">Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode.</span><span class="sxs-lookup"><span data-stu-id="267d3-244">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="267d3-245">Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.</span><span class="sxs-lookup"><span data-stu-id="267d3-245">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-246">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-246">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-247">Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.</span><span class="sxs-lookup"><span data-stu-id="267d3-247">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="267d3-248">Eine Liste der Data Lake Store-Pfade (beginnend mit '/') der Quelldateien.</span><span class="sxs-lookup"><span data-stu-id="267d3-248">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="267d3-249">Muss im Format eine durch Trennzeichen getrennte Pfadliste: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="267d3-249">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-250">Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an.</span><span class="sxs-lookup"><span data-stu-id="267d3-250">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="267d3-251">Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode.</span><span class="sxs-lookup"><span data-stu-id="267d3-251">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="267d3-252">Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.</span><span class="sxs-lookup"><span data-stu-id="267d3-252">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-253">Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an.</span><span class="sxs-lookup"><span data-stu-id="267d3-253">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="267d3-254">Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode.</span><span class="sxs-lookup"><span data-stu-id="267d3-254">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="267d3-255">Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.</span><span class="sxs-lookup"><span data-stu-id="267d3-255">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-256">Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an.</span><span class="sxs-lookup"><span data-stu-id="267d3-256">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="267d3-257">Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode.</span><span class="sxs-lookup"><span data-stu-id="267d3-257">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="267d3-258">Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.</span><span class="sxs-lookup"><span data-stu-id="267d3-258">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-259">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-259">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-260">Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.</span><span class="sxs-lookup"><span data-stu-id="267d3-260">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="267d3-261">Eine Liste der Data Lake Store-Pfade (beginnend mit '/') der Quelldateien.</span><span class="sxs-lookup"><span data-stu-id="267d3-261">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="267d3-262">Muss im Format eine durch Trennzeichen getrennte Pfadliste: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="267d3-262">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-263">Öffnet und liest aus der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="267d3-263">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-264">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-264">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-265">Der Data Lake Store-Pfad (beginnend mit '/') der Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="267d3-265">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open(string, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-266">Öffnet und liest aus der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="267d3-266">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open(string, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-267">Öffnet und liest aus der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="267d3-267">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-268">Öffnet und liest aus der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="267d3-268">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-269">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-270">Der Data Lake Store-Pfad (beginnend mit '/') der Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="267d3-270">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-271">Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="267d3-271">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-272">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-272">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-273">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-273">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-274">Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="267d3-274">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-275">Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="267d3-275">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-276">Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="267d3-276">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-277">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-277">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-278">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-278">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="267d3-279">Die ACL-Spezifikation enthalten in der ACL entfernen Vorgänge im Format "[Standard:] Benutzer | Gruppe | andere '</span><span class="sxs-lookup"><span data-stu-id="267d3-279">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-280">Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="267d3-280">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-281">Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="267d3-281">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-282">Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="267d3-282">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-283">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-283">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-284">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-284">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="267d3-285">Die ACL-Spezifikation enthalten in der ACL entfernen Vorgänge im Format "[Standard:] Benutzer | Gruppe | andere '</span><span class="sxs-lookup"><span data-stu-id="267d3-285">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-286">Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="267d3-286">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-287">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-288">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-288">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-289">Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="267d3-289">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-290">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-291">Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, für die Standard-ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-291">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-292">Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="267d3-292">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-293">Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="267d3-293">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-294">Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="267d3-294">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-295">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-295">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-296">Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, für die Standard-ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-296">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-297">Umbenennen einer Datei oder eines Verzeichnisses an.</span><span class="sxs-lookup"><span data-stu-id="267d3-297">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-298">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-298">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-299">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis verschieben/umbenennen.</span><span class="sxs-lookup"><span data-stu-id="267d3-299">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="267d3-300">Der Pfad zur verschieben/Umbenennen der Datei oder einen Ordner auf</span><span class="sxs-lookup"><span data-stu-id="267d3-300">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename(string, string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-301">Umbenennen einer Datei oder eines Verzeichnisses an.</span><span class="sxs-lookup"><span data-stu-id="267d3-301">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename(string, string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-302">Umbenennen einer Datei oder eines Verzeichnisses an.</span><span class="sxs-lookup"><span data-stu-id="267d3-302">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-303">Umbenennen einer Datei oder eines Verzeichnisses an.</span><span class="sxs-lookup"><span data-stu-id="267d3-303">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-304">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-304">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-305">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis verschieben/umbenennen.</span><span class="sxs-lookup"><span data-stu-id="267d3-305">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="267d3-306">Der Pfad zur verschieben/Umbenennen der Datei oder einen Ordner auf</span><span class="sxs-lookup"><span data-stu-id="267d3-306">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-307">Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-307">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-308">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-308">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-309">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses auf dem die ACL festgelegt.</span><span class="sxs-lookup"><span data-stu-id="267d3-309">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="267d3-310">Die ACL-Spezifikation enthalten in der ACL-Erstellungsvorgänge, im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"</span><span class="sxs-lookup"><span data-stu-id="267d3-310">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-311">Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-311">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-312">Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-312">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-313">Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-313">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-314">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-314">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-315">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses auf dem die ACL festgelegt.</span><span class="sxs-lookup"><span data-stu-id="267d3-315">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="267d3-316">Die ACL-Spezifikation enthalten in der ACL-Erstellungsvorgänge, im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"</span><span class="sxs-lookup"><span data-stu-id="267d3-316">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-317">Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-317">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="267d3-318">Dieser Vorgang kann nur für Dateien ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-318">This operation can only be executed against files.</span></span> <span data-ttu-id="267d3-319">Ordner werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="267d3-319">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-320">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-320">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-321">Der Data Lake Store-Pfad (beginnend mit '/') der Datei auf dem für das Festlegen oder entfernen die Ablaufzeit.</span><span class="sxs-lookup"><span data-stu-id="267d3-321">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="267d3-322">Gibt den Typ des Ablaufs für die Datei: 1.</span><span class="sxs-lookup"><span data-stu-id="267d3-322">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="267d3-323">NeverExpire: ExpireTime wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="267d3-323">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="267d3-324">2.</span><span class="sxs-lookup"><span data-stu-id="267d3-324">2.</span></span> <span data-ttu-id="267d3-325">RelativeToNow: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zum darstellt, wenn Dateiablauf aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="267d3-325">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="267d3-326">3.</span><span class="sxs-lookup"><span data-stu-id="267d3-326">3.</span></span> <span data-ttu-id="267d3-327">RelativeToCreationDate: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zur Erstellung der Datei darstellt.</span><span class="sxs-lookup"><span data-stu-id="267d3-327">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="267d3-328">4.</span><span class="sxs-lookup"><span data-stu-id="267d3-328">4.</span></span> <span data-ttu-id="267d3-329">Absolute: ExpireTime ist eine ganze Zahl in Millisekunden, die als relativ zum 1/1/1970 Unix Timestamp 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="267d3-329">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="267d3-330">Mögliche Werte sind: 'NeverExpire', 'RelativeToNow', "RelativeToCreationDate", "Absolute"</span><span class="sxs-lookup"><span data-stu-id="267d3-330">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-331">Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-331">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="267d3-332">Dieser Vorgang kann nur für Dateien ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-332">This operation can only be executed against files.</span></span> <span data-ttu-id="267d3-333">Ordner werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="267d3-333">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-334">Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-334">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="267d3-335">Dieser Vorgang kann nur für Dateien ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-335">This operation can only be executed against files.</span></span> <span data-ttu-id="267d3-336">Ordner werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="267d3-336">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-337">Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-337">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="267d3-338">Dieser Vorgang kann nur für Dateien ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="267d3-338">This operation can only be executed against files.</span></span> <span data-ttu-id="267d3-339">Ordner werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="267d3-339">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-340">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-340">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-341">Der Data Lake Store-Pfad (beginnend mit '/') der Datei auf dem für das Festlegen oder entfernen die Ablaufzeit.</span><span class="sxs-lookup"><span data-stu-id="267d3-341">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="267d3-342">Gibt den Typ des Ablaufs für die Datei: 1.</span><span class="sxs-lookup"><span data-stu-id="267d3-342">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="267d3-343">NeverExpire: ExpireTime wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="267d3-343">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="267d3-344">2.</span><span class="sxs-lookup"><span data-stu-id="267d3-344">2.</span></span> <span data-ttu-id="267d3-345">RelativeToNow: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zum darstellt, wenn Dateiablauf aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="267d3-345">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="267d3-346">3.</span><span class="sxs-lookup"><span data-stu-id="267d3-346">3.</span></span> <span data-ttu-id="267d3-347">RelativeToCreationDate: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zur Erstellung der Datei darstellt.</span><span class="sxs-lookup"><span data-stu-id="267d3-347">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="267d3-348">4.</span><span class="sxs-lookup"><span data-stu-id="267d3-348">4.</span></span> <span data-ttu-id="267d3-349">Absolute: ExpireTime ist eine ganze Zahl in Millisekunden, die als relativ zum 1/1/1970 Unix Timestamp 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="267d3-349">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="267d3-350">Mögliche Werte sind: 'NeverExpire', 'RelativeToNow', "RelativeToCreationDate", "Absolute"</span><span class="sxs-lookup"><span data-stu-id="267d3-350">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-351">Legt den Besitzer einer Datei oder Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-351">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-352">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-353">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis, für das zum Festlegen des Besitzers.</span><span class="sxs-lookup"><span data-stu-id="267d3-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-354">Legt den Besitzer einer Datei oder Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-354">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-355">Legt den Besitzer einer Datei oder Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-355">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-356">Legt den Besitzer einer Datei oder Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="267d3-356">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-357">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-358">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis, für das zum Festlegen des Besitzers.</span><span class="sxs-lookup"><span data-stu-id="267d3-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-359">Legt den Berechtigungssatz einer Datei oder eines Ordners.</span><span class="sxs-lookup"><span data-stu-id="267d3-359">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-360">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-360">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-361">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die Berechtigung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="267d3-361">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-362">Legt den Berechtigungssatz einer Datei oder eines Ordners.</span><span class="sxs-lookup"><span data-stu-id="267d3-362">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-363">Legt den Berechtigungssatz einer Datei oder eines Ordners.</span><span class="sxs-lookup"><span data-stu-id="267d3-363">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="267d3-364">Legt den Berechtigungssatz einer Datei oder eines Ordners.</span><span class="sxs-lookup"><span data-stu-id="267d3-364">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="267d3-365">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="267d3-365">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="267d3-366">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die Berechtigung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="267d3-366">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  name: FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  name: AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  name: ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  name: FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  name: FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
