### YamlMime:UniversalReference
ms.openlocfilehash: 75afaedf2f5e76f076c1167cc227823ca7dc934f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 08/12/2018
ms.locfileid: "40060826"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Verwendet für die Seriennummer in die angegebene Datei angefügt. Hinweis: Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten. ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei, die dem angefügt werden sollen.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Verwendet für die Seriennummer in die angegebene Datei angefügt. Hinweis: Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten. ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Verwendet für die Seriennummer in die angegebene Datei angefügt. Hinweis: Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten. ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Verwendet für die Seriennummer in die angegebene Datei angefügt. Hinweis: Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten. ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei, die dem angefügt werden sollen.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den Zugriff zu überprüfen.
    - id: fsaction
      type:
      - string
      description: >
        In Form einer Zeichenfolge, Regex-Muster übereinstimmende Datei System Vorgang Lesen/Schreiben/Ausführen "[Rwx-]{3}"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den Zugriff zu überprüfen.
    - id: fsaction
      type:
      - string
      description: >
        In Form einer Zeichenfolge, Regex-Muster übereinstimmende Datei System Vorgang Lesen/Schreiben/Ausführen "[Rwx-]{3}"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.
    - id: sources
      type:
      - string[]
      description: >
        Eine Liste von durch Trennzeichen getrennt, Data Lake Store-Pfade (beginnend mit '/') der Dateien, die in der Reihenfolge verkettet, in dem sie verkettet werden soll.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.
    - id: sources
      type:
      - string[]
      description: >
        Eine Liste von durch Trennzeichen getrennt, Data Lake Store-Pfade (beginnend mit '/') der Dateien, die in der Reihenfolge verkettet, in dem sie verkettet werden soll.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist. Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.

    Hinweis: Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten. ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden. ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei an, fügen Sie mithilfe von gleichzeitiger angefügt werden soll.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist. Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.

    Hinweis: Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten. ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden. ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist. Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.

    Hinweis: Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten. ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden. ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist. Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.

    Hinweis: Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten. ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden. ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei an, fügen Sie mithilfe von gleichzeitiger angefügt werden soll.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Erstellt eine Datei mit optional angegebenen Inhalt. Hinweis: Wenn Inhalt bereitgestellt wird, kann die resultierende Datei geändert werden ConcurrentAppend verwenden.'
  syntax:
    content: 'function create(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Erstellt eine Datei mit optional angegebenen Inhalt. Hinweis: Wenn Inhalt bereitgestellt wird, kann die resultierende Datei geändert werden ConcurrentAppend verwenden.'
  syntax:
    content: 'function create(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der zu erstellenden Datei.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Erstellt eine Datei mit optional angegebenen Inhalt. Hinweis: Wenn Inhalt bereitgestellt wird, kann die resultierende Datei geändert werden ConcurrentAppend verwenden.'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Erstellt eine Datei mit optional angegebenen Inhalt. Hinweis: Wenn Inhalt bereitgestellt wird, kann die resultierende Datei geändert werden ConcurrentAppend verwenden.'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der zu erstellenden Datei.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses zu löschen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses zu löschen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die ACL abgerufen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: function, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die ACL abgerufen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei für die Zusammenfassung des abzurufen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: function, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei für die Zusammenfassung des abzurufen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für das Abrufen des Status.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für das Abrufen des Status.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, das Liste.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, das Liste.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellt ein Verzeichnis.
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der das zu erstellende Verzeichnis.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellt ein Verzeichnis.
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellt ein Verzeichnis.
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellt ein Verzeichnis.
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der das zu erstellende Verzeichnis.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL, die geändert wird.
    - id: aclspec
      type:
      - string
      description: >
        Die ACL-Spezifikation enthalten in der ACL Änderungsvorgänge im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL, die geändert wird.
    - id: aclspec
      type:
      - string
      description: >
        Die ACL-Spezifikation enthalten in der ACL Änderungsvorgänge im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an. Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode. Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Eine Liste der Data Lake Store-Pfade (beginnend mit '/') der Quelldateien. Muss im Format eine durch Trennzeichen getrennte Pfadliste: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an. Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode. Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an. Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode. Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an. Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode. Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Eine Liste der Data Lake Store-Pfade (beginnend mit '/') der Quelldateien. Muss im Format eine durch Trennzeichen getrennte Pfadliste: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Öffnet und liest aus der angegebenen Datei.
  syntax:
    content: 'function open(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei zu öffnen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Öffnet und liest aus der angegebenen Datei.
  syntax:
    content: 'function open(accountName: string, path: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Öffnet und liest aus der angegebenen Datei.
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Öffnet und liest aus der angegebenen Datei.
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei zu öffnen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.
    - id: aclspec
      type:
      - string
      description: >
        Die ACL-Spezifikation enthalten in der ACL entfernen Vorgänge im Format "[Standard:] Benutzer | Gruppe | andere '
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.
    - id: aclspec
      type:
      - string
      description: >
        Die ACL-Spezifikation enthalten in der ACL entfernen Vorgänge im Format "[Standard:] Benutzer | Gruppe | andere '
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, für die Standard-ACL entfernt werden.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, für die Standard-ACL entfernt werden.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: Umbenennen einer Datei oder eines Verzeichnisses an.
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis verschieben/umbenennen.
    - id: destination
      type:
      - string
      description: >
        Der Pfad zur verschieben/Umbenennen der Datei oder einen Ordner auf
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: Umbenennen einer Datei oder eines Verzeichnisses an.
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: Umbenennen einer Datei oder eines Verzeichnisses an.
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Umbenennen einer Datei oder eines Verzeichnisses an.
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis verschieben/umbenennen.
    - id: destination
      type:
      - string
      description: >
        Der Pfad zur verschieben/Umbenennen der Datei oder einen Ordner auf
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses auf dem die ACL festgelegt.
    - id: aclspec
      type:
      - string
      description: >
        Die ACL-Spezifikation enthalten in der ACL-Erstellungsvorgänge, im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses auf dem die ACL festgelegt.
    - id: aclspec
      type:
      - string
      description: >
        Die ACL-Spezifikation enthalten in der ACL-Erstellungsvorgänge, im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest. Dieser Vorgang kann nur für Dateien ausgeführt werden. Ordner werden nicht unterstützt.
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei auf dem für das Festlegen oder entfernen die Ablaufzeit.
    - id: expiryOption
      type:
      - string
      description: >
        Gibt den Typ der Ablauf für die Datei zu verwenden: 1. NeverExpire: ExpireTime wird ignoriert. 2. RelativeToNow: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zum darstellt, wenn Dateiablauf aktualisiert wird. 3. RelativeToCreationDate: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zur Erstellung der Datei darstellt. 4. Absolute: ExpireTime ist eine ganze Zahl in Millisekunden, die als einen Unix-Zeitstempel, relativ zum 1/1/1970 00:00:00. Folgende Werte sind möglich: 'NeverExpire', 'RelativeToNow', "RelativeToCreationDate", "Absolute"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest. Dieser Vorgang kann nur für Dateien ausgeführt werden. Ordner werden nicht unterstützt.
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest. Dieser Vorgang kann nur für Dateien ausgeführt werden. Ordner werden nicht unterstützt.
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest. Dieser Vorgang kann nur für Dateien ausgeführt werden. Ordner werden nicht unterstützt.
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei auf dem für das Festlegen oder entfernen die Ablaufzeit.
    - id: expiryOption
      type:
      - string
      description: >
        Gibt den Typ der Ablauf für die Datei zu verwenden: 1. NeverExpire: ExpireTime wird ignoriert. 2. RelativeToNow: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zum darstellt, wenn Dateiablauf aktualisiert wird. 3. RelativeToCreationDate: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zur Erstellung der Datei darstellt. 4. Absolute: ExpireTime ist eine ganze Zahl in Millisekunden, die als einen Unix-Zeitstempel, relativ zum 1/1/1970 00:00:00. Folgende Werte sind möglich: 'NeverExpire', 'RelativeToNow', "RelativeToCreationDate", "Absolute"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt den Besitzer einer Datei oder Verzeichnis fest.
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis, für das zum Festlegen des Besitzers.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt den Besitzer einer Datei oder Verzeichnis fest.
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt den Besitzer einer Datei oder Verzeichnis fest.
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt den Besitzer einer Datei oder Verzeichnis fest.
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis, für das zum Festlegen des Besitzers.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt den Berechtigungssatz einer Datei oder eines Ordners.
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die Berechtigung festgelegt.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt den Berechtigungssatz einer Datei oder eines Ordners.
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt den Berechtigungssatz einer Datei oder eines Ordners.
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Legt den Berechtigungssatz einer Datei oder eines Ordners.
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.
    - id: path
      type:
      - string
      description: >
        Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die Berechtigung festgelegt.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
