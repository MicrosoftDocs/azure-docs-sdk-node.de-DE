### YamlMime:UniversalReference
ms.openlocfilehash: 75afaedf2f5e76f076c1167cc227823ca7dc934f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 08/12/2018
ms.locfileid: "40060826"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e2836-101">Verwendet für die Seriennummer in die angegebene Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="e2836-101">Used for serial appends to the specified file.</span></span> <span data-ttu-id="e2836-102">Hinweis: Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-102">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="e2836-103">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-104">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-105">Der Data Lake Store-Pfad (beginnend mit '/') der Datei, die dem angefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e2836-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e2836-106">Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e2836-106">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e2836-107">Verwendet für die Seriennummer in die angegebene Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="e2836-107">Used for serial appends to the specified file.</span></span> <span data-ttu-id="e2836-108">Hinweis: Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-108">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="e2836-109">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-109">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e2836-110">Verwendet für die Seriennummer in die angegebene Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="e2836-110">Used for serial appends to the specified file.</span></span> <span data-ttu-id="e2836-111">Hinweis: Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-111">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="e2836-112">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-112">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e2836-113">Verwendet für die Seriennummer in die angegebene Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="e2836-113">Used for serial appends to the specified file.</span></span> <span data-ttu-id="e2836-114">Hinweis: Das Ziel darf keine Daten hinzugefügt, indem ConcurrentAppend enthalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-114">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="e2836-115">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-115">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-116">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-116">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-117">Der Data Lake Store-Pfad (beginnend mit '/') der Datei, die dem angefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e2836-117">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e2836-118">Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e2836-118">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-119">Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="e2836-119">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-120">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-120">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-121">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den Zugriff zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="e2836-121">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="e2836-122">In Form einer Zeichenfolge, Regex-Muster übereinstimmende Datei System Vorgang Lesen/Schreiben/Ausführen "[Rwx-]{3}"</span><span class="sxs-lookup"><span data-stu-id="e2836-122">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-123">Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="e2836-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-124">Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="e2836-124">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-125">Überprüft, ob der angegebene Zugriff im angegebenen Pfad verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="e2836-125">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-126">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-126">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-127">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den Zugriff zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="e2836-127">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="e2836-128">In Form einer Zeichenfolge, Regex-Muster übereinstimmende Datei System Vorgang Lesen/Schreiben/Ausführen "[Rwx-]{3}"</span><span class="sxs-lookup"><span data-stu-id="e2836-128">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-129">Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.</span><span class="sxs-lookup"><span data-stu-id="e2836-129">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-130">Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.</span><span class="sxs-lookup"><span data-stu-id="e2836-130">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-131">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-131">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-132">Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.</span><span class="sxs-lookup"><span data-stu-id="e2836-132">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="e2836-133">Eine Liste von durch Trennzeichen getrennt, Data Lake Store-Pfade (beginnend mit '/') der Dateien, die in der Reihenfolge verkettet, in dem sie verkettet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e2836-133">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-134">Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.</span><span class="sxs-lookup"><span data-stu-id="e2836-134">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-135">Wird die Liste der Quelldateien in der Zieldatei, entfernen alle Quelldateien bei erfolgreicher Ausführung verknüpft.</span><span class="sxs-lookup"><span data-stu-id="e2836-135">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-136">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-136">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-137">Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.</span><span class="sxs-lookup"><span data-stu-id="e2836-137">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="e2836-138">Eine Liste von durch Trennzeichen getrennt, Data Lake Store-Pfade (beginnend mit '/') der Dateien, die in der Reihenfolge verkettet, in dem sie verkettet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e2836-138">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e2836-139">Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e2836-139">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="e2836-140">Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="e2836-140">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="e2836-141">Hinweis: Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-141">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="e2836-142">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-142">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="e2836-143">ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.</span><span class="sxs-lookup"><span data-stu-id="e2836-143">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-144">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-144">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-145">Der Data Lake Store-Pfad (beginnend mit '/') der Datei an, fügen Sie mithilfe von gleichzeitiger angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e2836-145">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e2836-146">Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e2836-146">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e2836-147">Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e2836-147">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="e2836-148">Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="e2836-148">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="e2836-149">Hinweis: Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-149">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="e2836-150">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-150">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="e2836-151">ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.</span><span class="sxs-lookup"><span data-stu-id="e2836-151">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e2836-152">Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e2836-152">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="e2836-153">Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="e2836-153">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="e2836-154">Hinweis: Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-154">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="e2836-155">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-155">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="e2836-156">ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.</span><span class="sxs-lookup"><span data-stu-id="e2836-156">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e2836-157">Fügt die angegebene Datei und optional die Datei zuerst zu erstellen, wenn sie noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="e2836-157">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="e2836-158">Diese Methode unterstützt mehrere gleichzeitige an die Datei angefügt.</span><span class="sxs-lookup"><span data-stu-id="e2836-158">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="e2836-159">Hinweis: Das Ziel darf keine Daten hinzugefügt wurden, erstellen oder normal (seriell) anfügen enthalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-159">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="e2836-160">ConcurrentAppend und anfügen, kann nicht als Synonym verwendet werden; Sobald eine Zieldatei geändert wurde fügen Sie mithilfe der folgenden Optionen, die andere Option zum Anfügen kann nicht auf die Zieldatei nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-160">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="e2836-161">ConcurrentAppend garantiert nicht die Reihenfolge und kann dazu führen, doppelt vorhandenen Daten in die Zieldatei landing.</span><span class="sxs-lookup"><span data-stu-id="e2836-161">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-162">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-162">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-163">Der Data Lake Store-Pfad (beginnend mit '/') der Datei an, fügen Sie mithilfe von gleichzeitiger angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e2836-163">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e2836-164">Der Inhalt der Datei beim Anhängen an die Datei eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e2836-164">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e2836-165">Erstellt eine Datei mit optional angegebenen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="e2836-165">Creates a file with optionally specified content.</span></span> <span data-ttu-id="e2836-166">Hinweis: Wenn Inhalt bereitgestellt wird, kann die resultierende Datei geändert werden ConcurrentAppend verwenden.</span><span class="sxs-lookup"><span data-stu-id="e2836-166">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e2836-167">Erstellt eine Datei mit optional angegebenen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="e2836-167">Creates a file with optionally specified content.</span></span> <span data-ttu-id="e2836-168">Hinweis: Wenn Inhalt bereitgestellt wird, kann die resultierende Datei geändert werden ConcurrentAppend verwenden.</span><span class="sxs-lookup"><span data-stu-id="e2836-168">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-169">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-169">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-170">Der Data Lake Store-Pfad (beginnend mit '/') der zu erstellenden Datei.</span><span class="sxs-lookup"><span data-stu-id="e2836-170">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e2836-171">Erstellt eine Datei mit optional angegebenen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="e2836-171">Creates a file with optionally specified content.</span></span> <span data-ttu-id="e2836-172">Hinweis: Wenn Inhalt bereitgestellt wird, kann die resultierende Datei geändert werden ConcurrentAppend verwenden.</span><span class="sxs-lookup"><span data-stu-id="e2836-172">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e2836-173">Erstellt eine Datei mit optional angegebenen Inhalt.</span><span class="sxs-lookup"><span data-stu-id="e2836-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="e2836-174">Hinweis: Wenn Inhalt bereitgestellt wird, kann die resultierende Datei geändert werden ConcurrentAppend verwenden.</span><span class="sxs-lookup"><span data-stu-id="e2836-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-175">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-176">Der Data Lake Store-Pfad (beginnend mit '/') der zu erstellenden Datei.</span><span class="sxs-lookup"><span data-stu-id="e2836-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-177">Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.</span><span class="sxs-lookup"><span data-stu-id="e2836-177">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-178">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-178">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-179">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses zu löschen.</span><span class="sxs-lookup"><span data-stu-id="e2836-179">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-180">Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.</span><span class="sxs-lookup"><span data-stu-id="e2836-180">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-181">Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.</span><span class="sxs-lookup"><span data-stu-id="e2836-181">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-182">Die angeforderte Datei oder Verzeichnis und optional rekursiv gelöscht.</span><span class="sxs-lookup"><span data-stu-id="e2836-182">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-183">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-184">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses zu löschen.</span><span class="sxs-lookup"><span data-stu-id="e2836-184">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-185">Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="e2836-185">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-186">Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="e2836-186">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-187">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-187">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-188">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die ACL abgerufen.</span><span class="sxs-lookup"><span data-stu-id="e2836-188">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-189">Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="e2836-189">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: function, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-190">Ruft die Einträge der Zugriffssteuerungsliste (ACL) für die angegebene Datei oder das Verzeichnis ab.</span><span class="sxs-lookup"><span data-stu-id="e2836-190">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-191">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-192">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die ACL abgerufen.</span><span class="sxs-lookup"><span data-stu-id="e2836-192">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-193">Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.</span><span class="sxs-lookup"><span data-stu-id="e2836-193">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-194">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-195">Der Data Lake Store-Pfad (beginnend mit '/') der Datei für die Zusammenfassung des abzurufen.</span><span class="sxs-lookup"><span data-stu-id="e2836-195">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-196">Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.</span><span class="sxs-lookup"><span data-stu-id="e2836-196">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: function, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-197">Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.</span><span class="sxs-lookup"><span data-stu-id="e2836-197">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-198">Ruft das Content Zusammenfassung Dateiobjekt durch den Dateipfad angegeben.</span><span class="sxs-lookup"><span data-stu-id="e2836-198">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-199">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-200">Der Data Lake Store-Pfad (beginnend mit '/') der Datei für die Zusammenfassung des abzurufen.</span><span class="sxs-lookup"><span data-stu-id="e2836-200">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-201">Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-201">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-202">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-203">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für das Abrufen des Status.</span><span class="sxs-lookup"><span data-stu-id="e2836-203">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-204">Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-204">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-205">Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-205">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-206">Das Objekt "Datei" Status gemäß den Dateipfad zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="e2836-206">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-207">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-208">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für das Abrufen des Status.</span><span class="sxs-lookup"><span data-stu-id="e2836-208">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-209">Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status</span><span class="sxs-lookup"><span data-stu-id="e2836-209">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-210">Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status</span><span class="sxs-lookup"><span data-stu-id="e2836-210">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-211">Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status</span><span class="sxs-lookup"><span data-stu-id="e2836-211">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-212">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-212">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-213">Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, das Liste.</span><span class="sxs-lookup"><span data-stu-id="e2836-213">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-214">Rufen Sie die Liste von Objekten durch den Dateipfad, mit optionalen Paginierung-Parameter angegebenen status</span><span class="sxs-lookup"><span data-stu-id="e2836-214">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-215">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-216">Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, das Liste.</span><span class="sxs-lookup"><span data-stu-id="e2836-216">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-217">Erstellt ein Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="e2836-217">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-218">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-219">Der Data Lake Store-Pfad (beginnend mit '/') der das zu erstellende Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="e2836-219">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-220">Erstellt ein Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="e2836-220">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-221">Erstellt ein Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="e2836-221">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-222">Erstellt ein Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="e2836-222">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-223">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-224">Der Data Lake Store-Pfad (beginnend mit '/') der das zu erstellende Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="e2836-224">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-225">Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="e2836-225">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-226">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-227">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL, die geändert wird.</span><span class="sxs-lookup"><span data-stu-id="e2836-227">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="e2836-228">Die ACL-Spezifikation enthalten in der ACL Änderungsvorgänge im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"</span><span class="sxs-lookup"><span data-stu-id="e2836-228">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-229">Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="e2836-229">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-230">Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="e2836-230">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-231">Ändert vorhandene Zugriffssteuerungsliste (ACL)-Einträge für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="e2836-231">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-232">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-232">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-233">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL, die geändert wird.</span><span class="sxs-lookup"><span data-stu-id="e2836-233">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="e2836-234">Die ACL-Spezifikation enthalten in der ACL Änderungsvorgänge im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"</span><span class="sxs-lookup"><span data-stu-id="e2836-234">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-235">Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an.</span><span class="sxs-lookup"><span data-stu-id="e2836-235">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="e2836-236">Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode.</span><span class="sxs-lookup"><span data-stu-id="e2836-236">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="e2836-237">Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.</span><span class="sxs-lookup"><span data-stu-id="e2836-237">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-238">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-238">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-239">Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.</span><span class="sxs-lookup"><span data-stu-id="e2836-239">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e2836-240">Eine Liste der Data Lake Store-Pfade (beginnend mit '/') der Quelldateien.</span><span class="sxs-lookup"><span data-stu-id="e2836-240">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="e2836-241">Muss im Format eine durch Trennzeichen getrennte Pfadliste: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="e2836-241">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-242">Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an.</span><span class="sxs-lookup"><span data-stu-id="e2836-242">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="e2836-243">Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode.</span><span class="sxs-lookup"><span data-stu-id="e2836-243">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="e2836-244">Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.</span><span class="sxs-lookup"><span data-stu-id="e2836-244">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-245">Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an.</span><span class="sxs-lookup"><span data-stu-id="e2836-245">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="e2836-246">Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode.</span><span class="sxs-lookup"><span data-stu-id="e2836-246">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="e2836-247">Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.</span><span class="sxs-lookup"><span data-stu-id="e2836-247">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-248">Verkettet die Liste der Quelldateien in der Zieldatei, Löschen bei erfolgreicher Ausführung aller Quelldateien an.</span><span class="sxs-lookup"><span data-stu-id="e2836-248">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="e2836-249">Diese Methode akzeptiert Weitere quelldateipfaden als die Concat-Methode.</span><span class="sxs-lookup"><span data-stu-id="e2836-249">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="e2836-250">Diese Methode und die Parameter, die sie akzeptiert unterliegen zum Zweck der benutzerfreundlichkeit in einer zukünftigen Version.</span><span class="sxs-lookup"><span data-stu-id="e2836-250">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-251">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-251">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-252">Der Data Lake Store-Pfad (beginnend mit '/') der Zieldatei Folge der Verkettung.</span><span class="sxs-lookup"><span data-stu-id="e2836-252">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e2836-253">Eine Liste der Data Lake Store-Pfade (beginnend mit '/') der Quelldateien.</span><span class="sxs-lookup"><span data-stu-id="e2836-253">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="e2836-254">Muss im Format eine durch Trennzeichen getrennte Pfadliste: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="e2836-254">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-255">Öffnet und liest aus der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="e2836-255">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-256">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-256">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-257">Der Data Lake Store-Pfad (beginnend mit '/') der Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="e2836-257">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-258">Öffnet und liest aus der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="e2836-258">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-259">Öffnet und liest aus der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="e2836-259">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-260">Öffnet und liest aus der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="e2836-260">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-261">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-261">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-262">Der Data Lake Store-Pfad (beginnend mit '/') der Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="e2836-262">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-263">Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e2836-263">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-264">Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e2836-264">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-265">Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e2836-265">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-266">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-266">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-267">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-267">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-268">Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="e2836-268">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-269">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-270">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-270">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="e2836-271">Die ACL-Spezifikation enthalten in der ACL entfernen Vorgänge im Format "[Standard:] Benutzer | Gruppe | andere '</span><span class="sxs-lookup"><span data-stu-id="e2836-271">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-272">Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="e2836-272">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-273">Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="e2836-273">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-274">Entfernt einen vorhandenen Einträge der Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner.</span><span class="sxs-lookup"><span data-stu-id="e2836-274">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-275">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-275">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-276">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-276">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="e2836-277">Die ACL-Spezifikation enthalten in der ACL entfernen Vorgänge im Format "[Standard:] Benutzer | Gruppe | andere '</span><span class="sxs-lookup"><span data-stu-id="e2836-277">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-278">Entfernt die vorhandene Zugriffssteuerungsliste (ACL) der angegebenen Datei bzw. des Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e2836-278">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-279">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-279">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-280">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses mit der ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-280">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-281">Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e2836-281">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-282">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-282">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-283">Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, für die Standard-ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-283">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-284">Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e2836-284">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-285">Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e2836-285">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-286">Entfernt die vorhandenen Standard Zugriffssteuerungsliste (ACL) des angegebenen Verzeichnisses.</span><span class="sxs-lookup"><span data-stu-id="e2836-286">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-287">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-288">Der Data Lake Store-Pfad (beginnend mit "/") des Verzeichnisses, für die Standard-ACL entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-288">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-289">Umbenennen einer Datei oder eines Verzeichnisses an.</span><span class="sxs-lookup"><span data-stu-id="e2836-289">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-290">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-291">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis verschieben/umbenennen.</span><span class="sxs-lookup"><span data-stu-id="e2836-291">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="e2836-292">Der Pfad zur verschieben/Umbenennen der Datei oder einen Ordner auf</span><span class="sxs-lookup"><span data-stu-id="e2836-292">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-293">Umbenennen einer Datei oder eines Verzeichnisses an.</span><span class="sxs-lookup"><span data-stu-id="e2836-293">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-294">Umbenennen einer Datei oder eines Verzeichnisses an.</span><span class="sxs-lookup"><span data-stu-id="e2836-294">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-295">Umbenennen einer Datei oder eines Verzeichnisses an.</span><span class="sxs-lookup"><span data-stu-id="e2836-295">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-296">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-296">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-297">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis verschieben/umbenennen.</span><span class="sxs-lookup"><span data-stu-id="e2836-297">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="e2836-298">Der Pfad zur verschieben/Umbenennen der Datei oder einen Ordner auf</span><span class="sxs-lookup"><span data-stu-id="e2836-298">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-299">Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-299">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-300">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-300">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-301">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses auf dem die ACL festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e2836-301">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="e2836-302">Die ACL-Spezifikation enthalten in der ACL-Erstellungsvorgänge, im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"</span><span class="sxs-lookup"><span data-stu-id="e2836-302">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-303">Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-303">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-304">Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-304">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-305">Legt die Zugriffssteuerungsliste (ACL) für eine Datei oder Ordner fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-305">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-306">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-306">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-307">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses auf dem die ACL festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e2836-307">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="e2836-308">Die ACL-Spezifikation enthalten in der ACL-Erstellungsvorgänge, im Format "[Standard:] Benutzer | Gruppe | andere:: R |-w |-X |-"</span><span class="sxs-lookup"><span data-stu-id="e2836-308">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-309">Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-309">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="e2836-310">Dieser Vorgang kann nur für Dateien ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-310">This operation can only be executed against files.</span></span> <span data-ttu-id="e2836-311">Ordner werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e2836-311">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-312">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-312">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-313">Der Data Lake Store-Pfad (beginnend mit '/') der Datei auf dem für das Festlegen oder entfernen die Ablaufzeit.</span><span class="sxs-lookup"><span data-stu-id="e2836-313">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="e2836-314">Gibt den Typ der Ablauf für die Datei zu verwenden: 1.</span><span class="sxs-lookup"><span data-stu-id="e2836-314">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="e2836-315">NeverExpire: ExpireTime wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="e2836-315">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="e2836-316">2.</span><span class="sxs-lookup"><span data-stu-id="e2836-316">2.</span></span> <span data-ttu-id="e2836-317">RelativeToNow: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zum darstellt, wenn Dateiablauf aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="e2836-317">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="e2836-318">3.</span><span class="sxs-lookup"><span data-stu-id="e2836-318">3.</span></span> <span data-ttu-id="e2836-319">RelativeToCreationDate: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zur Erstellung der Datei darstellt.</span><span class="sxs-lookup"><span data-stu-id="e2836-319">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="e2836-320">4.</span><span class="sxs-lookup"><span data-stu-id="e2836-320">4.</span></span> <span data-ttu-id="e2836-321">Absolute: ExpireTime ist eine ganze Zahl in Millisekunden, die als einen Unix-Zeitstempel, relativ zum 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="e2836-321">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="e2836-322">Folgende Werte sind möglich: 'NeverExpire', 'RelativeToNow', "RelativeToCreationDate", "Absolute"</span><span class="sxs-lookup"><span data-stu-id="e2836-322">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-323">Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-323">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="e2836-324">Dieser Vorgang kann nur für Dateien ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-324">This operation can only be executed against files.</span></span> <span data-ttu-id="e2836-325">Ordner werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e2836-325">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-326">Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-326">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="e2836-327">Dieser Vorgang kann nur für Dateien ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-327">This operation can only be executed against files.</span></span> <span data-ttu-id="e2836-328">Ordner werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e2836-328">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-329">Entfernt die Ablaufzeit für die angegebene Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-329">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="e2836-330">Dieser Vorgang kann nur für Dateien ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="e2836-330">This operation can only be executed against files.</span></span> <span data-ttu-id="e2836-331">Ordner werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e2836-331">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-332">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-332">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-333">Der Data Lake Store-Pfad (beginnend mit '/') der Datei auf dem für das Festlegen oder entfernen die Ablaufzeit.</span><span class="sxs-lookup"><span data-stu-id="e2836-333">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="e2836-334">Gibt den Typ der Ablauf für die Datei zu verwenden: 1.</span><span class="sxs-lookup"><span data-stu-id="e2836-334">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="e2836-335">NeverExpire: ExpireTime wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="e2836-335">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="e2836-336">2.</span><span class="sxs-lookup"><span data-stu-id="e2836-336">2.</span></span> <span data-ttu-id="e2836-337">RelativeToNow: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zum darstellt, wenn Dateiablauf aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="e2836-337">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="e2836-338">3.</span><span class="sxs-lookup"><span data-stu-id="e2836-338">3.</span></span> <span data-ttu-id="e2836-339">RelativeToCreationDate: ExpireTime ist eine ganze Zahl in Millisekunden, die das Ablaufdatum relativ zur Erstellung der Datei darstellt.</span><span class="sxs-lookup"><span data-stu-id="e2836-339">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="e2836-340">4.</span><span class="sxs-lookup"><span data-stu-id="e2836-340">4.</span></span> <span data-ttu-id="e2836-341">Absolute: ExpireTime ist eine ganze Zahl in Millisekunden, die als einen Unix-Zeitstempel, relativ zum 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="e2836-341">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="e2836-342">Folgende Werte sind möglich: 'NeverExpire', 'RelativeToNow', "RelativeToCreationDate", "Absolute"</span><span class="sxs-lookup"><span data-stu-id="e2836-342">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-343">Legt den Besitzer einer Datei oder Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-343">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-344">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-344">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-345">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis, für das zum Festlegen des Besitzers.</span><span class="sxs-lookup"><span data-stu-id="e2836-345">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-346">Legt den Besitzer einer Datei oder Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-346">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-347">Legt den Besitzer einer Datei oder Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-347">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-348">Legt den Besitzer einer Datei oder Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="e2836-348">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-349">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-349">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-350">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder Verzeichnis, für das zum Festlegen des Besitzers.</span><span class="sxs-lookup"><span data-stu-id="e2836-350">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-351">Legt den Berechtigungssatz einer Datei oder eines Ordners.</span><span class="sxs-lookup"><span data-stu-id="e2836-351">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-352">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-353">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die Berechtigung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e2836-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-354">Legt den Berechtigungssatz einer Datei oder eines Ordners.</span><span class="sxs-lookup"><span data-stu-id="e2836-354">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-355">Legt den Berechtigungssatz einer Datei oder eines Ordners.</span><span class="sxs-lookup"><span data-stu-id="e2836-355">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2836-356">Legt den Berechtigungssatz einer Datei oder eines Ordners.</span><span class="sxs-lookup"><span data-stu-id="e2836-356">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="e2836-357">Das auszuführende Dateisystemvorgänge in Azure Data Lake Store-Konto.</span><span class="sxs-lookup"><span data-stu-id="e2836-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="e2836-358">Der Data Lake Store-Pfad (beginnend mit '/') der Datei oder des Verzeichnisses für den die Berechtigung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e2836-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
