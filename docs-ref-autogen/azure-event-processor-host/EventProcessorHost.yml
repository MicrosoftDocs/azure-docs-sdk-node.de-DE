### YamlMime:UniversalReference
ms.openlocfilehash: 4ebb32f87ada52fdc7366c00a14156400684884b
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 08/22/2018
ms.locfileid: "41686109"
items:
- uid: azure-event-processor-host.EventProcessorHost
  name: EventProcessorHost
  fullName: EventProcessorHost
  children:
  - azure-event-processor-host.EventProcessorHost.autoCheckpoint
  - azure-event-processor-host.EventProcessorHost.closed
  - azure-event-processor-host.EventProcessorHost.consumerGroup
  - azure-event-processor-host.EventProcessorHost.createFromAadTokenCredentials
  - azure-event-processor-host.EventProcessorHost.createFromConnectionString
  - azure-event-processor-host.EventProcessorHost.createHostName
  - azure-event-processor-host.EventProcessorHost.error
  - azure-event-processor-host.EventProcessorHost.constructor
  - azure-event-processor-host.EventProcessorHost.getHubRuntimeInformation
  - azure-event-processor-host.EventProcessorHost.getPartitionIds
  - azure-event-processor-host.EventProcessorHost.getPartitionInformation
  - azure-event-processor-host.EventProcessorHost.hostName
  - azure-event-processor-host.EventProcessorHost.message
  - azure-event-processor-host.EventProcessorHost.opened
  - azure-event-processor-host.EventProcessorHost.start
  - azure-event-processor-host.EventProcessorHost.stop
  langs:
  - typeScript
  type: class
  summary: Beschreibt, der Ereignisprozessorhost zum Verarbeiten von Ereignissen aus einem "eventhub".
  extends:
    name: EventEmitter
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.autoCheckpoint
  name: autoCheckpoint
  fullName: autoCheckpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: '{booleschen} automatische Checkpoints automatisch Prüfpunkte der Offset im Auftrag des Kunden. Standardwert: `true`.'
  syntax:
    content: 'autoCheckpoint: boolean'
    return:
      type:
      - boolean
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.closed
  name: closed
  fullName: closed
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Geschlossen: Ausgelöst, wenn eine Partition verliert seine Lease und zum Beenden des Empfangs hat oder wenn der Host heruntergefahren wird. Die PartitionContext und der schließenden Grund wird in den Ereignislistener übergeben.'
  syntax:
    content: 'static closed: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.consumerGroup
  name: consumerGroup
  fullName: consumerGroup
  children: []
  langs:
  - typeScript
  type: property
  summary: Stellt der Consumer-Group-Name für den ereignisprozessorhost bereit.
  syntax:
    content: 'consumerGroup: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createFromAadTokenCredentials
  name: createFromAadTokenCredentials
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellt einen neuen Host zum Verarbeiten von Ereignissen von einem Event Hub.
  syntax:
    content: 'static function createFromAadTokenCredentials(hostName: string, storageConnectionString: string, namespace: string, eventHubPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, options?: EventProcessorOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Der Name des Prozessor-Hosts. MUSS EINDEUTIG SEIN.

        Empfohlen Sie z. B. eine Guid oder ein Präfix mit einer Guid, zur Sicherstellung der Eindeutigkeit wird dringend. Sie können `EventProcessorHost.createHostName("your-prefix")`; Standardwert: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Verbindungszeichenfolge für Azure Storage-Konto für die Leases und Prüfpunkte verwendet. Beispiel-DefaultEndpointsProtocol = Https; AccountName = < Kontoname >; AccountKey = < speicherkontoschlüssel >; EndpointSuffix=core.windows.net
    - id: namespace
      type:
      - string
      description: >-
        Vollständig qualifizierten Domänennamen für Event Hubs.

        Beispiel: "{your-Sb-Namespace}. #42;.servicebus.windows.net"
    - id: eventHubPath
      type:
      - string
      description: Der Name der den Event Hub.
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: 'Die AAD-Token-Anmeldeinformationen. Es kann einen der folgenden sein: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.'
    - id: options
      type:
      - azure-event-processor-host.EventProcessorOptions
      description: ''
      optional: true
    return:
      type:
      - azure-event-processor-host.EventProcessorHost
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createFromConnectionString
  name: createFromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Erstellt einen neuen Host zum Verarbeiten von Ereignissen von einem Event Hub.
  syntax:
    content: 'static function createFromConnectionString(hostName: string, storageConnectionString: string, eventHubConnectionString: string, options?: ConnectionStringBasedOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Der Name des Prozessor-Hosts. MUSS EINDEUTIG SEIN.

        Empfohlen Sie z. B. eine Guid oder ein Präfix mit einer Guid, zur Sicherstellung der Eindeutigkeit wird dringend. Sie können `EventProcessorHost.createHostName("your-prefix")`; Standardwert: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Verbindungszeichenfolge für Azure Storage-Konto für die Leases und Prüfpunkte verwendet. Beispiel-DefaultEndpointsProtocol = Https; AccountName = < Kontoname >; AccountKey = < speicherkontoschlüssel >; EndpointSuffix=core.windows.net
    - id: eventHubConnectionString
      type:
      - string
      description: >-
        Die Verbindungszeichenfolge für den Event Hub zum Empfangen von.

        Beispiel: "Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/; SharedAccessKeyName = my-SA-Name; SharedAccessKey Meine-SA-Key = "
    - id: options
      type:
      - azure-event-processor-host.ConnectionStringBasedOptions
      description: ''
      optional: true
    return:
      type:
      - azure-event-processor-host.EventProcessorHost
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createHostName
  name: createHostName
  children: []
  type: method
  langs:
  - typeScript
  summary: Hilfsmethode zum Generieren von eindeutigen Hostnamen.
  syntax:
    content: 'static function createHostName(prefix?: string)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.error
  name: error
  fullName: error
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Fehler: Wird ausgelöst, wenn auf einem bestimmten Empfänger ein Fehler auftritt. Die EventHubsError oder ein generischer Fehlerobjekt wird den Ereignislistener übergeben.'
  syntax:
    content: 'static error: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.constructor
  name: EventProcessorHost
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Erstellt einen neuen Host zum Verarbeiten von Ereignissen von einem Event Hub.
  syntax:
    content: 'new EventProcessorHost(hostName: string, storageConnectionString: string, eventHubClient: EventHubClient, options?: EventProcessorOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Der Name des Prozessor-Hosts. MUSS EINDEUTIG SEIN.

        Empfohlen Sie z. B. eine Guid oder ein Präfix mit einer Guid, zur Sicherstellung der Eindeutigkeit wird dringend. Sie können `EventProcessorHost.createHostName("your-prefix")`; Standardwert: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Verbindungszeichenfolge für Azure Storage-Konto für die Leases und Prüfpunkte verwendet. Beispiel-DefaultEndpointsProtocol = Https; AccountName = < Kontoname >; AccountKey = < speicherkontoschlüssel >; EndpointSuffix=core.windows.net
    - id: eventHubClient
      type:
      - EventHubClient
      description: Die EventHub-client
    - id: options
      type:
      - azure-event-processor-host.EventProcessorOptions
      description: ''
      optional: true
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getHubRuntimeInformation
  name: getHubRuntimeInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: Enthält die Common Language Runtime-Informationen "eventhub".
  syntax:
    content: function getHubRuntimeInformation()
    parameters: []
    return:
      type:
      - Promise<EventHubRuntimeInformation>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getPartitionIds
  name: getPartitionIds
  children: []
  type: method
  langs:
  - typeScript
  summary: Stellt ein Array von PartitionIds bereit.
  syntax:
    content: function getPartitionIds()
    parameters: []
    return:
      type:
      - Promise<string[]>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getPartitionInformation
  name: getPartitionInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: Enthält Informationen über die angegebene Partition.
  syntax:
    content: 'function getPartitionInformation(partitionId: string | number)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: >
        Partitions-ID für die Partition Informationen erforderlich sind.
    return:
      type:
      - Promise<EventHubPartitionRuntimeInformation>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.hostName
  name: hostName
  fullName: hostName
  children: []
  langs:
  - typeScript
  type: property
  summary: Stellt den Hostnamen für den ereignisprozessorhost bereit.
  syntax:
    content: 'hostName: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.message
  name: message
  fullName: message
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Meldung: Wird ausgelöst, wenn eine Nachricht für eine bestimmte Partition eingeht. Die PartitionContext und Ereignisdaten wird an den Ereignislistener übergeben.'
  syntax:
    content: 'static message: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.opened
  name: opened
  fullName: opened
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Geöffnet: Ausgelöst, wenn eine Partition seine Lease abgerufen. Die PartitionContext wird an den Ereignis-Listener übergeben.'
  syntax:
    content: 'static opened: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.start
  name: start
  children: []
  type: method
  langs:
  - typeScript
  summary: Startet der ereignisprozessorhost, Abrufen der Liste der Partitionen (optional) filtern und -Leases auf (gefilterten) abrufen möchten. Für jede erfolgreiche Leasedauer wird rufen die Details aus dem Blob und starten Sie einen Empfänger, an dem Punkt, wo er zuvor unterbrochen.
  syntax:
    content: 'function start(options?: StartEPHOptions)'
    parameters:
    - id: options
      type:
      - azure-event-processor-host.StartEPHOptions
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.stop
  name: stop
  children: []
  type: method
  langs:
  - typeScript
  summary: Beendet die EventProcessorHost Nachrichten verarbeitet.
  syntax:
    content: function stop()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
references:
- uid: azure-event-processor-host.EventProcessorOptions
  spec.typeScript:
  - name: EventProcessorOptions
    fullName: EventProcessorOptions
    uid: azure-event-processor-host.EventProcessorOptions
- uid: azure-event-processor-host.StartEPHOptions
  spec.typeScript:
  - name: StartEPHOptions
    fullName: StartEPHOptions
    uid: azure-event-processor-host.StartEPHOptions
- uid: azure-event-processor-host.EventProcessorHost
  spec.typeScript:
  - name: EventProcessorHost
    fullName: EventProcessorHost
    uid: azure-event-processor-host.EventProcessorHost
- uid: azure-event-processor-host.ConnectionStringBasedOptions
  spec.typeScript:
  - name: ConnectionStringBasedOptions
    fullName: ConnectionStringBasedOptions
    uid: azure-event-processor-host.ConnectionStringBasedOptions
