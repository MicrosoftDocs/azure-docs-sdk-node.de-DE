### YamlMime:UniversalReference
items:
  - uid: azure-arm-cdn.CdnManagementClient
    name: CdnManagementClient
    fullName: CdnManagementClient
    children:
      - azure-arm-cdn.CdnManagementClient.acceptLanguage
      - azure-arm-cdn.CdnManagementClient.addUserAgentInfo
      - azure-arm-cdn.CdnManagementClient.apiVersion
      - azure-arm-cdn.CdnManagementClient.constructor
      - azure-arm-cdn.CdnManagementClient.checkNameAvailability
      - azure-arm-cdn.CdnManagementClient.checkNameAvailability_2
      - azure-arm-cdn.CdnManagementClient.checkNameAvailability_1
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithHttpOperationResponse
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_2
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_1
      - azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscriptionWithHttpOperationResponse
      - azure-arm-cdn.CdnManagementClient.credentials
      - azure-arm-cdn.CdnManagementClient.customDomains
      - azure-arm-cdn.CdnManagementClient.edgeNodes
      - azure-arm-cdn.CdnManagementClient.endpoints
      - azure-arm-cdn.CdnManagementClient.generateClientRequestId
      - azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult_2
      - azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult
      - azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult_1
      - azure-arm-cdn.CdnManagementClient.getPackageJsonInfo
      - azure-arm-cdn.CdnManagementClient.longRunningOperationRetryTimeout
      - azure-arm-cdn.CdnManagementClient.operations
      - azure-arm-cdn.CdnManagementClient.origins
      - azure-arm-cdn.CdnManagementClient.profiles
      - azure-arm-cdn.CdnManagementClient.resourceUsageOperations
      - azure-arm-cdn.CdnManagementClient.sendLongRunningRequest_1
      - azure-arm-cdn.CdnManagementClient.sendLongRunningRequest
      - azure-arm-cdn.CdnManagementClient.sendLongRunningRequestWithHttpOperationResponse
      - azure-arm-cdn.CdnManagementClient.sendRequest_1
      - azure-arm-cdn.CdnManagementClient.sendRequest
      - azure-arm-cdn.CdnManagementClient.sendRequestWithHttpOperationResponse
      - azure-arm-cdn.CdnManagementClient.subscriptionId
      - azure-arm-cdn.CdnManagementClient.validateProbe
      - azure-arm-cdn.CdnManagementClient.validateProbe_2
      - azure-arm-cdn.CdnManagementClient.validateProbe_1
      - azure-arm-cdn.CdnManagementClient.validateProbeWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.acceptLanguage
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="583ce-101">Benutzer-Agent-Header mit benutzerdefinierten Informationen hinzugefügt</span><span class="sxs-lookup"><span data-stu-id="583ce-101">Adds custom information to user agent header</span></span>
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            <span data-ttu-id="583ce-102">Informationen, die Benutzer-Agent-Header, die als Zeichenfolge hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="583ce-102">information to be added to user agent header, as string.</span></span>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.apiVersion
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiVersion: string'
      return:
        type:
          - string
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.constructor
    name: 'CdnManagementClient(ServiceClientCredentials, string, string, AzureServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="583ce-103">Initialisiert eine neue Instanz der Klasse CdnManagementClient an.</span><span class="sxs-lookup"><span data-stu-id="583ce-103">Initializes a new instance of the CdnManagementClient class.</span></span>
    syntax:
      content: 'new CdnManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, baseUri?: string, options?: AzureServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            <span data-ttu-id="583ce-104">Anmeldeinformationen für den Client zum Verbinden mit Azure.</span><span class="sxs-lookup"><span data-stu-id="583ce-104">Credentials needed for the client to connect to Azure.</span></span>
        - id: subscriptionId
          type:
            - string
          description: |
            <span data-ttu-id="583ce-105">Die Azure-Abonnement-ID.</span><span class="sxs-lookup"><span data-stu-id="583ce-105">Azure Subscription ID.</span></span>
        - id: baseUri
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - AzureServiceClientOptions
          description: ''
          optional: true
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailability
    name: 'checkNameAvailability(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-106">Überprüfen Sie die Verfügbarkeit von einem Ressourcennamen.</span><span class="sxs-lookup"><span data-stu-id="583ce-106">Check the availability of a resource name.</span></span> <span data-ttu-id="583ce-107">Dies ist für Ressourcen erforderlich, in dem Name global eindeutig sein, z. B. einen CDN-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="583ce-107">This is needed for resources where name is globally unique, such as a CDN endpoint.</span></span>'
    syntax:
      content: 'function checkNameAvailability(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            <span data-ttu-id="583ce-108">Der Name der Ressource um zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="583ce-108">The resource name to validate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailability_2
    name: 'checkNameAvailability(string, Object, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-109">Überprüfen Sie die Verfügbarkeit von einem Ressourcennamen.</span><span class="sxs-lookup"><span data-stu-id="583ce-109">Check the availability of a resource name.</span></span> <span data-ttu-id="583ce-110">Dies ist für Ressourcen erforderlich, in dem Name global eindeutig sein, z. B. einen CDN-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="583ce-110">This is needed for resources where name is globally unique, such as a CDN endpoint.</span></span>'
    syntax:
      content: 'function checkNameAvailability(name: string, options: Object, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailability_1
    name: 'checkNameAvailability(string, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-111">Überprüfen Sie die Verfügbarkeit von einem Ressourcennamen.</span><span class="sxs-lookup"><span data-stu-id="583ce-111">Check the availability of a resource name.</span></span> <span data-ttu-id="583ce-112">Dies ist für Ressourcen erforderlich, in dem Name global eindeutig sein, z. B. einen CDN-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="583ce-112">This is needed for resources where name is globally unique, such as a CDN endpoint.</span></span>'
    syntax:
      content: 'function checkNameAvailability(name: string, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithHttpOperationResponse
    name: 'checkNameAvailabilityWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-113">Überprüfen Sie die Verfügbarkeit von einem Ressourcennamen.</span><span class="sxs-lookup"><span data-stu-id="583ce-113">Check the availability of a resource name.</span></span> <span data-ttu-id="583ce-114">Dies ist für Ressourcen erforderlich, in dem Name global eindeutig sein, z. B. einen CDN-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="583ce-114">This is needed for resources where name is globally unique, such as a CDN endpoint.</span></span>'
    syntax:
      content: 'function checkNameAvailabilityWithHttpOperationResponse(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            <span data-ttu-id="583ce-115">Der Name der Ressource um zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="583ce-115">The resource name to validate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.CheckNameAvailabilityOutput>>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription
    name: 'checkNameAvailabilityWithSubscription(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-116">Überprüfen Sie die Verfügbarkeit von einem Ressourcennamen.</span><span class="sxs-lookup"><span data-stu-id="583ce-116">Check the availability of a resource name.</span></span> <span data-ttu-id="583ce-117">Dies ist für Ressourcen erforderlich, in dem Name global eindeutig sein, z. B. einen CDN-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="583ce-117">This is needed for resources where name is globally unique, such as a CDN endpoint.</span></span>'
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            <span data-ttu-id="583ce-118">Der Name der Ressource um zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="583ce-118">The resource name to validate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_2
    name: 'checkNameAvailabilityWithSubscription(string, Object, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-119">Überprüfen Sie die Verfügbarkeit von einem Ressourcennamen.</span><span class="sxs-lookup"><span data-stu-id="583ce-119">Check the availability of a resource name.</span></span> <span data-ttu-id="583ce-120">Dies ist für Ressourcen erforderlich, in dem Name global eindeutig sein, z. B. einen CDN-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="583ce-120">This is needed for resources where name is globally unique, such as a CDN endpoint.</span></span>'
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, options: Object, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_1
    name: 'checkNameAvailabilityWithSubscription(string, ServiceCallback<CheckNameAvailabilityOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-121">Überprüfen Sie die Verfügbarkeit von einem Ressourcennamen.</span><span class="sxs-lookup"><span data-stu-id="583ce-121">Check the availability of a resource name.</span></span> <span data-ttu-id="583ce-122">Dies ist für Ressourcen erforderlich, in dem Name global eindeutig sein, z. B. einen CDN-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="583ce-122">This is needed for resources where name is globally unique, such as a CDN endpoint.</span></span>'
    syntax:
      content: 'function checkNameAvailabilityWithSubscription(name: string, callback: ServiceCallback<CheckNameAvailabilityOutput>)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscriptionWithHttpOperationResponse
    name: 'checkNameAvailabilityWithSubscriptionWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-123">Überprüfen Sie die Verfügbarkeit von einem Ressourcennamen.</span><span class="sxs-lookup"><span data-stu-id="583ce-123">Check the availability of a resource name.</span></span> <span data-ttu-id="583ce-124">Dies ist für Ressourcen erforderlich, in dem Name global eindeutig sein, z. B. einen CDN-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="583ce-124">This is needed for resources where name is globally unique, such as a CDN endpoint.</span></span>'
    syntax:
      content: 'function checkNameAvailabilityWithSubscriptionWithHttpOperationResponse(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: |
            <span data-ttu-id="583ce-125">Der Name der Ressource um zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="583ce-125">The resource name to validate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.CheckNameAvailabilityOutput>>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.customDomains
    name: customDomains
    fullName: customDomains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'customDomains: CustomDomains'
      return:
        type:
          - azure-arm-cdn.CustomDomains
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.edgeNodes
    name: edgeNodes
    fullName: edgeNodes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'edgeNodes: EdgeNodes'
      return:
        type:
          - azure-arm-cdn.EdgeNodes
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.endpoints
    name: endpoints
    fullName: endpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoints: Endpoints'
      return:
        type:
          - azure-arm-cdn.Endpoints
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.generateClientRequestId
    name: generateClientRequestId
    fullName: generateClientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'generateClientRequestId: boolean'
      return:
        type:
          - boolean
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult_2
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, options?: RequestOptions)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: options
          type:
            - RequestOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<TResult>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, RequestOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, options: RequestOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: options
          type:
            - RequestOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.getLongRunningOperationResult_1
    name: 'getLongRunningOperationResult(HttpOperationResponse<TResult>, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getLongRunningOperationResult<TResult>(resultOfInitialRequest: HttpOperationResponse<TResult>, callback: ServiceCallback<TResult>)'
      parameters:
        - id: resultOfInitialRequest
          type:
            - HttpOperationResponse<TResult>
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="583ce-126">Versucht, "Package.JSON" für das angegebene Azure Node.js-Paket zu suchen.</span><span class="sxs-lookup"><span data-stu-id="583ce-126">Attempts to find package.json for the given azure nodejs package.</span></span>
      <span data-ttu-id="583ce-127">Wenn gefunden wird, gibt die Namen und Version des Pakets durch Lesen der Datei "Package.JSON", wenn "Package.JSON" nicht gefunden wird, gibt einen Standardwert zurück.</span><span class="sxs-lookup"><span data-stu-id="583ce-127">If found, returns the name and version of the package by reading the package.json If package.json is not found, returns a default value.</span></span>
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: <span data-ttu-id="583ce-128">übergeben Sie das Verzeichnis des spezifischen Azure-Management-Clients.</span><span class="sxs-lookup"><span data-stu-id="583ce-128">pass the directory of the specific azure management client.</span></span>
      return:
        type:
          - Object
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'longRunningOperationRetryTimeout: number'
      return:
        type:
          - number
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.operations
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - azure-arm-cdn.Operations
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.origins
    name: origins
    fullName: origins
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'origins: Origins'
      return:
        type:
          - azure-arm-cdn.Origins
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.profiles
    name: profiles
    fullName: profiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'profiles: Profiles'
      return:
        type:
          - azure-arm-cdn.Profiles
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.resourceUsageOperations
    name: resourceUsageOperations
    fullName: resourceUsageOperations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'resourceUsageOperations: ResourceUsageOperations'
      return:
        type:
          - azure-arm-cdn.ResourceUsageOperations
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendLongRunningRequest_1
    name: sendLongRunningRequest(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequest<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendLongRunningRequest
    name: 'sendLongRunningRequest(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequest<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendLongRunningRequestWithHttpOperationResponse
    name: sendLongRunningRequestWithHttpOperationResponse(LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendLongRunningRequestWithHttpOperationResponse<TResult>(options: LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - LongRunningUrlBasedRequestPrepareOptions | LongRunningPathTemplateBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.subscriptionId
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.validateProbe
    name: 'validateProbe(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-129">Überprüfen Sie, ob der Testpfad ein gültiger Pfad ist und die Datei zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="583ce-129">Check if the probe path is a valid path and the file can be accessed.</span></span> <span data-ttu-id="583ce-130">Testpfad ist der Pfad zu einer Datei, die auf dem Ursprungsserver zur Beschleunigung die Übermittlung dynamischer Inhalte über den CDN-Endpunkt gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="583ce-130">Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint.</span></span> <span data-ttu-id="583ce-131">Dieser Pfad ist relativ zum Ursprungspfad in der Endpunktkonfiguration angegeben.</span><span class="sxs-lookup"><span data-stu-id="583ce-131">This path is relative to the origin path specified in the endpoint configuration.</span></span>'
    syntax:
      content: 'function validateProbe(probeURL: string, options?: Object)'
      parameters:
        - id: probeURL
          type:
            - string
          description: |
            <span data-ttu-id="583ce-132">Der Webtest-URL, um zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="583ce-132">The probe URL to validate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.ValidateProbeOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.validateProbe_2
    name: 'validateProbe(string, Object, ServiceCallback<ValidateProbeOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-133">Überprüfen Sie, ob der Testpfad ein gültiger Pfad ist und die Datei zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="583ce-133">Check if the probe path is a valid path and the file can be accessed.</span></span> <span data-ttu-id="583ce-134">Testpfad ist der Pfad zu einer Datei, die auf dem Ursprungsserver zur Beschleunigung die Übermittlung dynamischer Inhalte über den CDN-Endpunkt gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="583ce-134">Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint.</span></span> <span data-ttu-id="583ce-135">Dieser Pfad ist relativ zum Ursprungspfad in der Endpunktkonfiguration angegeben.</span><span class="sxs-lookup"><span data-stu-id="583ce-135">This path is relative to the origin path specified in the endpoint configuration.</span></span>'
    syntax:
      content: 'function validateProbe(probeURL: string, options: Object, callback: ServiceCallback<ValidateProbeOutput>)'
      parameters:
        - id: probeURL
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ValidateProbeOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ValidateProbeOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.validateProbe_1
    name: 'validateProbe(string, ServiceCallback<ValidateProbeOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-136">Überprüfen Sie, ob der Testpfad ein gültiger Pfad ist und die Datei zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="583ce-136">Check if the probe path is a valid path and the file can be accessed.</span></span> <span data-ttu-id="583ce-137">Testpfad ist der Pfad zu einer Datei, die auf dem Ursprungsserver zur Beschleunigung die Übermittlung dynamischer Inhalte über den CDN-Endpunkt gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="583ce-137">Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint.</span></span> <span data-ttu-id="583ce-138">Dieser Pfad ist relativ zum Ursprungspfad in der Endpunktkonfiguration angegeben.</span><span class="sxs-lookup"><span data-stu-id="583ce-138">This path is relative to the origin path specified in the endpoint configuration.</span></span>'
    syntax:
      content: 'function validateProbe(probeURL: string, callback: ServiceCallback<ValidateProbeOutput>)'
      parameters:
        - id: probeURL
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ValidateProbeOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ValidateProbeOutput>
    package: azure-arm-cdn
  - uid: azure-arm-cdn.CdnManagementClient.validateProbeWithHttpOperationResponse
    name: 'validateProbeWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="583ce-139">Überprüfen Sie, ob der Testpfad ein gültiger Pfad ist und die Datei zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="583ce-139">Check if the probe path is a valid path and the file can be accessed.</span></span> <span data-ttu-id="583ce-140">Testpfad ist der Pfad zu einer Datei, die auf dem Ursprungsserver zur Beschleunigung die Übermittlung dynamischer Inhalte über den CDN-Endpunkt gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="583ce-140">Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint.</span></span> <span data-ttu-id="583ce-141">Dieser Pfad ist relativ zum Ursprungspfad in der Endpunktkonfiguration angegeben.</span><span class="sxs-lookup"><span data-stu-id="583ce-141">This path is relative to the origin path specified in the endpoint configuration.</span></span>'
    syntax:
      content: 'function validateProbeWithHttpOperationResponse(probeURL: string, options?: Object)'
      parameters:
        - id: probeURL
          type:
            - string
          description: |
            <span data-ttu-id="583ce-142">Der Webtest-URL, um zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="583ce-142">The probe URL to validate.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.ValidateProbeOutput>>
    package: azure-arm-cdn
references:
  - uid: azure-arm-cdn.CustomDomains
    name: CustomDomains
    spec.typeScript:
      - name: CustomDomains
        fullName: CustomDomains
        uid: azure-arm-cdn.CustomDomains
  - uid: azure-arm-cdn.EdgeNodes
    name: EdgeNodes
    spec.typeScript:
      - name: EdgeNodes
        fullName: EdgeNodes
        uid: azure-arm-cdn.EdgeNodes
  - uid: azure-arm-cdn.Endpoints
    name: Endpoints
    spec.typeScript:
      - name: Endpoints
        fullName: Endpoints
        uid: azure-arm-cdn.Endpoints
  - uid: azure-arm-cdn.Operations
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: azure-arm-cdn.Operations
  - uid: azure-arm-cdn.Origins
    name: Origins
    spec.typeScript:
      - name: Origins
        fullName: Origins
        uid: azure-arm-cdn.Origins
  - uid: azure-arm-cdn.Profiles
    name: Profiles
    spec.typeScript:
      - name: Profiles
        fullName: Profiles
        uid: azure-arm-cdn.Profiles
  - uid: azure-arm-cdn.ResourceUsageOperations
    name: ResourceUsageOperations
    spec.typeScript:
      - name: ResourceUsageOperations
        fullName: ResourceUsageOperations
        uid: azure-arm-cdn.ResourceUsageOperations
  - uid: Promise<azure-arm-cdn.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-cdn.CheckNameAvailabilityOutput
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-cdn.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-cdn.CheckNameAvailabilityOutput
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-cdn.CheckNameAvailabilityOutput>>
    name: CheckNameAvailabilityOutput>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-cdn.CheckNameAvailabilityOutput
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-cdn.ValidateProbeOutput>
    name: ValidateProbeOutput>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ValidateProbeOutput
        fullName: ValidateProbeOutput
        uid: azure-arm-cdn.ValidateProbeOutput
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-cdn.ValidateProbeOutput>
    name: ValidateProbeOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ValidateProbeOutput
        fullName: ValidateProbeOutput
        uid: azure-arm-cdn.ValidateProbeOutput
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-cdn.ValidateProbeOutput>>
    name: ValidateProbeOutput>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ValidateProbeOutput
        fullName: ValidateProbeOutput
        uid: azure-arm-cdn.ValidateProbeOutput
      - name: '>>'
        fullName: '>>'