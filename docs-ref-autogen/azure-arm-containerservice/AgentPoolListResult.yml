### YamlMime:UniversalReference
items:
  - uid: azure-arm-containerservice.AgentPoolListResult
    name: AgentPoolListResult
    fullName: AgentPoolListResult
    children:
      - azure-arm-containerservice.AgentPoolListResult.Array
      - azure-arm-containerservice.AgentPoolListResult.concat
      - azure-arm-containerservice.AgentPoolListResult.concat_1
      - azure-arm-containerservice.AgentPoolListResult.every
      - azure-arm-containerservice.AgentPoolListResult.filter_1
      - azure-arm-containerservice.AgentPoolListResult.filter
      - azure-arm-containerservice.AgentPoolListResult.forEach
      - azure-arm-containerservice.AgentPoolListResult.indexOf
      - azure-arm-containerservice.AgentPoolListResult.join
      - azure-arm-containerservice.AgentPoolListResult.lastIndexOf
      - azure-arm-containerservice.AgentPoolListResult.length
      - azure-arm-containerservice.AgentPoolListResult.map
      - azure-arm-containerservice.AgentPoolListResult.nextLink
      - azure-arm-containerservice.AgentPoolListResult.pop
      - azure-arm-containerservice.AgentPoolListResult.push
      - azure-arm-containerservice.AgentPoolListResult.reduce
      - azure-arm-containerservice.AgentPoolListResult.reduce_1
      - azure-arm-containerservice.AgentPoolListResult.reduce_2
      - azure-arm-containerservice.AgentPoolListResult.reduceRight
      - azure-arm-containerservice.AgentPoolListResult.reduceRight_1
      - azure-arm-containerservice.AgentPoolListResult.reduceRight_2
      - azure-arm-containerservice.AgentPoolListResult.reverse
      - azure-arm-containerservice.AgentPoolListResult.shift
      - azure-arm-containerservice.AgentPoolListResult.slice
      - azure-arm-containerservice.AgentPoolListResult.some
      - azure-arm-containerservice.AgentPoolListResult.sort
      - azure-arm-containerservice.AgentPoolListResult.splice
      - azure-arm-containerservice.AgentPoolListResult.splice_1
      - azure-arm-containerservice.AgentPoolListResult.toLocaleString
      - azure-arm-containerservice.AgentPoolListResult.toString
      - azure-arm-containerservice.AgentPoolListResult.unshift
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="54d77-101">Die Antwort aus der Liste von Agentpools-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="54d77-101">The response from the List Agent Pools operation.</span></span>
    extends:
      name: Array<azure-arm-containerservice.AgentPool>
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.concat
    name: 'concat(ConcatArray<AgentPool>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-102">Kombiniert zwei oder mehr Arrays.</span><span class="sxs-lookup"><span data-stu-id="54d77-102">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<AgentPool>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-containerservice.AgentPool>[]'
          description: |
            <span data-ttu-id="54d77-103">Zusätzliche Elemente, die am Ende von array1 hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="54d77-103">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-containerservice.AgentPool[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-104">Kombiniert zwei oder mehr Arrays.</span><span class="sxs-lookup"><span data-stu-id="54d77-104">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="54d77-105">Zusätzliche Elemente, die am Ende von array1 hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="54d77-105">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-containerservice.AgentPool[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.every
    name: 'every((value: AgentPool, index: number, array: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-106">Bestimmt, ob alle Elemente eines Arrays mit den angegebenen Test erfüllen.</span><span class="sxs-lookup"><span data-stu-id="54d77-106">Determines whether all the members of an array satisfy the specified test.</span></span>'
    syntax:
      content: 'function every(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => boolean'
          description: '<span data-ttu-id="54d77-107">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-107">A function that accepts up to three arguments.</span></span> <span data-ttu-id="54d77-108">Der every-Methode ruft die Listenwerts-Funktion für jedes Element im Matrix1, bis die Listenwerts "false" zurückgibt oder bis zum Ende des Arrays.</span><span class="sxs-lookup"><span data-stu-id="54d77-108">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="54d77-109">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="54d77-109">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="54d77-110">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="54d77-110">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.filter_1
    name: 'filter((value: AgentPool, index: number, array: AgentPool[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-111">Gibt zurück, die Elemente eines Arrays, die in einer Rückruffunktion angegebene Bedingung erfüllen.</span><span class="sxs-lookup"><span data-stu-id="54d77-111">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => any'
          description: '<span data-ttu-id="54d77-112">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="54d77-113">Die Filter-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-113">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="54d77-114">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="54d77-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="54d77-115">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="54d77-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-containerservice.AgentPool[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.filter
    name: 'filter((value: AgentPool, index: number, array: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-116">Gibt zurück, die Elemente eines Arrays, die in einer Rückruffunktion angegebene Bedingung erfüllen.</span><span class="sxs-lookup"><span data-stu-id="54d77-116">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter<S>(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => boolean'
          description: '<span data-ttu-id="54d77-117">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-117">A function that accepts up to three arguments.</span></span> <span data-ttu-id="54d77-118">Die Filter-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-118">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="54d77-119">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="54d77-119">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="54d77-120">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="54d77-120">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.forEach
    name: 'forEach((value: AgentPool, index: number, array: AgentPool[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-121">Führt die angegebene Aktion für jedes Element in einem Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-121">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => void'
          description: '<span data-ttu-id="54d77-122">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-122">A function that accepts up to three arguments.</span></span> <span data-ttu-id="54d77-123">ForEach, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-123">forEach calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="54d77-124">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="54d77-124">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="54d77-125">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="54d77-125">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.indexOf
    name: 'indexOf(AgentPool, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-126">Gibt den Index des ersten Vorkommens eines Werts in einem Array zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-126">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: AgentPool, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-containerservice.AgentPool
          description: '<span data-ttu-id="54d77-127">Der Wert, der in das Array gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="54d77-127">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="54d77-128">Der Arrayindex, an dem die Suche zu starten.</span><span class="sxs-lookup"><span data-stu-id="54d77-128">The array index at which to begin the search.</span></span> <span data-ttu-id="54d77-129">Wenn FromIndex weggelassen wird, beginnt die Suche, bei Index 0.</span><span class="sxs-lookup"><span data-stu-id="54d77-129">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-130">Fügt alle Elemente eines Arrays durch die angegebene aus Trennzeichen bestehende Zeichenfolge getrennt.</span><span class="sxs-lookup"><span data-stu-id="54d77-130">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="54d77-131">Eine Zeichenfolge, die zum Trennen der ein Element eines Arrays von der nächsten in der Ergebniszeichenfolge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="54d77-131">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="54d77-132">Wenn nicht angegeben, werden die Elemente des Arrays durch ein Komma getrennt.</span><span class="sxs-lookup"><span data-stu-id="54d77-132">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.lastIndexOf
    name: 'lastIndexOf(AgentPool, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-133">Gibt den Index des letzten Vorkommens eines angegebenen Werts in einem Array zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-133">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: AgentPool, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-containerservice.AgentPool
          description: '<span data-ttu-id="54d77-134">Der Wert, der in das Array gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="54d77-134">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="54d77-135">Der Arrayindex, an dem die Suche zu starten.</span><span class="sxs-lookup"><span data-stu-id="54d77-135">The array index at which to begin the search.</span></span> <span data-ttu-id="54d77-136">Wenn FromIndex weggelassen wird, beginnt die Suche, am letzten Index im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-136">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="54d77-137">Übernimmt oder bestimmt die Länge des Arrays.</span><span class="sxs-lookup"><span data-stu-id="54d77-137">Gets or sets the length of the array.</span></span> <span data-ttu-id="54d77-138">Dies ist eine Nummer eins höher ist als das höchste der in einem Array definierten Elemente.</span><span class="sxs-lookup"><span data-stu-id="54d77-138">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.map
    name: 'map((value: AgentPool, index: number, array: AgentPool[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-139">Ruft eine definierte Rückruffunktion für jedes Element eines Arrays und gibt ein Array mit den Ergebnissen zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-139">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => U'
          description: '<span data-ttu-id="54d77-140">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-140">A function that accepts up to three arguments.</span></span> <span data-ttu-id="54d77-141">Die Map-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-141">The map method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="54d77-142">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="54d77-142">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="54d77-143">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="54d77-143">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="54d77-144">Die URL zum Abrufen des nächsten Satzes von Agent-Pool-Ergebnissen.</span><span class="sxs-lookup"><span data-stu-id="54d77-144">The URL to get the next set of agent pool results.</span></span>
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-145">Entfernt das letzte Element aus einem Array und gibt sie zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-145">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-containerservice.AgentPool | undefined
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.push
    name: 'push(AgentPool[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-146">Fügt neue Elemente in ein Array und gibt die neue Länge des Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-146">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: AgentPool[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-containerservice.AgentPool[]'
          description: |
            <span data-ttu-id="54d77-147">Neue Elemente des Arrays.</span><span class="sxs-lookup"><span data-stu-id="54d77-147">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.reduce
    name: 'reduce((previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-148">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-148">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="54d77-149">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="54d77-149">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool'
          description: '<span data-ttu-id="54d77-150">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-150">A function that accepts up to four arguments.</span></span> <span data-ttu-id="54d77-151">Die Reduce-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-151">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - azure-arm-containerservice.AgentPool
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.reduce_1
    name: 'reduce((previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool, AgentPool)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-152">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-152">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="54d77-153">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="54d77-153">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool, initialValue: AgentPool)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool'
          description: ''
        - id: initialValue
          type:
            - azure-arm-containerservice.AgentPool
          description: ''
      return:
        type:
          - azure-arm-containerservice.AgentPool
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.reduce_2
    name: 'reduce((previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-154">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-154">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="54d77-155">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="54d77-155">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U'
          description: '<span data-ttu-id="54d77-156">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-156">A function that accepts up to four arguments.</span></span> <span data-ttu-id="54d77-157">Die Reduce-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-157">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="54d77-158">Wenn "InitialValue" angegeben ist, wird es als Anfangswert verwendet, die Ansammlung beginnt.</span><span class="sxs-lookup"><span data-stu-id="54d77-158">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="54d77-159">Der erste Aufruf an die Funktion Listenwerts stellt dieser Wert als Argument anstelle eines Arraywerts.</span><span class="sxs-lookup"><span data-stu-id="54d77-159">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.reduceRight
    name: 'reduceRight((previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-160">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="54d77-160">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="54d77-161">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="54d77-161">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool'
          description: '<span data-ttu-id="54d77-162">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-162">A function that accepts up to four arguments.</span></span> <span data-ttu-id="54d77-163">ReduceRight-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-163">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - azure-arm-containerservice.AgentPool
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.reduceRight_1
    name: 'reduceRight((previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool, AgentPool)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-164">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="54d77-164">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="54d77-165">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="54d77-165">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool, initialValue: AgentPool)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool'
          description: ''
        - id: initialValue
          type:
            - azure-arm-containerservice.AgentPool
          description: ''
      return:
        type:
          - azure-arm-containerservice.AgentPool
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-166">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="54d77-166">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="54d77-167">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="54d77-167">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U'
          description: '<span data-ttu-id="54d77-168">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-168">A function that accepts up to four arguments.</span></span> <span data-ttu-id="54d77-169">ReduceRight-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-169">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="54d77-170">Wenn "InitialValue" angegeben ist, wird es als Anfangswert verwendet, die Ansammlung beginnt.</span><span class="sxs-lookup"><span data-stu-id="54d77-170">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="54d77-171">Der erste Aufruf an die Funktion Listenwerts stellt dieser Wert als Argument anstelle eines Arraywerts.</span><span class="sxs-lookup"><span data-stu-id="54d77-171">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-172">Kehrt die Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="54d77-172">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-containerservice.AgentPool[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-173">Entfernt das erste Element aus einem Array und gibt sie zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-173">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-containerservice.AgentPool | undefined
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-174">Gibt einen Abschnitt eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-174">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="54d77-175">Der Anfang des angegebenen Abschnitts des Arrays.</span><span class="sxs-lookup"><span data-stu-id="54d77-175">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="54d77-176">Das Ende der angegebenen Teil des Arrays.</span><span class="sxs-lookup"><span data-stu-id="54d77-176">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-containerservice.AgentPool[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.some
    name: 'some((value: AgentPool, index: number, array: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-177">Bestimmt, ob die angegebene Rückruffunktion für jedes Element eines Arrays "true" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="54d77-177">Determines whether the specified callback function returns true for any element of an array.</span></span>'
    syntax:
      content: 'function some(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => boolean'
          description: '<span data-ttu-id="54d77-178">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-178">A function that accepts up to three arguments.</span></span> <span data-ttu-id="54d77-179">Die eine Methode ruft die Listenwerts-Funktion für jedes Element im Matrix1, bis die Listenwerts "true" zurückgibt oder bis zum Ende des Arrays.</span><span class="sxs-lookup"><span data-stu-id="54d77-179">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="54d77-180">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="54d77-180">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="54d77-181">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="54d77-181">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.sort
    name: 'sort((a: AgentPool, b: AgentPool) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-182">Ein Array sortiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-182">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: AgentPool, b: AgentPool) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: AgentPool, b: AgentPool) => number'
          description: |
            <span data-ttu-id="54d77-183">Der Name der Funktion verwendet, um die Reihenfolge der Elemente zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="54d77-183">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="54d77-184">Wenn nicht angegeben, werden die Elemente sortiert, aufsteigend in ASCII-Zeichen sortiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-184">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-185">Entfernt Elemente aus einem Array und bei Bedarf fügt neue Elemente ein an ihre Stelle ein, wobei die gelöschten Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="54d77-185">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="54d77-186">Die nullbasierte Position im Array ab dem mit dem Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="54d77-186">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="54d77-187">Die Anzahl der zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="54d77-187">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-containerservice.AgentPool[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.splice_1
    name: 'splice(number, number, AgentPool[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-188">Entfernt Elemente aus einem Array und bei Bedarf fügt neue Elemente ein an ihre Stelle ein, wobei die gelöschten Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="54d77-188">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: AgentPool[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="54d77-189">Die nullbasierte Position im Array ab dem mit dem Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="54d77-189">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="54d77-190">Die Anzahl der zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="54d77-190">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-arm-containerservice.AgentPool[]'
          description: |
            <span data-ttu-id="54d77-191">Elemente, die in das Array anstelle der gelöschten Elemente eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="54d77-191">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-arm-containerservice.AgentPool[]'
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="54d77-192">Gibt eine Zeichenfolgendarstellung eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-192">Returns a string representation of an array.</span></span> <span data-ttu-id="54d77-193">Die Elemente werden in eine Zeichenfolge, die mit den entsprechenden-Methoden ToLocalString konvertiert.</span><span class="sxs-lookup"><span data-stu-id="54d77-193">The elements are converted to string using their toLocalString methods.</span></span>'
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-194">Gibt eine Zeichenfolgendarstellung eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="54d77-194">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-containerservice
  - uid: azure-arm-containerservice.AgentPoolListResult.unshift
    name: 'unshift(AgentPool[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="54d77-195">Fügt neue Elemente zu Beginn eines Arrays an.</span><span class="sxs-lookup"><span data-stu-id="54d77-195">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: AgentPool[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-containerservice.AgentPool[]'
          description: |
            <span data-ttu-id="54d77-196">Am Anfang das Array einzufügenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="54d77-196">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-containerservice
references:
  - uid: Array<azure-arm-containerservice.AgentPool>
    name: AgentPool>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: AgentPool
        fullName: AgentPool
        uid: azure-arm-containerservice.AgentPool
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-containerservice.AgentPool>[]'
    name: 'AgentPool>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: AgentPool
        fullName: AgentPool
        uid: azure-arm-containerservice.AgentPool
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-containerservice.AgentPool[]'
    name: 'AgentPool[]'
    spec.typeScript:
      - name: AgentPool
        fullName: AgentPool
        uid: azure-arm-containerservice.AgentPool
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-containerservice.AgentPool
    name: AgentPool
    spec.typeScript:
      - name: AgentPool
        fullName: AgentPool
        uid: azure-arm-containerservice.AgentPool
  - uid: azure-arm-containerservice.AgentPool | undefined
    name: AgentPool | undefined
    spec.typeScript:
      - name: AgentPool
        fullName: AgentPool
        uid: azure-arm-containerservice.AgentPool
      - name: ' | undefined'
        fullName: ' | undefined'