### YamlMime:UniversalReference
items:
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList
    name: AvailableProviderOperationList
    fullName: AvailableProviderOperationList
    children:
      - azure-arm-storsimple8000series.AvailableProviderOperationList.Array
      - azure-arm-storsimple8000series.AvailableProviderOperationList.concat
      - azure-arm-storsimple8000series.AvailableProviderOperationList.concat_1
      - azure-arm-storsimple8000series.AvailableProviderOperationList.every
      - azure-arm-storsimple8000series.AvailableProviderOperationList.filter_1
      - azure-arm-storsimple8000series.AvailableProviderOperationList.filter
      - azure-arm-storsimple8000series.AvailableProviderOperationList.forEach
      - azure-arm-storsimple8000series.AvailableProviderOperationList.indexOf
      - azure-arm-storsimple8000series.AvailableProviderOperationList.join
      - azure-arm-storsimple8000series.AvailableProviderOperationList.lastIndexOf
      - azure-arm-storsimple8000series.AvailableProviderOperationList.length
      - azure-arm-storsimple8000series.AvailableProviderOperationList.map
      - azure-arm-storsimple8000series.AvailableProviderOperationList.nextLink
      - azure-arm-storsimple8000series.AvailableProviderOperationList.pop
      - azure-arm-storsimple8000series.AvailableProviderOperationList.push
      - azure-arm-storsimple8000series.AvailableProviderOperationList.reduce
      - azure-arm-storsimple8000series.AvailableProviderOperationList.reduce_1
      - azure-arm-storsimple8000series.AvailableProviderOperationList.reduce_2
      - azure-arm-storsimple8000series.AvailableProviderOperationList.reduceRight
      - azure-arm-storsimple8000series.AvailableProviderOperationList.reduceRight_1
      - azure-arm-storsimple8000series.AvailableProviderOperationList.reduceRight_2
      - azure-arm-storsimple8000series.AvailableProviderOperationList.reverse
      - azure-arm-storsimple8000series.AvailableProviderOperationList.shift
      - azure-arm-storsimple8000series.AvailableProviderOperationList.slice
      - azure-arm-storsimple8000series.AvailableProviderOperationList.some
      - azure-arm-storsimple8000series.AvailableProviderOperationList.sort
      - azure-arm-storsimple8000series.AvailableProviderOperationList.splice
      - azure-arm-storsimple8000series.AvailableProviderOperationList.splice_1
      - azure-arm-storsimple8000series.AvailableProviderOperationList.toLocaleString
      - azure-arm-storsimple8000series.AvailableProviderOperationList.toString
      - azure-arm-storsimple8000series.AvailableProviderOperationList.unshift
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<azure-arm-storsimple8000series.AvailableProviderOperation>
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.concat
    name: 'concat(ConcatArray<AvailableProviderOperation>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-101">Kombiniert zwei oder mehr Arrays.</span><span class="sxs-lookup"><span data-stu-id="082ba-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<AvailableProviderOperation>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-storsimple8000series.AvailableProviderOperation>[]'
          description: |
            <span data-ttu-id="082ba-102">Zusätzliche Elemente, die am Ende von array1 hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="082ba-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-103">Kombiniert zwei oder mehr Arrays.</span><span class="sxs-lookup"><span data-stu-id="082ba-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="082ba-104">Zusätzliche Elemente, die am Ende von array1 hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="082ba-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.every
    name: 'every((value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-105">Bestimmt, ob alle Elemente eines Arrays mit den angegebenen Test erfüllen.</span><span class="sxs-lookup"><span data-stu-id="082ba-105">Determines whether all the members of an array satisfy the specified test.</span></span>'
    syntax:
      content: 'function every(callbackfn: (value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean'
          description: '<span data-ttu-id="082ba-106">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-106">A function that accepts up to three arguments.</span></span> <span data-ttu-id="082ba-107">Der every-Methode ruft die Listenwerts-Funktion für jedes Element im Matrix1, bis die Listenwerts "false" zurückgibt oder bis zum Ende des Arrays.</span><span class="sxs-lookup"><span data-stu-id="082ba-107">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="082ba-108">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="082ba-108">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="082ba-109">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="082ba-109">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.filter_1
    name: 'filter((value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-110">Gibt zurück, die Elemente eines Arrays, die in einer Rückruffunktion angegebene Bedingung erfüllen.</span><span class="sxs-lookup"><span data-stu-id="082ba-110">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter(callbackfn: (value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => any'
          description: '<span data-ttu-id="082ba-111">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-111">A function that accepts up to three arguments.</span></span> <span data-ttu-id="082ba-112">Die Filter-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-112">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="082ba-113">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="082ba-113">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="082ba-114">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="082ba-114">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.filter
    name: 'filter((value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-115">Gibt zurück, die Elemente eines Arrays, die in einer Rückruffunktion angegebene Bedingung erfüllen.</span><span class="sxs-lookup"><span data-stu-id="082ba-115">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter<S>(callbackfn: (value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean'
          description: '<span data-ttu-id="082ba-116">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-116">A function that accepts up to three arguments.</span></span> <span data-ttu-id="082ba-117">Die Filter-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-117">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="082ba-118">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="082ba-118">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="082ba-119">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="082ba-119">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.forEach
    name: 'forEach((value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-120">Führt die angegebene Aktion für jedes Element in einem Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-120">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => void'
          description: '<span data-ttu-id="082ba-121">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-121">A function that accepts up to three arguments.</span></span> <span data-ttu-id="082ba-122">ForEach, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-122">forEach calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="082ba-123">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="082ba-123">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="082ba-124">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="082ba-124">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.indexOf
    name: 'indexOf(AvailableProviderOperation, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-125">Gibt den Index des ersten Vorkommens eines Werts in einem Array zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-125">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: AvailableProviderOperation, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-storsimple8000series.AvailableProviderOperation
          description: '<span data-ttu-id="082ba-126">Der Wert, der in das Array gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="082ba-126">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="082ba-127">Der Arrayindex, an dem die Suche zu starten.</span><span class="sxs-lookup"><span data-stu-id="082ba-127">The array index at which to begin the search.</span></span> <span data-ttu-id="082ba-128">Wenn FromIndex weggelassen wird, beginnt die Suche, bei Index 0.</span><span class="sxs-lookup"><span data-stu-id="082ba-128">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-129">Fügt alle Elemente eines Arrays durch die angegebene aus Trennzeichen bestehende Zeichenfolge getrennt.</span><span class="sxs-lookup"><span data-stu-id="082ba-129">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="082ba-130">Eine Zeichenfolge, die zum Trennen der ein Element eines Arrays von der nächsten in der Ergebniszeichenfolge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="082ba-130">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="082ba-131">Wenn nicht angegeben, werden die Elemente des Arrays durch ein Komma getrennt.</span><span class="sxs-lookup"><span data-stu-id="082ba-131">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.lastIndexOf
    name: 'lastIndexOf(AvailableProviderOperation, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-132">Gibt den Index des letzten Vorkommens eines angegebenen Werts in einem Array zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-132">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: AvailableProviderOperation, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-storsimple8000series.AvailableProviderOperation
          description: '<span data-ttu-id="082ba-133">Der Wert, der in das Array gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="082ba-133">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="082ba-134">Der Arrayindex, an dem die Suche zu starten.</span><span class="sxs-lookup"><span data-stu-id="082ba-134">The array index at which to begin the search.</span></span> <span data-ttu-id="082ba-135">Wenn FromIndex weggelassen wird, beginnt die Suche, am letzten Index im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-135">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="082ba-136">Übernimmt oder bestimmt die Länge des Arrays.</span><span class="sxs-lookup"><span data-stu-id="082ba-136">Gets or sets the length of the array.</span></span> <span data-ttu-id="082ba-137">Dies ist eine Nummer eins höher ist als das höchste der in einem Array definierten Elemente.</span><span class="sxs-lookup"><span data-stu-id="082ba-137">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.map
    name: 'map((value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-138">Ruft eine definierte Rückruffunktion für jedes Element eines Arrays und gibt ein Array mit den Ergebnissen zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-138">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => U'
          description: '<span data-ttu-id="082ba-139">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-139">A function that accepts up to three arguments.</span></span> <span data-ttu-id="082ba-140">Die Map-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-140">The map method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="082ba-141">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="082ba-141">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="082ba-142">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="082ba-142">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-143">Entfernt das letzte Element aus einem Array und gibt sie zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-143">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-storsimple8000series.AvailableProviderOperation | undefined
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.push
    name: 'push(AvailableProviderOperation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-144">Fügt neue Elemente in ein Array und gibt die neue Länge des Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-144">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: AvailableProviderOperation[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
          description: |
            <span data-ttu-id="082ba-145">Neue Elemente des Arrays.</span><span class="sxs-lookup"><span data-stu-id="082ba-145">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.reduce
    name: 'reduce((previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-146">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-146">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="082ba-147">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="082ba-147">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation'
          description: '<span data-ttu-id="082ba-148">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-148">A function that accepts up to four arguments.</span></span> <span data-ttu-id="082ba-149">Die Reduce-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-149">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - azure-arm-storsimple8000series.AvailableProviderOperation
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.reduce_1
    name: 'reduce((previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation, AvailableProviderOperation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-150">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-150">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="082ba-151">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="082ba-151">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation, initialValue: AvailableProviderOperation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation'
          description: ''
        - id: initialValue
          type:
            - azure-arm-storsimple8000series.AvailableProviderOperation
          description: ''
      return:
        type:
          - azure-arm-storsimple8000series.AvailableProviderOperation
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.reduce_2
    name: 'reduce((previousValue: U, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-152">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-152">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="082ba-153">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="082ba-153">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => U'
          description: '<span data-ttu-id="082ba-154">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-154">A function that accepts up to four arguments.</span></span> <span data-ttu-id="082ba-155">Die Reduce-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-155">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="082ba-156">Wenn "InitialValue" angegeben ist, wird es als Anfangswert verwendet, die Ansammlung beginnt.</span><span class="sxs-lookup"><span data-stu-id="082ba-156">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="082ba-157">Der erste Aufruf an die Funktion Listenwerts stellt dieser Wert als Argument anstelle eines Arraywerts.</span><span class="sxs-lookup"><span data-stu-id="082ba-157">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.reduceRight
    name: 'reduceRight((previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-158">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="082ba-158">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="082ba-159">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="082ba-159">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation'
          description: '<span data-ttu-id="082ba-160">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-160">A function that accepts up to four arguments.</span></span> <span data-ttu-id="082ba-161">ReduceRight-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-161">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - azure-arm-storsimple8000series.AvailableProviderOperation
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.reduceRight_1
    name: 'reduceRight((previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation, AvailableProviderOperation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-162">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="082ba-162">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="082ba-163">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="082ba-163">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation, initialValue: AvailableProviderOperation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AvailableProviderOperation, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => AvailableProviderOperation'
          description: ''
        - id: initialValue
          type:
            - azure-arm-storsimple8000series.AvailableProviderOperation
          description: ''
      return:
        type:
          - azure-arm-storsimple8000series.AvailableProviderOperation
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-164">Ruft die angegebene Rückruffunktion für alle Elemente in einem Array, in absteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="082ba-164">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="082ba-165">Der Rückgabewert der Rückruffunktion ist das akkumulierte Ergebnis und wird als Argument in der nächste Aufruf der Rückruffunktion bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="082ba-165">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: AvailableProviderOperation, currentIndex: number, array: AvailableProviderOperation[]) => U'
          description: '<span data-ttu-id="082ba-166">Eine Funktion, die bis zu vier Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-166">A function that accepts up to four arguments.</span></span> <span data-ttu-id="082ba-167">ReduceRight-Methode, ruft die Listenwerts-Funktion einmal für jedes Element im Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-167">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="082ba-168">Wenn "InitialValue" angegeben ist, wird es als Anfangswert verwendet, die Ansammlung beginnt.</span><span class="sxs-lookup"><span data-stu-id="082ba-168">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="082ba-169">Der erste Aufruf an die Funktion Listenwerts stellt dieser Wert als Argument anstelle eines Arraywerts.</span><span class="sxs-lookup"><span data-stu-id="082ba-169">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-170">Kehrt die Elemente in einem Array.</span><span class="sxs-lookup"><span data-stu-id="082ba-170">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-171">Entfernt das erste Element aus einem Array und gibt sie zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-171">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-storsimple8000series.AvailableProviderOperation | undefined
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-172">Gibt einen Abschnitt eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-172">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="082ba-173">Der Anfang des angegebenen Abschnitts des Arrays.</span><span class="sxs-lookup"><span data-stu-id="082ba-173">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="082ba-174">Das Ende der angegebenen Teil des Arrays.</span><span class="sxs-lookup"><span data-stu-id="082ba-174">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.some
    name: 'some((value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-175">Bestimmt, ob die angegebene Rückruffunktion für jedes Element eines Arrays "true" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="082ba-175">Determines whether the specified callback function returns true for any element of an array.</span></span>'
    syntax:
      content: 'function some(callbackfn: (value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AvailableProviderOperation, index: number, array: AvailableProviderOperation[]) => boolean'
          description: '<span data-ttu-id="082ba-176">Eine Funktion, die bis zu drei Argumente akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-176">A function that accepts up to three arguments.</span></span> <span data-ttu-id="082ba-177">Die eine Methode ruft die Listenwerts-Funktion für jedes Element im Matrix1, bis die Listenwerts "true" zurückgibt oder bis zum Ende des Arrays.</span><span class="sxs-lookup"><span data-stu-id="082ba-177">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="082ba-178">Ein Objekt, auf die dieses Schlüsselwort kann in der Funktion Listenwerts verweisen.</span><span class="sxs-lookup"><span data-stu-id="082ba-178">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="082ba-179">Wenn ThisArg weggelassen wird, nicht definiert wird verwendet, als dieser Wert.</span><span class="sxs-lookup"><span data-stu-id="082ba-179">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.sort
    name: 'sort((a: AvailableProviderOperation, b: AvailableProviderOperation) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-180">Ein Array sortiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-180">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: AvailableProviderOperation, b: AvailableProviderOperation) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: AvailableProviderOperation, b: AvailableProviderOperation) => number'
          description: |
            <span data-ttu-id="082ba-181">Der Name der Funktion verwendet, um die Reihenfolge der Elemente zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="082ba-181">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="082ba-182">Wenn nicht angegeben, werden die Elemente sortiert, aufsteigend in ASCII-Zeichen sortiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-182">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-183">Entfernt Elemente aus einem Array und bei Bedarf fügt neue Elemente ein an ihre Stelle ein, wobei die gelöschten Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="082ba-183">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="082ba-184">Die nullbasierte Position im Array ab dem mit dem Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="082ba-184">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="082ba-185">Die Anzahl der zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="082ba-185">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.splice_1
    name: 'splice(number, number, AvailableProviderOperation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-186">Entfernt Elemente aus einem Array und bei Bedarf fügt neue Elemente ein an ihre Stelle ein, wobei die gelöschten Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="082ba-186">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: AvailableProviderOperation[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="082ba-187">Die nullbasierte Position im Array ab dem mit dem Entfernen von Elementen.</span><span class="sxs-lookup"><span data-stu-id="082ba-187">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="082ba-188">Die Anzahl der zu entfernenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="082ba-188">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
          description: |
            <span data-ttu-id="082ba-189">Elemente, die in das Array anstelle der gelöschten Elemente eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="082ba-189">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="082ba-190">Gibt eine Zeichenfolgendarstellung eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-190">Returns a string representation of an array.</span></span> <span data-ttu-id="082ba-191">Die Elemente werden in eine Zeichenfolge, die mit den entsprechenden-Methoden ToLocalString konvertiert.</span><span class="sxs-lookup"><span data-stu-id="082ba-191">The elements are converted to string using their toLocalString methods.</span></span>'
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-192">Gibt eine Zeichenfolgendarstellung eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="082ba-192">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-storsimple8000series
  - uid: azure-arm-storsimple8000series.AvailableProviderOperationList.unshift
    name: 'unshift(AvailableProviderOperation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="082ba-193">Fügt neue Elemente zu Beginn eines Arrays an.</span><span class="sxs-lookup"><span data-stu-id="082ba-193">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: AvailableProviderOperation[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
          description: |
            <span data-ttu-id="082ba-194">Am Anfang das Array einzufügenden Elemente.</span><span class="sxs-lookup"><span data-stu-id="082ba-194">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-storsimple8000series
references:
  - uid: Array<azure-arm-storsimple8000series.AvailableProviderOperation>
    name: AvailableProviderOperation>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: AvailableProviderOperation
        fullName: AvailableProviderOperation
        uid: azure-arm-storsimple8000series.AvailableProviderOperation
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-storsimple8000series.AvailableProviderOperation>[]'
    name: 'AvailableProviderOperation>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: AvailableProviderOperation
        fullName: AvailableProviderOperation
        uid: azure-arm-storsimple8000series.AvailableProviderOperation
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-storsimple8000series.AvailableProviderOperation[]'
    name: 'AvailableProviderOperation[]'
    spec.typeScript:
      - name: AvailableProviderOperation
        fullName: AvailableProviderOperation
        uid: azure-arm-storsimple8000series.AvailableProviderOperation
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-storsimple8000series.AvailableProviderOperation
    name: AvailableProviderOperation
    spec.typeScript:
      - name: AvailableProviderOperation
        fullName: AvailableProviderOperation
        uid: azure-arm-storsimple8000series.AvailableProviderOperation
  - uid: azure-arm-storsimple8000series.AvailableProviderOperation | undefined
    name: AvailableProviderOperation | undefined
    spec.typeScript:
      - name: AvailableProviderOperation
        fullName: AvailableProviderOperation
        uid: azure-arm-storsimple8000series.AvailableProviderOperation
      - name: ' | undefined'
        fullName: ' | undefined'