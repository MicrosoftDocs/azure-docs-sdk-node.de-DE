### YamlMime:UniversalReference
ms.openlocfilehash: 99d34b9f67f4793f59a448d80cf88796f9b44ae1
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 08/13/2018
ms.locfileid: "40056623"
items:
- uid: documentdb.DocumentClient
  id: documentdb.DocumentClient
  name: DocumentClient
  summary: >-
    Bietet eine clientseitige logische Darstellung des Azure Cosmos DB-Datenbankkontos.

    Dieser Client wird verwendet, zum Konfigurieren und Ausführen von Anforderungen in der Azure Cosmos DB-Datenbankdienst.
  fullName: documentdb.DocumentClient
  type: Class
  children:
  - documentdb.DocumentClient.#ctor
  - documentdb.DocumentClient#getWriteEndpoint
  - documentdb.DocumentClient#getReadEndpoint
  - documentdb.DocumentClient#createDatabase
  - documentdb.DocumentClient#createCollection
  - documentdb.DocumentClient#createDocument
  - documentdb.DocumentClient#createAttachment
  - documentdb.DocumentClient#createUser
  - documentdb.DocumentClient#createPermission
  - documentdb.DocumentClient#createTrigger
  - documentdb.DocumentClient#createUserDefinedFunction
  - documentdb.DocumentClient#createStoredProcedure
  - documentdb.DocumentClient#createAttachmentAndUploadMedia
  - documentdb.DocumentClient#readDatabase
  - documentdb.DocumentClient#readCollection
  - documentdb.DocumentClient#readDocument
  - documentdb.DocumentClient#readAttachment
  - documentdb.DocumentClient#readUser
  - documentdb.DocumentClient#readPermission
  - documentdb.DocumentClient#readTrigger
  - documentdb.DocumentClient#readUserDefinedFunction
  - documentdb.DocumentClient#readStoredProcedure
  - documentdb.DocumentClient#readConflict
  - documentdb.DocumentClient#readDatabases
  - documentdb.DocumentClient#readCollections
  - documentdb.DocumentClient#readDocuments
  - documentdb.DocumentClient#readPartitionKeyRanges
  - documentdb.DocumentClient#readAttachments
  - documentdb.DocumentClient#readUsers
  - documentdb.DocumentClient#readPermissions
  - documentdb.DocumentClient#readTriggers
  - documentdb.DocumentClient#readUserDefinedFunctions
  - documentdb.DocumentClient#readStoredProcedures
  - documentdb.DocumentClient#readConflicts
  - documentdb.DocumentClient#queryDatabases
  - documentdb.DocumentClient#queryCollections
  - documentdb.DocumentClient#queryDocuments
  - documentdb.DocumentClient#queryPartitionKeyRanges
  - documentdb.DocumentClient#queryAttachments
  - documentdb.DocumentClient#queryUsers
  - documentdb.DocumentClient#queryPermissions
  - documentdb.DocumentClient#queryTriggers
  - documentdb.DocumentClient#queryUserDefinedFunctions
  - documentdb.DocumentClient#queryStoredProcedures
  - documentdb.DocumentClient#queryConflicts
  - documentdb.DocumentClient#deleteDatabase
  - documentdb.DocumentClient#deleteCollection
  - documentdb.DocumentClient#deleteDocument
  - documentdb.DocumentClient#deleteAttachment
  - documentdb.DocumentClient#deleteUser
  - documentdb.DocumentClient#deletePermission
  - documentdb.DocumentClient#deleteTrigger
  - documentdb.DocumentClient#deleteUserDefinedFunction
  - documentdb.DocumentClient#deleteStoredProcedure
  - documentdb.DocumentClient#deleteConflict
  - documentdb.DocumentClient#replaceCollection
  - documentdb.DocumentClient#replaceDocument
  - documentdb.DocumentClient#replaceAttachment
  - documentdb.DocumentClient#replaceUser
  - documentdb.DocumentClient#replacePermission
  - documentdb.DocumentClient#replaceTrigger
  - documentdb.DocumentClient#replaceUserDefinedFunction
  - documentdb.DocumentClient#replaceStoredProcedure
  - documentdb.DocumentClient#upsertDocument
  - documentdb.DocumentClient#upsertAttachment
  - documentdb.DocumentClient#upsertUser
  - documentdb.DocumentClient#upsertPermission
  - documentdb.DocumentClient#upsertTrigger
  - documentdb.DocumentClient#upsertUserDefinedFunction
  - documentdb.DocumentClient#upsertStoredProcedure
  - documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  - documentdb.DocumentClient#readMedia
  - documentdb.DocumentClient#updateMedia
  - documentdb.DocumentClient#executeStoredProcedure
  - documentdb.DocumentClient#replaceOffer
  - documentdb.DocumentClient#readOffer
  - documentdb.DocumentClient#readOffers
  - documentdb.DocumentClient#queryOffers
  - documentdb.DocumentClient#getDatabaseAccount
  - documentdb.DocumentClient#getSessionToken
  langs:
  - js
- id: documentdb.DocumentClient.#ctor
  uid: documentdb.DocumentClient.#ctor
  parent: documentdb.DocumentClient
  name: DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  fullName: documentdb.DocumentClient.DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  summary: >-
    Bietet eine clientseitige logische Darstellung des Azure Cosmos DB-Datenbankkontos.

    Dieser Client wird verwendet, zum Konfigurieren und Ausführen von Anforderungen in der Azure Cosmos DB-Datenbankdienst.
  type: Constructor
  syntax:
    parameters:
    - id: urlConnection
      type:
      - string
      description: Der Dienstendpunkt zu verwenden, um den Client zu erstellen.
    - id: auth
      type:
      - object
      description: Ein Objekt, das zum Authentifizieren von Anforderungen verwendet wird, und muss enthält eine der Optionen
    - id: auth.masterKey
      type:
      - string
      description: Der Autorisierungs-Hauptschlüssel zu verwenden, um den Client zu erstellen.
      optional: true
    - id: auth.resourceTokens
      type:
      - Object
      description: Ein Objekt, das Ressourcen-Token enthält. Schlüssel für das Objekt Ressourcen-Ids und Werte sind Ressourcentoken.
      optional: true
    - id: auth.permissionFeed
      type:
      - Array
      description: Ein Array von <xref:Permission> Objekte.
      optional: true
    - id: connectionPolicy
      type:
      - object
      description: Eine Instanz von <xref:ConnectionPolicy> Klasse. Dieser Parameter ist optional, und der Standardwert "connectionpolicy" verwendet werden, wenn nicht angegeben.
      optional: true
    - id: consistencyLevel
      type:
      - string
      description: Ein optionaler Parameter, der die konsistenzebene darstellt. Es dauert einen beliebigen Wert zwischen <xref:ConsistencyLevel>.
      optional: true
    content: new DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  langs:
  - js
- uid: documentdb.DocumentClient#getWriteEndpoint
  id: documentdb.DocumentClient#getWriteEndpoint
  parent: documentdb.DocumentClient
  name: getWriteEndpoint(callback)
  summary: Ruft den aktuellen Write-Endpunkt für ein Datenbankkonto mit georeplikation ab.
  fullName: documentdb.DocumentClient.getWriteEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: Die Rückruffunktion die endpoint(string) als Argument akzeptiert.
    content: function getWriteEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getReadEndpoint
  id: documentdb.DocumentClient#getReadEndpoint
  parent: documentdb.DocumentClient
  name: getReadEndpoint(callback)
  summary: Ruft den Endpunkt für ein Datenbankkonto mit georeplikation für gelesene Curent ab.
  fullName: documentdb.DocumentClient.getReadEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: Die Rückruffunktion die endpoint(string) als Argument akzeptiert.
    content: function getReadEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDatabase
  id: documentdb.DocumentClient#createDatabase
  parent: documentdb.DocumentClient
  name: createDatabase(body, options, callback)
  summary: >-
    Sendet eine Anforderung zum Erstellen einer Datenbank.

    <p>
     Eine Datenbank verwaltet die Benutzer, Berechtigungen und eine Reihe von Auflistungen.  <br>
     Jedes Azure Cosmos DB-Datenbankkonto kann mehrere unabhängige benannte Datenbanken, mit der Datenbank wird der logische Container für Daten zu unterstützen. <br>
     Jede Datenbank besteht aus einer oder mehreren Sammlungen, von denen jeder wiederum einen oder mehrere Dokumente enthalten. Da Datenbanken sind eine eine administrative-Ressource, den Service Master Key wird erforderlich sein, um zugreifen und eine Aktion, die mithilfe der APIs für die Benutzer erfolgreich abgeschlossen. <br>
    </p>
  fullName: documentdb.DocumentClient.createDatabase(body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: body
      type:
      - Object
      description: Ein Json-Objekt, das die zu erstellende Datenbank darstellt.
    - id: body.id
      type:
      - string
      description: Die Id der Datenbank.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createDatabase(body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createCollection
  id: documentdb.DocumentClient#createCollection
  parent: documentdb.DocumentClient
  name: createCollection(databaseLink, body, options, callback)
  summary: >-
    Erstellt eine Auflistung.

    <p>

    Eine Auflistung ist ein benannter logischer Container für Dokumente. <br>

    Eine Datenbank kann NULL oder mehr benannte Sammlungen enthalten, und jede Sammlung besteht aus null oder mehr JSON-Dokumente. <br>

    Schemafreie wird, die Dokumente in einer Auflistung müssen nicht, eine Struktur oder ein Felder freizugeben. <br>

    Da Auflistungen Anwendungsressourcen sind, können sie mit dem Hauptschlüssel oder Ressourcenschlüssel autorisiert werden. <br>

    </p>
  fullName: documentdb.DocumentClient.createCollection(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: body
      type:
      - object
      description: Stellt den Textkörper der Auflistung dar.
    - id: body.id
      type:
      - string
      description: Die Id der Auflistung.
    - id: body.indexingPolicy
      type:
      - documentdb.IndexingPolicy
      description: Die indizierungsrichtlinie der Sammlung zugeordnet wird.
    - id: body.defaultTtl
      type:
      - number
      description: Die Standardzeit für die Gültigkeitsdauer in Sekunden für Dokumente in einer Sammlung.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createCollection(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDocument
  id: documentdb.DocumentClient#createDocument
  parent: documentdb.DocumentClient
  name: createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    Erstellen eines Dokuments an.

    <p>

    Es gibt keine Set-Schema für JSON-Dokumente. Sie können eine beliebige Anzahl von benutzerdefinierten Eigenschaften sowie eine optionale Liste von Anlagen enthalten. <br>

    Ein Dokument eine Anwendungsressource und mit dem Hauptschlüssel oder Schlüssel Ressource autorisiert werden kann

    </p>
  fullName: documentdb.DocumentClient.createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Der Link der Auflistung oder das Verknüpfen der Datenbank bei Verwendung ein partitionResolver
    - id: body
      type:
      - object
      description: Stellt den Text des Dokuments dar. Kann eine beliebige Anzahl von benutzerdefinierten Eigenschaften enthalten.
    - id: body.id
      type:
      - string
      description: Die Id des Dokuments muss für jedes Dokument eindeutig sein.
      optional: true
    - id: body.ttl
      type:
      - number
      description: Die Zeit die Gültigkeitsdauer in Sekunden des Dokuments.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: Deaktiviert die automatische Id-Generierung. Wenn Id in den Text fehlt ein, und diese Option "true ist", wird ein Fehler zurückgegeben.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachment
  id: documentdb.DocumentClient#createAttachment
  parent: documentdb.DocumentClient
  name: createAttachment(documentLink, body, options, callback)
  summary: >-
    Erstellen Sie eine Anlage für das Document-Objekt.

    <p>

    Jedes Dokument kann NULL oder mehr Anlagen enthalten. Anlagen können jeden MIME-Typ - Text, Image, binäre Daten aufweisen. <br>

    Diese werden extern im Azure-Blob-Speicher gespeichert. Anlagen werden automatisch gelöscht, wenn das übergeordnete Dokument gelöscht wird.

    </P>
  fullName: documentdb.DocumentClient.createAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: body
      type:
      - Object
      description: Die Metadaten der die Anlage Medien wie Medien, ContentType definiert. Sie können weitere Eigenschaften als Teil der Metadatendokuments einfügen.
    - id: body.contentType
      type:
      - string
      description: Der MIME ContentType der Anlage.
    - id: body.media
      type:
      - string
      description: Medien-Link, der Inhalt der Anlage zugeordnet.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUser
  id: documentdb.DocumentClient#createUser
  parent: documentdb.DocumentClient
  name: createUser(databaseLink, body, options, callback)
  summary: Erstellen eines Datenbankbenutzers.
  fullName: documentdb.DocumentClient.createUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: body
      type:
      - object
      description: Stellt den Text des Benutzers dar.
    - id: body.id
      type:
      - string
      description: Die Id des Benutzers.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createPermission
  id: documentdb.DocumentClient#createPermission
  parent: documentdb.DocumentClient
  name: createPermission(userLink, body, options, callback)
  summary: >-
    Erstellen Sie eine Berechtigung an.

    <p> Eine Berechtigung stellt eine benutzerdefinierte Berechtigung Zugriff auf eine bestimmte Ressource, z. B. Dokumente oder Sammlungen dar.  </p>
  fullName: documentdb.DocumentClient.createPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Der Self-link des Benutzers.
    - id: body
      type:
      - object
      description: Stellt den Text des Berechtigungssatzes dar.
    - id: body.id
      type:
      - string
      description: Die Id des Berechtigungssatzes
    - id: body.permissionMode
      type:
      - string
      description: Der Modus der Berechtigung, muss es sich um einen Wert von <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: Die Verknüpfung der Ressource, der auf die Berechtigung angewendet wird.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createTrigger
  id: documentdb.DocumentClient#createTrigger
  parent: documentdb.DocumentClient
  name: createTrigger(collectionLink, trigger, options, callback)
  summary: >-
    Erstellen eines Triggers an.

    <p>

    Azure Cosmos DB unterstützt vor und Post-Trigger definiert, die in JavaScript ausgeführt werden erstellt, aktualisiert und löscht. <br>

    Weitere Informationen finden Sie in der serverseitigen JavaScript-API-Dokumentation.

    </p>
  fullName: documentdb.DocumentClient.createTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: trigger
      type:
      - object
      description: Stellt den Text des Triggers.
    - id: trigger.id
      type:
      - string
      description: Die Id des Triggers.
    - id: trigger.triggerType
      type:
      - string
      description: Der Typ des Triggers, muss einer der Werte von <xref:documentdb.TriggerType>.
    - id: trigger.triggerOperation
      type:
      - string
      description: Der Triggervorgang muss einen der Werte von <xref:documentdb.TriggerOperation>.
    - id: trigger.serverScript
      type:
      - function
      description: Der Text des Triggers, kann er übergeben werden, als auch als Zeichenfolgen dargestellt.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUserDefinedFunction
  id: documentdb.DocumentClient#createUserDefinedFunction
  parent: documentdb.DocumentClient
  name: createUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    Erstellen einer "UserDefinedFunction".

    <p>

    Azure Cosmos DB unterstützt die JavaScript-UDFs, der in Abfragen, gespeicherten Prozeduren und Trigger verwendet werden können. <br>

    Weitere Informationen finden Sie in der serverseitigen JavaScript-API-Dokumentation.

    </p>
  fullName: documentdb.DocumentClient.createUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: udf
      type:
      - object
      description: Stellt den Textkörper der "UserDefinedFunction" dar.
    - id: udf.id
      type:
      - string
      description: Die Id der benutzerdefinierten Funktion.
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Der Typ der benutzerdefinierten Funktion, sollte es einen der Werte von sein <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: Stellt den Text der benutzerdefinierten Funktion, sie übergeben werden kann, als auch als Zeichenfolgen dargestellt.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createStoredProcedure
  id: documentdb.DocumentClient#createStoredProcedure
  parent: documentdb.DocumentClient
  name: createStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Erstellen Sie eine gespeicherte Prozedur.

    <p>

    Azure Cosmos DB können gespeicherte Prozeduren in der Speicherebene, direkt für eine Dokumentsammlung ausgeführt werden soll. Das Skript <br>

    Ruft ab, ACID-Transaktionen für die primären Speicherpartition der angegebenen Sammlung ausgeführt. Weitere Informationen <br>

    finden Sie in der serverseitigen JavaScript-API-Dokumentation.

    </p>
  fullName: documentdb.DocumentClient.createStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: sproc
      type:
      - object
      description: Stellt den Text der gespeicherten Prozedur dar.
    - id: sproc.id
      type:
      - string
      description: Die Id der gespeicherten Prozedur.
    - id: sproc.serverScript
      type:
      - function
      description: Der Text der gespeicherten Prozedur, kann er übergeben werden, als auch als Zeichenfolgen dargestellt.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachmentAndUploadMedia
  id: documentdb.DocumentClient#createAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: Erstellen Sie eine Anlage für das Document-Objekt.
  fullName: documentdb.DocumentClient.createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: der Stream, der die Medien selbst darstellt, die hochgeladen werden muss.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabase
  id: documentdb.DocumentClient#readDatabase
  parent: documentdb.DocumentClient
  name: readDatabase(databaseLink, options, callback)
  summary: Liest eine Datenbank an.
  fullName: documentdb.DocumentClient.readDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollection
  id: documentdb.DocumentClient#readCollection
  parent: documentdb.DocumentClient
  name: readCollection(collectionLink, options, callback)
  summary: Liest eine Sammlung an.
  fullName: documentdb.DocumentClient.readCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocument
  id: documentdb.DocumentClient#readDocument
  parent: documentdb.DocumentClient
  name: readDocument(documentLink, options, callback)
  summary: Liest ein Dokument an.
  fullName: documentdb.DocumentClient.readDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachment
  id: documentdb.DocumentClient#readAttachment
  parent: documentdb.DocumentClient
  name: readAttachment(attachmentLink, options, callback)
  summary: Liest ein Anlagenobjekt an.
  fullName: documentdb.DocumentClient.readAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Der Self-link der Anlage.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUser
  id: documentdb.DocumentClient#readUser
  parent: documentdb.DocumentClient
  name: readUser(userLink, options, callback)
  summary: Liest einen Benutzer an.
  fullName: documentdb.DocumentClient.readUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Der Self-link des Benutzers.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermission
  id: documentdb.DocumentClient#readPermission
  parent: documentdb.DocumentClient
  name: readPermission(permissionLink, options, callback)
  summary: Liest eine Berechtigung an.
  fullName: documentdb.DocumentClient.readPermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Der Self-link der Berechtigung.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readPermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readTrigger
  id: documentdb.DocumentClient#readTrigger
  parent: documentdb.DocumentClient
  name: readTrigger(triggerLink, options, callback)
  summary: Liest ein Triggerobjekt.
  fullName: documentdb.DocumentClient.readTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Der Self-link des Triggers.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunction
  id: documentdb.DocumentClient#readUserDefinedFunction
  parent: documentdb.DocumentClient
  name: readUserDefinedFunction(udfLink, options, callback)
  summary: Liest ein Udf-Objekt.
  fullName: documentdb.DocumentClient.readUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Der Self-link des Benutzers, benutzerdefinierten Funktion.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedure
  id: documentdb.DocumentClient#readStoredProcedure
  parent: documentdb.DocumentClient
  name: readStoredProcedure(sprocLink, options, callback)
  summary: Liest eine "StoredProcedure"-Objekt an.
  fullName: documentdb.DocumentClient.readStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Der Self-link der gespeicherten Prozedur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflict
  id: documentdb.DocumentClient#readConflict
  parent: documentdb.DocumentClient
  name: readConflict(conflictLink, options, callback)
  summary: Liest einen Konflikt.
  fullName: documentdb.DocumentClient.readConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: Der Self-link des Konflikts.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabases
  id: documentdb.DocumentClient#readDatabases
  parent: documentdb.DocumentClient
  name: readDatabases(options)
  summary: Listet alle Datenbanken.
  fullName: documentdb.DocumentClient.readDatabases(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readDatabases(options)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollections
  id: documentdb.DocumentClient#readCollections
  parent: documentdb.DocumentClient
  name: readCollections(databaseLink, options)
  summary: Alle Sammlungen in dieser Datenbank abrufen.
  fullName: documentdb.DocumentClient.readCollections(databaseLink, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readCollections(databaseLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocuments
  id: documentdb.DocumentClient#readDocuments
  parent: documentdb.DocumentClient
  name: readDocuments(collectionLink, options)
  summary: Alle Dokumente in dieser Sammlung abrufen.
  fullName: documentdb.DocumentClient.readDocuments(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readDocuments(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readPartitionKeyRanges
  id: documentdb.DocumentClient#readPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: readPartitionKeyRanges(collectionLink, options)
  summary: Abrufen aller Partition wichtige Bereiche in dieser Auflistung.
  fullName: documentdb.DocumentClient.readPartitionKeyRanges(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readPartitionKeyRanges(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachments
  id: documentdb.DocumentClient#readAttachments
  parent: documentdb.DocumentClient
  name: readAttachments(documentLink, options)
  summary: Alle Anlagen, die für dieses Dokument zu erhalten.
  fullName: documentdb.DocumentClient.readAttachments(documentLink, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readAttachments(documentLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUsers
  id: documentdb.DocumentClient#readUsers
  parent: documentdb.DocumentClient
  name: readUsers(databaseLink, feedOptions)
  summary: Rufen Sie aller Benutzer in dieser Datenbank ab.
  fullName: documentdb.DocumentClient.readUsers(databaseLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readUsers(databaseLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermissions
  id: documentdb.DocumentClient#readPermissions
  parent: documentdb.DocumentClient
  name: readPermissions(userLink, feedOptions)
  summary: Rufen Sie alle Berechtigungen für diesen Benutzer.
  fullName: documentdb.DocumentClient.readPermissions(userLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Der Self-link des Benutzers.
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readPermissions(userLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readTriggers
  id: documentdb.DocumentClient#readTriggers
  parent: documentdb.DocumentClient
  name: readTriggers(collectionLink, options)
  summary: Alle Trigger in dieser Sammlung abrufen.
  fullName: documentdb.DocumentClient.readTriggers(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readTriggers(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunctions
  id: documentdb.DocumentClient#readUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: readUserDefinedFunctions(collectionLink, options)
  summary: Rufen Sie alle UserDefinedFunctions in dieser Auflistung.
  fullName: documentdb.DocumentClient.readUserDefinedFunctions(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readUserDefinedFunctions(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedures
  id: documentdb.DocumentClient#readStoredProcedures
  parent: documentdb.DocumentClient
  name: readStoredProcedures(collectionLink, options)
  summary: Rufen Sie alle gespeicherte Prozeduren in dieser Auflistung.
  fullName: documentdb.DocumentClient.readStoredProcedures(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readStoredProcedures(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflicts
  id: documentdb.DocumentClient#readConflicts
  parent: documentdb.DocumentClient
  name: readConflicts(collectionLink, options)
  summary: Alle Konflikte in dieser Sammlung abrufen.
  fullName: documentdb.DocumentClient.readConflicts(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readConflicts(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDatabases
  id: documentdb.DocumentClient#queryDatabases
  parent: documentdb.DocumentClient
  name: queryDatabases(query, options)
  summary: Listet alle Datenbanken, die eine Abfrage zu erfüllen.
  fullName: documentdb.DocumentClient.queryDatabases(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryDatabases(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryCollections
  id: documentdb.DocumentClient#queryCollections
  parent: documentdb.DocumentClient
  name: queryCollections(databaseLink, query, options)
  summary: Fragen Sie die Sammlungen für die Datenbank an.
  fullName: documentdb.DocumentClient.queryCollections(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryCollections(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDocuments
  id: documentdb.DocumentClient#queryDocuments
  parent: documentdb.DocumentClient
  name: queryDocuments(documentsFeedOrDatabaseLink, query, options)
  summary: Fragen Sie die Dokumente für die Auflistung ein.
  fullName: documentdb.DocumentClient.queryDocuments(documentsFeedOrDatabaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Der Link der Auflistung oder das Verknüpfen der Datenbank bei Verwendung ein partitionResolver
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    - id: options.partitionKey
      type:
      - object
      description: Optionale partitionsschlüssels, mit dem partitionResolver verwendet werden
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryDocuments(documentsFeedOrDatabaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPartitionKeyRanges
  id: documentdb.DocumentClient#queryPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: queryPartitionKeyRanges(databaseLink, query, options)
  summary: Fragen Sie die partitionsschlüsselbereiche
  fullName: documentdb.DocumentClient.queryPartitionKeyRanges(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryPartitionKeyRanges(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryAttachments
  id: documentdb.DocumentClient#queryAttachments
  parent: documentdb.DocumentClient
  name: queryAttachments(documentLink, query, options)
  summary: Fragen Sie ab, Anlagen, die für das Dokument.
  fullName: documentdb.DocumentClient.queryAttachments(documentLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryAttachments(documentLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUsers
  id: documentdb.DocumentClient#queryUsers
  parent: documentdb.DocumentClient
  name: queryUsers(databaseLink, query, options)
  summary: Der Benutzer für die Datenbank Abfragen.
  fullName: documentdb.DocumentClient.queryUsers(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryUsers(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPermissions
  id: documentdb.DocumentClient#queryPermissions
  parent: documentdb.DocumentClient
  name: queryPermissions(userLink, query, options)
  summary: Fragen Sie die Berechtigung für den Benutzer.
  fullName: documentdb.DocumentClient.queryPermissions(userLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Der Self-link des Benutzers.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryPermissions(userLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryTriggers
  id: documentdb.DocumentClient#queryTriggers
  parent: documentdb.DocumentClient
  name: queryTriggers(collectionLink, query, options)
  summary: Fragen Sie die Trigger für die Auflistung ein.
  fullName: documentdb.DocumentClient.queryTriggers(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryTriggers(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUserDefinedFunctions
  id: documentdb.DocumentClient#queryUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: queryUserDefinedFunctions(collectionLink, query, options)
  summary: Abfragen der Benutzer definiert die Funktionen für die Auflistung.
  fullName: documentdb.DocumentClient.queryUserDefinedFunctions(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryUserDefinedFunctions(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryStoredProcedures
  id: documentdb.DocumentClient#queryStoredProcedures
  parent: documentdb.DocumentClient
  name: queryStoredProcedures(collectionLink, query, options)
  summary: Fragen Sie die gespeicherte Prozeduren für die Sammlung an.
  fullName: documentdb.DocumentClient.queryStoredProcedures(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryStoredProcedures(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryConflicts
  id: documentdb.DocumentClient#queryConflicts
  parent: documentdb.DocumentClient
  name: queryConflicts(collectionLink, query, options)
  summary: Fragen Sie die Konflikte für die Auflistung ein.
  fullName: documentdb.DocumentClient.queryConflicts(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Stellt die feed-Optionen dar.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryConflicts(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDatabase
  id: documentdb.DocumentClient#deleteDatabase
  parent: documentdb.DocumentClient
  name: deleteDatabase(databaseLink, options, callback)
  summary: Löschen Sie das Database-Objekt.
  fullName: documentdb.DocumentClient.deleteDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteCollection
  id: documentdb.DocumentClient#deleteCollection
  parent: documentdb.DocumentClient
  name: deleteCollection(collectionLink, options, callback)
  summary: Löschen Sie das-Objekt.
  fullName: documentdb.DocumentClient.deleteCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDocument
  id: documentdb.DocumentClient#deleteDocument
  parent: documentdb.DocumentClient
  name: deleteDocument(documentLink, options, callback)
  summary: Löschen Sie das Document-Objekt.
  fullName: documentdb.DocumentClient.deleteDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteAttachment
  id: documentdb.DocumentClient#deleteAttachment
  parent: documentdb.DocumentClient
  name: deleteAttachment(attachmentLink, options, callback)
  summary: Löschen Sie die Anlagenobjekt.
  fullName: documentdb.DocumentClient.deleteAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Der Self-link der Anlage.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUser
  id: documentdb.DocumentClient#deleteUser
  parent: documentdb.DocumentClient
  name: deleteUser(userLink, options, callback)
  summary: Löschen Sie das User-Objekt.
  fullName: documentdb.DocumentClient.deleteUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Der Self-link des Benutzers.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deletePermission
  id: documentdb.DocumentClient#deletePermission
  parent: documentdb.DocumentClient
  name: deletePermission(permissionLink, options, callback)
  summary: Löschen Sie das Berechtigungsobjekt.
  fullName: documentdb.DocumentClient.deletePermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Der Self-link der Berechtigung.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deletePermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteTrigger
  id: documentdb.DocumentClient#deleteTrigger
  parent: documentdb.DocumentClient
  name: deleteTrigger(triggerLink, options, callback)
  summary: Löschen von Trigger-Objekts.
  fullName: documentdb.DocumentClient.deleteTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Der Self-link des Triggers.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUserDefinedFunction
  id: documentdb.DocumentClient#deleteUserDefinedFunction
  parent: documentdb.DocumentClient
  name: deleteUserDefinedFunction(udfLink, options, callback)
  summary: Delete, UserDefinedFunction-Objekts.
  fullName: documentdb.DocumentClient.deleteUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Der Self-link des Benutzers, benutzerdefinierten Funktion.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteStoredProcedure
  id: documentdb.DocumentClient#deleteStoredProcedure
  parent: documentdb.DocumentClient
  name: deleteStoredProcedure(sprocLink, options, callback)
  summary: Löschen Sie das "StoredProcedure"-Objekt an.
  fullName: documentdb.DocumentClient.deleteStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Der Self-link der gespeicherten Prozedur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteConflict
  id: documentdb.DocumentClient#deleteConflict
  parent: documentdb.DocumentClient
  name: deleteConflict(conflictLink, options, callback)
  summary: Der Konfliktobjekt gelöscht werden.
  fullName: documentdb.DocumentClient.deleteConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: Der Self-link des Konflikts.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function deleteConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceCollection
  id: documentdb.DocumentClient#replaceCollection
  parent: documentdb.DocumentClient
  name: replaceCollection(collectionLink, collection, options, callback)
  summary: Ersetzen Sie die Dokumentsammlung an.
  fullName: documentdb.DocumentClient.replaceCollection(collectionLink, collection, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Dokumentsammlung.
    - id: collection
      type:
      - object
      description: Stellen Sie die neue Auflistung Dokumenttext dar.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replaceCollection(collectionLink, collection, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceDocument
  id: documentdb.DocumentClient#replaceDocument
  parent: documentdb.DocumentClient
  name: replaceDocument(documentLink, document, options, callback)
  summary: Ersetzen Sie das Document-Objekt.
  fullName: documentdb.DocumentClient.replaceDocument(documentLink, document, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: document
      type:
      - object
      description: Stellen Sie dem neuen Dokumenttext dar.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replaceDocument(documentLink, document, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceAttachment
  id: documentdb.DocumentClient#replaceAttachment
  parent: documentdb.DocumentClient
  name: replaceAttachment(attachmentLink, attachment, options, callback)
  summary: Ersetzen Sie die Attachment-Objekt.
  fullName: documentdb.DocumentClient.replaceAttachment(attachmentLink, attachment, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Der Self-link der Anlage.
    - id: attachment
      type:
      - object
      description: Stellen Sie den neuen Text für die Anlage dar.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replaceAttachment(attachmentLink, attachment, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUser
  id: documentdb.DocumentClient#replaceUser
  parent: documentdb.DocumentClient
  name: replaceUser(userLink, user, options, callback)
  summary: Ersetzen Sie das User-Objekt.
  fullName: documentdb.DocumentClient.replaceUser(userLink, user, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Der Self-link des Benutzers.
    - id: user
      type:
      - object
      description: Stellen Sie den neuen Benutzer Text dar.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replaceUser(userLink, user, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replacePermission
  id: documentdb.DocumentClient#replacePermission
  parent: documentdb.DocumentClient
  name: replacePermission(permissionLink, permission, options, callback)
  summary: Ersetzen Sie das Berechtigungsobjekt.
  fullName: documentdb.DocumentClient.replacePermission(permissionLink, permission, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Der Self-link der Berechtigung.
    - id: permission
      type:
      - object
      description: Stellen Sie den neuen Text für die Berechtigung dar.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replacePermission(permissionLink, permission, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceTrigger
  id: documentdb.DocumentClient#replaceTrigger
  parent: documentdb.DocumentClient
  name: replaceTrigger(triggerLink, trigger, options, callback)
  summary: Ersetzen Sie die Trigger-Objekts.
  fullName: documentdb.DocumentClient.replaceTrigger(triggerLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Der Self-link des Triggers.
    - id: trigger
      type:
      - object
      description: Stellen Sie den Text des neuen Triggers dar.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replaceTrigger(triggerLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUserDefinedFunction
  id: documentdb.DocumentClient#replaceUserDefinedFunction
  parent: documentdb.DocumentClient
  name: replaceUserDefinedFunction(udfLink, udf, options, callback)
  summary: Ersetzen Sie dies UserDefinedFunction-Objekts.
  fullName: documentdb.DocumentClient.replaceUserDefinedFunction(udfLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Der Self-link des Benutzers, benutzerdefinierten Funktion.
    - id: udf
      type:
      - object
      description: Stellen Sie den neuen Text für die benutzerdefinierte Funktion dar.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replaceUserDefinedFunction(udfLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceStoredProcedure
  id: documentdb.DocumentClient#replaceStoredProcedure
  parent: documentdb.DocumentClient
  name: replaceStoredProcedure(sprocLink, sproc, options, callback)
  summary: Ersetzen Sie das "StoredProcedure"-Objekt an.
  fullName: documentdb.DocumentClient.replaceStoredProcedure(sprocLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Der Self-link der gespeicherten Prozedur.
    - id: sproc
      type:
      - object
      description: Stellen Sie die neuen Sproc Text dar.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replaceStoredProcedure(sprocLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertDocument
  id: documentdb.DocumentClient#upsertDocument
  parent: documentdb.DocumentClient
  name: upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    Ein Dokument "Upsert".

    <p>

    Es gibt keine Set-Schema für JSON-Dokumente. Sie können eine beliebige Anzahl von benutzerdefinierten Eigenschaften sowie eine optionale Liste von Anlagen enthalten. <br>

    Ein Dokument eine Anwendungsressource und mit dem Hauptschlüssel oder Schlüssel Ressource autorisiert werden kann

    </p>
  fullName: documentdb.DocumentClient.upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Der Link der Auflistung oder das Verknüpfen der Datenbank bei Verwendung ein partitionResolver
    - id: body
      type:
      - object
      description: Stellt den Text des Dokuments dar. Kann eine beliebige Anzahl von benutzerdefinierten Eigenschaften enthalten.
    - id: body.id
      type:
      - string
      description: Die Id des Dokuments muss für jedes Dokument eindeutig sein.
      optional: true
    - id: body.ttl
      type:
      - number
      description: Die Zeit die Gültigkeitsdauer in Sekunden des Dokuments.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: Deaktiviert die automatische Id-Generierung. Wenn Id in den Text fehlt ein, und diese Option "true ist", wird ein Fehler zurückgegeben.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachment
  id: documentdb.DocumentClient#upsertAttachment
  parent: documentdb.DocumentClient
  name: upsertAttachment(documentLink, body, options, callback)
  summary: "\"Upsert\" eine Anlage für das Document-Objekt.\n<p>\nJedes Dokument kann NULL oder mehr Anlagen enthalten. Anlagen können jeden MIME-Typ - Text, Image, binäre Daten aufweisen. <br>\nDiese werden extern im Azure-Blob-Speicher gespeichert. Anlagen werden automatisch gelöscht, wenn das übergeordnete Dokument gelöscht wird.\n</P>"
  fullName: documentdb.DocumentClient.upsertAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: body
      type:
      - Object
      description: Die Metadaten der die Anlage Medien wie Medien, ContentType definiert. Sie können weitere Eigenschaften als Teil der Metadatendokuments einfügen.
    - id: body.contentType
      type:
      - string
      description: Der MIME ContentType der Anlage.
    - id: body.media
      type:
      - string
      description: Medien-Link, der Inhalt der Anlage zugeordnet.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function upsertAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUser
  id: documentdb.DocumentClient#upsertUser
  parent: documentdb.DocumentClient
  name: upsertUser(databaseLink, body, options, callback)
  summary: Ein Datenbankbenutzer "Upsert".
  fullName: documentdb.DocumentClient.upsertUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Der Self-link der Datenbank.
    - id: body
      type:
      - object
      description: Stellt den Text des Benutzers dar.
    - id: body.id
      type:
      - string
      description: Die Id des Benutzers.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function upsertUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertPermission
  id: documentdb.DocumentClient#upsertPermission
  parent: documentdb.DocumentClient
  name: upsertPermission(userLink, body, options, callback)
  summary: "\"Upsert\" eine Berechtigung.\n<p> Eine Berechtigung stellt eine benutzerdefinierte Berechtigung Zugriff auf eine bestimmte Ressource, z. B. Dokumente oder Sammlungen dar.  </p>"
  fullName: documentdb.DocumentClient.upsertPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Der Self-link des Benutzers.
    - id: body
      type:
      - object
      description: Stellt den Text des Berechtigungssatzes dar.
    - id: body.id
      type:
      - string
      description: Die Id des Berechtigungssatzes
    - id: body.permissionMode
      type:
      - string
      description: Der Modus der Berechtigung, muss es sich um einen Wert von <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: Die Verknüpfung der Ressource, der auf die Berechtigung angewendet wird.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function upsertPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertTrigger
  id: documentdb.DocumentClient#upsertTrigger
  parent: documentdb.DocumentClient
  name: upsertTrigger(collectionLink, trigger, options, callback)
  summary: "\"Upsert\", eines Triggers.\n<p>\nAzure Cosmos DB unterstützt vor und Post-Trigger definiert, die in JavaScript ausgeführt werden erstellt, aktualisiert und löscht. <br>\nWeitere Informationen finden Sie in der serverseitigen JavaScript-API-Dokumentation.\n</p>"
  fullName: documentdb.DocumentClient.upsertTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: trigger
      type:
      - object
      description: Stellt den Text des Triggers.
    - id: trigger.id
      type:
      - string
      description: Die Id des Triggers.
    - id: trigger.triggerType
      type:
      - string
      description: Der Typ des Triggers, muss einer der Werte von <xref:documentdb.TriggerType>.
    - id: trigger.triggerOperation
      type:
      - string
      description: Der Triggervorgang muss einen der Werte von <xref:documentdb.TriggerOperation>.
    - id: trigger.serverScript
      type:
      - function
      description: Der Text des Triggers, kann er übergeben werden, als auch als Zeichenfolgen dargestellt.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function upsertTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUserDefinedFunction
  id: documentdb.DocumentClient#upsertUserDefinedFunction
  parent: documentdb.DocumentClient
  name: upsertUserDefinedFunction(collectionLink, udf, options, callback)
  summary: "\"Upsert\" einer \"UserDefinedFunction\".\n<p>\nAzure Cosmos DB unterstützt die JavaScript-UDFs, der in Abfragen, gespeicherten Prozeduren und Trigger verwendet werden können. <br>\nWeitere Informationen finden Sie in der serverseitigen JavaScript-API-Dokumentation.\n</p>"
  fullName: documentdb.DocumentClient.upsertUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: udf
      type:
      - object
      description: Stellt den Textkörper der "UserDefinedFunction" dar.
    - id: udf.id
      type:
      - string
      description: Die Id der benutzerdefinierten Funktion.
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Der Typ der benutzerdefinierten Funktion, sollte es einen der Werte von sein <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: Stellt den Text der benutzerdefinierten Funktion, sie übergeben werden kann, als auch als Zeichenfolgen dargestellt.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function upsertUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertStoredProcedure
  id: documentdb.DocumentClient#upsertStoredProcedure
  parent: documentdb.DocumentClient
  name: upsertStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Eine gespeicherte Prozedur "Upsert".

    <p>

    Azure Cosmos DB können gespeicherte Prozeduren in der Speicherebene, direkt für eine Dokumentsammlung ausgeführt werden soll. Das Skript <br>

    Ruft ab, ACID-Transaktionen für die primären Speicherpartition der angegebenen Sammlung ausgeführt. Weitere Informationen <br>

    finden Sie in der serverseitigen JavaScript-API-Dokumentation.

    </p>
  fullName: documentdb.DocumentClient.upsertStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Der Self-link der Auflistung.
    - id: sproc
      type:
      - object
      description: Stellt den Text der gespeicherten Prozedur dar.
    - id: sproc.id
      type:
      - string
      description: Die Id der gespeicherten Prozedur.
    - id: sproc.serverScript
      type:
      - function
      description: Der Text der gespeicherten Prozedur, kann er übergeben werden, als auch als Zeichenfolgen dargestellt.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function upsertStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  id: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: "\"Upsert\" eine Anlage für das Document-Objekt."
  fullName: documentdb.DocumentClient.upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Der Self-link des Dokuments.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: der Stream, der die Medien selbst darstellt, die hochgeladen werden muss.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Die Optionen für die Anforderung.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readMedia
  id: documentdb.DocumentClient#readMedia
  parent: documentdb.DocumentClient
  name: readMedia(mediaLink, callback)
  summary: Lesen Sie die Medien für das Anlagenobjekt.
  fullName: documentdb.DocumentClient.readMedia(mediaLink, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: Der Media-Link der Medien in der Anlage.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Rückruf für die Anforderung der Ergebnisparameter kann sein, einen Puffer oder einem Stream abhängig vom Wert <xref:documentdb.MediaReadMode>.
    content: function readMedia(mediaLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#updateMedia
  id: documentdb.DocumentClient#updateMedia
  parent: documentdb.DocumentClient
  name: updateMedia(mediaLink, readableStream, options, callback)
  summary: Aktualisieren von Media für die Anlage
  fullName: documentdb.DocumentClient.updateMedia(mediaLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: Der Media-Link der Medien in der Anlage.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: Der Stream, der die Medien selbst darstellt, die hochgeladen werden muss.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Optionen für die Medien
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function updateMedia(mediaLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#executeStoredProcedure
  id: documentdb.DocumentClient#executeStoredProcedure
  parent: documentdb.DocumentClient
  name: executeStoredProcedure(sprocLink, params, options, callback)
  summary: Führen Sie die gespeicherte Prozedur, die vom Objekt dargestellt wird mit Partitionsschlüssel an.
  fullName: documentdb.DocumentClient.executeStoredProcedure(sprocLink, params, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Der Self-link der gespeicherten Prozedur.
    - id: params
      type:
      - Array
      description: Stellen Sie die Parameter der gespeicherten Prozedur dar.
      optional: true
    - id: options
      type:
      - Object
      description: Partitionsschlüssel
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function executeStoredProcedure(sprocLink, params, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceOffer
  id: documentdb.DocumentClient#replaceOffer
  parent: documentdb.DocumentClient
  name: replaceOffer(offerLink, offer, callback)
  summary: Ersetzen Sie das angebotsobjekt.
  fullName: documentdb.DocumentClient.replaceOffer(offerLink, offer, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: Der Self-link des Angebots.
    - id: offer
      type:
      - object
      description: Stellen Sie den neuen Angebot Text dar.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function replaceOffer(offerLink, offer, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffer
  id: documentdb.DocumentClient#readOffer
  parent: documentdb.DocumentClient
  name: readOffer(offerLink, callback)
  summary: Liest ein Angebot an.
  fullName: documentdb.DocumentClient.readOffer(offerLink, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: Der Self-link des Angebots.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung.
    content: function readOffer(offerLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffers
  id: documentdb.DocumentClient#readOffers
  parent: documentdb.DocumentClient
  name: readOffers(options)
  summary: Listet alle Angebote.
  fullName: documentdb.DocumentClient.readOffers(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function readOffers(options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryOffers
  id: documentdb.DocumentClient#queryOffers
  parent: documentdb.DocumentClient
  name: queryOffers(query, options)
  summary: Listet alle Angebote, die eine Abfrage zu erfüllen.
  fullName: documentdb.DocumentClient.queryOffers(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Eine SQL-Abfrage.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Die feed-Optionen.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Eine Instanz des QueryIterator lesen-Feed zu behandeln.'
    content: function queryOffers(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#getDatabaseAccount
  id: documentdb.DocumentClient#getDatabaseAccount
  parent: documentdb.DocumentClient
  name: getDatabaseAccount(callback)
  summary: Ruft die Kontoinformationen für die Datenbank ab.
  fullName: documentdb.DocumentClient.getDatabaseAccount(callback)
  type: Function
  syntax:
    parameters:
    - id: options.urlConnection
      type:
      - string
      description: Die Endpunkt-Url, dessen Datenbankkonto abgerufen werden muss. Wenn nicht vorhanden und der aktuelle Client-Url verwendet werden.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Der Rückruf für die Anforderung. Der zweite Parameter des Rückrufs wird vom Typ <xref:documentdb.DatabaseAccount>.
    content: function getDatabaseAccount(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getSessionToken
  id: documentdb.DocumentClient#getSessionToken
  parent: documentdb.DocumentClient
  name: getSessionToken(collectionLink)
  summary: Ruft die SessionToken für einen bestimmten collectionLink
  fullName: documentdb.DocumentClient.getSessionToken(collectionLink)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      description: Der Link der Auflistung, die für die das Sitzungstoken, das erforderlich ist
    content: function getSessionToken(collectionLink)
  langs:
  - js
references:
- uid: documentdb.QueryIterator
  name: QueryIterator
  fullName: documentdb.QueryIterator
  isExternal: false
