### YamlMime:UniversalReference
ms.openlocfilehash: 32c61f1d1e0be7f27878b5ad6d4a04b662dc92f9
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 08/22/2018
ms.locfileid: "41682469"
items:
- uid: azure-iot-common.ExponentialBackOffWithJitter
  name: ExponentialBackOffWithJitter
  fullName: ExponentialBackOffWithJitter
  children:
  - azure-iot-common.ExponentialBackOffWithJitter.constructor
  - azure-iot-common.ExponentialBackOffWithJitter.immediateFirstRetry
  - azure-iot-common.ExponentialBackOffWithJitter.nextRetryTimeout
  - azure-iot-common.ExponentialBackOffWithJitter.normalParameters
  - azure-iot-common.ExponentialBackOffWithJitter.shouldRetry
  - azure-iot-common.ExponentialBackOffWithJitter.throttledParameters
  langs:
  - typeScript
  type: class
  summary: >-
    <span data-ttu-id="d5481-101">Implementiert einen exponentiellen Backoff mit Jitter wiederholungsstrategie.</span><span class="sxs-lookup"><span data-stu-id="d5481-101">Implements an Exponential Backoff with Jitter retry strategy.</span></span>

    <span data-ttu-id="d5481-102">Die Funktion, die das nächste Verarbeitungsintervall zu berechnen, wird der folgende (X ist die Wiederholung Xth): F(x) = min (Cmin + (2^(x-1)-1) \* Rand (C \* (1 – Jd) C\*(1-Ju)), Cmax)</span><span class="sxs-lookup"><span data-stu-id="d5481-102">The function to calculate the next interval is the following (x is the xth retry): F(x) = min(Cmin+ (2^(x-1)-1) \* rand(C \* (1 – Jd), C\*(1-Ju)), Cmax)</span></span>
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.constructor
  name: ExponentialBackOffWithJitter
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="d5481-103">Initialisiert eine neue Instanz der dem <xref:azure-iot-common.ExponentialBackOffWithJitter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d5481-103">Initializes a new instance of the <xref:azure-iot-common.ExponentialBackOffWithJitter> class.</span></span>
  syntax:
    content: 'new ExponentialBackOffWithJitter(immediateFirstRetry?: boolean, errorFilter?: ErrorFilter)'
    parameters:
    - id: immediateFirstRetry
      type:
      - boolean
      description: >
        <span data-ttu-id="d5481-104">boolescher Wert, der angibt, ob der erste Wiederholungsversuch sofort (Standard) werden oder das erste Intervall (c++-Wert) warten soll.</span><span class="sxs-lookup"><span data-stu-id="d5481-104">boolean indicating whether the first retry should be immediate (default) or wait the first interval (c value).</span></span>
      optional: true
    - id: errorFilter
      type:
      - ErrorFilter
      description: ''
      optional: true
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.immediateFirstRetry
  name: immediateFirstRetry
  fullName: immediateFirstRetry
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d5481-105">Boolescher Wert, der angibt, ob der erste Wiederholungsversuch sofort nutzbar sein sollen (wenn auf True festgelegt ist) oder nach der Verzögerung normalParameters.c (wenn auf "false" festgelegt).</span><span class="sxs-lookup"><span data-stu-id="d5481-105">Boolean indicating whether the first retry should be immediate (if set to true) or after the normalParameters.c delay (if set to false).</span></span>
  syntax:
    content: 'immediateFirstRetry: boolean'
    return:
      type:
      - boolean
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.nextRetryTimeout
  name: nextRetryTimeout
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d5481-106">Berechnet das Intervall, wiederholen Sie dann auf jeder neuen vorläufige Wiederholung zu warten.</span><span class="sxs-lookup"><span data-stu-id="d5481-106">Computes the interval to wait before retrying at each new retry tentative.</span></span>
  syntax:
    content: 'function nextRetryTimeout(retryCount: number, isThrottled: boolean)'
    parameters:
    - id: retryCount
      type:
      - number
      description: <span data-ttu-id="d5481-107">Aktuelle "Wiederholen" mit Vorbehalt.</span><span class="sxs-lookup"><span data-stu-id="d5481-107">Current retry tentative.</span></span>
    - id: isThrottled
      type:
      - boolean
      description: <span data-ttu-id="d5481-108">Boolescher Wert, der angibt, ob der Azure IoT-Hub Vorgänge eingeschränkt wird.</span><span class="sxs-lookup"><span data-stu-id="d5481-108">Boolean indicating whether the Azure IoT hub is throttling operations.</span></span>
    return:
      type:
      - number
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.normalParameters
  name: normalParameters
  fullName: normalParameters
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d5481-109">Wiederholen Sie die Parameter, mit denen die Verzögerung zwischen den einzelnen Wiederholungsversuchen im normalen Situationen zu berechnen (d. h. nicht eingeschränkt).</span><span class="sxs-lookup"><span data-stu-id="d5481-109">Retry parameters used to calculate the delay between each retry in normal situations (ie. not throttled).</span></span>
  syntax:
    content: 'normalParameters: ExponentialBackoffWithJitterParameters'
    return:
      type:
      - azure-iot-common.ExponentialBackoffWithJitterParameters
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.shouldRetry
  name: shouldRetry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d5481-110">Basierend auf den Fehler, die als Argument übergeben, das bestimmt, ob ein Fehler vorübergehend ist, und wenn der Vorgang sollte oder nicht wiederholt werden.</span><span class="sxs-lookup"><span data-stu-id="d5481-110">Based on the error passed as argument, determines if an error is transient and if the operation should be retried or not.</span></span>
  syntax:
    content: 'function shouldRetry(error: Error)'
    parameters:
    - id: error
      type:
      - Error
      description: <span data-ttu-id="d5481-111">Der Fehler durch den Vorgang.</span><span class="sxs-lookup"><span data-stu-id="d5481-111">The error encountered by the operation.</span></span>
    return:
      type:
      - boolean
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.throttledParameters
  name: throttledParameters
  fullName: throttledParameters
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d5481-112">Wiederholen Sie den Parameter verwendet, um die Verzögerung zwischen den einzelnen Wiederholungsversuchen in eingeschränkter Situationen zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="d5481-112">Retry parameters used to calculate the delay between each retry in throttled situations.</span></span>
  syntax:
    content: 'throttledParameters: ExponentialBackoffWithJitterParameters'
    return:
      type:
      - azure-iot-common.ExponentialBackoffWithJitterParameters
  package: azure-iot-common
references:
- uid: azure-iot-common.ExponentialBackoffWithJitterParameters
  spec.typeScript:
  - name: ExponentialBackoffWithJitterParameters
    fullName: ExponentialBackoffWithJitterParameters
    uid: azure-iot-common.ExponentialBackoffWithJitterParameters
